title,contributor_name,code_link,mentors,organization,technologies,topics,project_details,url
Automate listing of members of technical steering committee,14Richa,https://14richa.github.io/2023-08-25/reflection-gsoc,"Lukasz Gornicki, acethecreator, Saurav K",Postman,"javascript, git, rest, graphql, mermaid.js","web, workflows, Github APi, GH Action","The goal of this GSOC program is to automate the processes around project governance. This project aims to automate maintaining the Maintainers.yaml file which contains the list of maintainers and TSC members of AsyncAPI. The tasks involve implementing workflows to automatically update the member's list based on changes in other files, inviting new maintainers and TSC members, updating the Emeritus.yaml file when someone is removed, and aggregating helpful information in the Maintainers.yaml file. These automation and improvements will make it easier to manage the maintainers and TSC members of AsyncAPI.",https://summerofcode.withgoogle.com/programs/2023/projects/YOu23jKE
AsyncAPI : Introduce UI Tests and Refactoring in Website,Aadrika Bhargava,https://reachaadrika.hashnode.dev/wrapping-things-up-gsoc23postmanasyncapi,"Akshat Nema, Abir Pal",Postman,"javascript, AsyncAPI, Cypress, UI Testing","testing, web, AsyncAPI, UI Testing","This proposal is submitted for AsyncAPI 's Introduce UI Testing to Website . Current version of the website is based on NextJS and deployed on Netlify , however there is no well defined testing suite associated with it . I will work on adding the required Unit tests , Integration tests and end to end tests using Cypress to the website . By the end of Google Summer of Code , I aim to have a clear well uniformed set of testing suites for the website .",https://summerofcode.withgoogle.com/programs/2023/projects/uq2r9PUC
IMPROVING MAIL INTEGRATION IN KALENDAR,Aakarsh MJ,https://community.kde.org/GSoc/2023/StatusReports/AakarshMJ,"Carl Schwan, Claudio Cambra",KDE Community,"linux, c++, qt, qml, cmake, akonadi-api, kde-pim",desktop application,The aim of this project is to improve Mail Integration in Kalendar by implementing the following goals: 1) Adding email composition 2) Implementing advanced search functionality 3) Adding signature management [Optional],https://summerofcode.withgoogle.com/programs/2023/projects/5r2LyurQ
Towards a Neural Extraction Framework,Aakash Thatte,https://github.com/dbpedia/neural-extraction-framework/tree/main/GSoC23,"Tommaso Soru, Diego Moussallem, Ziwei XU",DBpedia,"python, sparql","nlp, graph, Relation Extraction","The Dbpedia property dbo:wikiPageWikiLink helps us to see for the articles which have the outgoing link to the Berlin_Wall article in their Wikipedia article i.e. the text of the Wikipedia article has the hyperlink present for the Berlin_Wall article. This forms an entity relationship between articles such that Berlin_Wall is the subject entity and the articles that point to it are base entities. However, it was found that only few of these articles had some other predicate relationship with the Berlin_Wall article. Currently, such relationships are extracted from tables and the info boxes. In this project, we aim to make use of the unstructured text on the Wikipedia page to find relations among entities. The goal of this project is to develop a framework for predicate resolution of wiki links among entities. I will be using some recent research work on relation extraction to achieve this.",https://summerofcode.withgoogle.com/programs/2023/projects/cKuagkf8
Extend the Cppyy support in Numba,Aaron Jomy,https://maximusron.github.io/2022-09-23/GSoC-23-CERN,"Baidyanath Kundu, Vassil Vassilev, Wim Lavrijsen",CERN-HSF,"python, c++, numba","C++ bindings, Cross Language support, Python Compilation","Numba is a JIT compiler that translates a subset of Python and NumPy code into fast machine code. Cppyy is an automatic, run-time, Python-C++ bindings generator, for calling C++ from Python and Python from C++. Cppyy has to pay a time penalty each time it needs to switch between languages which can multiply into large slowdowns when using loops with cppyy objects. This is where Numba can help. Since Numba compiles the code in loops into machine code it only has to cross the language barrier once and the loops thus run faster. Initial support for Cppyy objects in Numba enabled the use of builtin types and classes, but some essential C++ features, such as references and STL classes, are not yet supported. The project aims to add support for C++ reference types in Numba through Cppyy and improve the existing numba extension implementation to provide general support for C++ templates. This added support will allow cppyy users to define a wider array of standard and templated functions that can leverage reference types to the C++ code defined in python.",https://summerofcode.withgoogle.com/programs/2023/projects/PFtlRi3L
hpxMP: HPX threading system for LLVM OpenMP,Aarya,https://docs.google.com/document/d/e/2PACX-1vTcJK0oQJsG2Twk5dNyYYMPRBoDRogWbMBBzVAYU3ClIMYjTvWbgbRpz07vV486pXkF74tPgHUhoSLi/pub,"Hartmut Kaiser, rtohid",Ste||ar group,"llvm, c++, openmp, hpx","compiler, hpc, Multi-Threaded Programming","One of the challenges in adopting HPX is the performance degradation observed in applications that use OpenMP. This occurs because of the contention between HPX threads and OpenMP's native threading system (i.e., pthread) over available resources. hpxMP aims at resolving this issue by adding support for HPX threads as an alternative to pthreads in LLVM OpenMP. This work relies on the HPXC, which replicates pthread's API.",https://summerofcode.withgoogle.com/programs/2023/projects/eijAjjJ5
Image feature and classification database,Aaryan Gautam,https://docs.google.com/document/d/1YUuhjBycdRBWdMOlEAMiEVBDS__dxhag_pi6UprBzTg/edit#heading=h.xa6g1iidtl1w,DimiterP,INCF,"java, sql","machine learning, database",The Active Segmentation platform for ImageJ (ASP/IJ) was developed in the scope of GSOC 2016 - 2021. The plugin provides a general-purpose environment that allows biologists and other domain experts to use transparently state-of-the-art techniques in machine learning to achieve excellent image segmentation and classification. ImageJ is a public-domain Java image processing program extensively used in life and material sciences. The program was designed with an open architecture that provides extensibility via plugins computing different filters and region descriptors (i.e. image features). The feature space and the classification results produced by the platform are stored in several separate files. The idea is that the types and values of image features and classification outcomes would be stored in an SQLite database for cross-comparisons between sessions. The candidate is required to use the SQLite database engine in order to integrate it with the GUI of ASP/IJ.,https://summerofcode.withgoogle.com/programs/2023/projects/IuOyLNbG
Admin: Improved People and Newsfeed Management,Aashima Wadhwa,https://gist.github.com/aashimawadhwa/a0659228c380ff567f56299624a2804e,"Dominic Mills, Tyrone Taylor, CyberWake, Tonythegr8",The Palisadoes Foundation,"web development, css, typescript, reactjs, web desiging",web,"In the Talawa Admin Newsfeed functionality ( for eg: CRUD operations ) are not implemented yet for the Talawa API, Talawa Admin. Along with it the images and videos are not rendering , the modal for creating posts is not functioning well and there are issues in posts rendering in the Talawa Admin application. In this proposal I propose to fix these shortcomings and implement and integrate the admin and API altogether.",https://summerofcode.withgoogle.com/programs/2023/projects/a4jcWmYH
Reducing Fossology's false positive copyrights,Abdelrahman Jamal,https://github.com/Hero2323/GSoC-2023,"Gaurav Mishra, Anupam Ghosh, HastagAB, Kaushlendra",FOSSology,"python, spaCy, Regex","machine learning, natural language processing, Named Entity Recognition, Text Categorization","This project’s goal is to improve the accuracy of Fossology’s copyright detection system using machine learning. This functionality was originally implemented in 2021 to improve the two-step process of copyright detection used by most copyright detection software; using Regex and then human intervention. The machine learning approach uses Named Entity Recognition (NER) and Part of Speech (POS) tagging to figure out which statements contain copyright and which do not. I’ll be working on improving all parts of the project; starting from the dataset & preprocessing, then working my way to the NER hypothesis until the machine learning model used and the final integration.",https://summerofcode.withgoogle.com/programs/2023/projects/bAs5hkHh
Discontinuous Galerkin Infrastructure For the finite element toolbox Ferrite.jl,Abdulaziz Hamid,https://gist.github.com/AbdAlazezAhmed/2a75a6f993ffacadeb4b277d7254d222,"Fredrik Ekre, Dennis Ogiermann",The Julia Language,julia,"Finite Element Method, Discontinuous Galerkin","This project aims to implement the necessary infrastructure for the Discontinuous Galerkin method in the finite element toolbox Ferrite.jl. This will include writing examples, documentation, and tests. DG method is a FEM like the continuous Galerkin (CG) method where the test functions are chosen to be the same as the trial functions. However, DG elements do not share degrees of freedom (DoF) at common nodes, introducing extra DoF and adding the process of choosing coupling between elements through numerical fluxes. The main deliverables are: • Methods to integrate on inner faces. • Extend the methods to integrate over subfaces. • Sparsity pattern methods for DG. • Implement infrastructure for handling boundary conditions for DG approximations. • 1-D, 2-D, and 3-D steady heat equation using DG example. • Testing and documentation for all implemented methods.",https://summerofcode.withgoogle.com/programs/2023/projects/SLGbRNI5
Image Lab,Abdullah Ranginwala,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/01-Abdullah-Ranginwala-Image-Lab.md,"Ivantha, Sahan_Dissanayaka",SCoRe Lab,"javascript, opencv, nodejs, electron",image processing,The proposed project aims to revamp the entire front-end of the app. The new front-end will be built using React on top of Electron to match industry standards. The project will also include adding a test suite and updating the documentation. The proposed changes will make ImageLab a more comprehensive and user-friendly tool for anyone looking to get started with image and video processing.,https://summerofcode.withgoogle.com/programs/2023/projects/0BLb9KSk
Varnish Cache support in Apache Traffic Control,AbdulrahmanElawady,https://abdelrahmanelawady.github.io/GSoC-2023/,Eric Friedrich,Apache Software Foundation,"golang, Varnish","CDN, Cache",Apache Traffic Control is a Content Delivery Network that that requires Apache Traffic Server as the underlying cache. The goal is to extend the caching configuration to support Varnish cache and update Traffic Monitor to monitor Varnish state.,https://summerofcode.withgoogle.com/programs/2023/projects/Y9YXNhle
"Frontend Improvements for BuffaLogs, Intelowl.",Abheek Tripathy,https://abheektripathy.substack.com/p/frontend-improvements-for-buffalogs,"Matteo Lodi, Daniele Rosetti, Aditya Narayan Sinha, Federico Foschini",The Honeynet Project,"python, django, docker, typescript, Next.js","security, graphics, OSINT","I propose to improvising frontend for BuffaLogs, implementing graphs, maps for better data visualisations plus authentications using JWT. I would also work on refactoring intelowlproject's website with an updated design and feature set and working on guides/ui adjustments for Intelowl itself.",https://summerofcode.withgoogle.com/programs/2023/projects/TO4HPglC
Overhauling Uptane.io: Creating a Better User Experience for the Uptane Project Website,Abhijay jain,https://github.com/Abhijay007/Uptane-GSoC-Report/blob/main/GSoC-2023-Uptane-Final-Report.md,"Ira McDonald, Lois DeLong, Phil Lapczynski",The Linux Foundation,"javascript, react, ruby, ui/ux, Jekyll, Docusaurus","security, web","Uptane is an important project that provides secure software updates for connected vehicles, and it needs to offer a better experience to its users to encourage the adoption of the technology. The project's website is the primary source of information for users and developers, and it's essential that the information is easy to access and understand. The current website has a lot of information. However, it's not well organized. It's difficult for a new user to find the essential information they need. The navigation through the site is also challenging. All of these factors could discourage new users from adopting the system. The goal of this project is to overhaul the Uptane.io website to create a better user experience through more logical organization and easier navigation.",https://summerofcode.withgoogle.com/programs/2023/projects/QDCxHcPz
1.1 Integrate Zenodo API with The Virtual Brain,Abhijit Deo,https://gist.github.com/abhi-glitchhg/5fc28c1bae62104f7cf507b453cd72a0,"Lia Domide, romina.baila",INCF,"python, Zenodo","neuroscience, data processing","The Virtual Brain (TVB) is a scientific simulation platform that provides all means to generate, manipulate and visualize connectivity and network dynamics of the brain networks. Researchers in Computational Neuroscience use brain network models to understand the dynamic behavior of the healthy and diseased brain, as measured by various neuroimaging techniques such as fMRI, EEG, and MEG. TVB is currently the only neuroinformatics project providing a platform for researchers to work together on modeling studies using brain network models with realistic connectivity. The modeling of the simulations requires datasets generally hosted on data storage platforms like Zenodo, OpenSourceBrain, EBRAINS, etc. One has to download the dataset manually, unzip it and then use it inside the web GUI. Instead of manually downloading and unzipping the data, the project's goal is to have a dedicated framework to manage the downloading and unzipping the dataset from remote sources. Right now, we are focusing on the Zenodo platform, but there are other platforms like OpenSourceBrain and EBRAINS for which we would like to extend the downloading functionality.",https://summerofcode.withgoogle.com/programs/2023/projects/dtJuOy2s
Music Blocks v4 Project Builder Integration,Abhinav Jha,https://gist.github.com/ABHINAV-JHA-27/b8134cb95e9304ee1bc38dde666432b0,"Walter Bender, Anindya Kundu",Sugar Labs,"javascript, react, typescript",web,"The new Project Builder Framework for Music Blocks v4 will revolutionize the way children and beginners learn programming. To implement this project, we will integrate the Project Builder Framework with the new Music Blocks and wrap it in a component to facilitate easy integration with the Specification and Syntax Tree APIs. Additionally, we will create a palette component and refactor the existing codebase. The final Result after the Implementation of idea will provide kids to learn Programming concepts in an integrative and fun way. This project is a significant step towards the complete new Music Blocks, with a focus on performance improvements and new features. Leveraging modern JavaScript technologies and a better application architecture, the new Music Blocks will ensure a smooth and reliable user experience. Overall, this project has the potential to transform the way we teach programming to children and beginners, making it more accessible and enjoyable for everyone.",https://summerofcode.withgoogle.com/programs/2023/projects/enTZ8jSS
Fineract Modularization,Abhinav Sinha,https://medium.com/@abhinav7.sinha/gsoc-2023-mifos-initiative-work-product-a03fe87073a9,"Ed Cable, Sanyam Goel, Aleksandar",The Mifos Initiative,"java, Spring Boot","web, Modularization, Application Modernization","This project aims to modularize Fineract, an open-source financial services platform, by creating independent Java libraries that can be used be used by developers. Fineract manages clients, transactions, accounts, and other financial activities for financial service providers. It is designed to be robust, reliable, and customizable, allowing for integration with third-party systems. As the software has evolved over time, it has become increasingly complex and monolithic—leading to the need for this project.",https://summerofcode.withgoogle.com/programs/2023/projects/rNVQgU0u
Implement pgr_withPointsKSP and Add Overloads,Abhinav_Jain,https://github.com/pgRouting/pgrouting/wiki/GSoC-2023-Implement-pgr_withPointsKSP-and-Add-Overloads,"Ashish-Kumar, Vicky Vergara",OSGeo (Open Source Geospatial Foundation),"postgresql, c++, gis, Graph Theory","c++, software development, Graph Theory, dijkstra","The project aims to implement pgr_withPointsKSP and all its overloads. Yen's algorithm computes single-source K-shortest loopless paths for a graph with non-negative edge cost. It employs any shortest path algorithm to find the best path, then proceeds to find K − 1 deviations of the best path. Sometimes the applications work “on the fly” starting from a location that is not a vertex in the graph. Those locations, in pgRouting, are called points of interest. So this function will modify the graph to include these points of interest and, using Yen’s Algorithm finds K shortest paths.",https://summerofcode.withgoogle.com/programs/2023/projects/6SNYZ0ph
Embedded Chat 2023,abhinavkrin,https://github.com/abhinavkrin/GSoC-RocketChat-2023,Sidharth Mohanty,rocket.chat,"javascript, react, react native","web, communication, Component Library, npm package","A Rocket.Chat channel could be embedded into some existing web applications via the Embedded Chat component. Currently, the available integration surface and features of Embedded Chat are rather limited. This project aims to significantly expand the applicability of Embedded Chat to a wider range of web/mobile applications built on the most popular frameworks such as React, React Native, and more; and hosting platforms such as WordPress and Ghost via HTML embedding. The goals of the project are: ● Separating various parts of the project into their package - API, react, react native, auth, etc. ● Reducing the bundle size. Currently, it is very large. ● Replacing HTTP calls with real-time DDP communication wherever necessary. ● Creating libraries for react-native, react, etc. ● Giving more flexibility in authentication methods. ● Slash command support ● Introducing theming for client libraries ● HTML embed",https://summerofcode.withgoogle.com/programs/2023/projects/sUXGt89N
Mifos Mobile 6.0 - Mobile Banking App - GSoC proposal for The Mifos Initiative,Abhishek Gururani,https://gist.github.com/gururani-abhishek/0aec195d1affcf4303c770e72f641a8f,"Chirag Gupta, Ahmad Jawid Muhammadi",The Mifos Initiative,"android, kotlin, espresso, RESTAPI, Retrofit, Okhttp","mobile development, android, Kotlin, RestAPI, UI Testing, RETROFIT","Mifos Mobile is an android application designed for client use, which facilitates user authentication, account information viewing and editing, as well as internal transactions and repayments. In my proposal I've mentioned 4 additions to the current Mifos Mobile application. 1. Replacing the current API layer from self-service Fineract APIs to Open Banking APIs 2. Providing the user 24/7 customer chat support using RocketChat 3. Integrating external payment system, Mojaloop via the Payment Hub. 4. Covering all the screens with UI tests using Espresso. The proposed enhancements to Mifos Mobile application are expected to have a significant positive impact on the user experience. By replacing the existing API layer with Open Banking APIs, clients will be able to enjoy seamless and more secure transactions. The provision of round-the-clock customer chat support through RocketChat will ensure that users receive prompt assistance whenever they require it. Integration of Mojaloop through the Payment Hub will enhance the application's payment capabilities, and it's reach. Lastly, the coverage of all screens with UI tests using Espresso will improve the overall reliability and robustness of the application, leading to increased user satisfaction.",https://summerofcode.withgoogle.com/programs/2023/projects/BjEIeqaA
Converting past R Journal articles to HTML using texor,Abhishek Ulayil,https://rpubs.com/Abhi_1U/gsoc-23,"Di Cook, Mitchell O'Hara-Wild",R project for statistical computing,"lua, r, latex, rmarkdown, Pandoc","automation, Document Conversion","During GSoC 22, I worked on the texor package which converts the Legacy(LaTeX) Rjournal articles to modern(Rmarkdown) format. This year the focus would be to aid in more thorough documentation, converting all the Rjournal articles and fixing any issues that may arise. There is also scope for generalizing the conversion process for other document formats (like sweave) as well.",https://summerofcode.withgoogle.com/programs/2023/projects/4ygPTJA9
DSP hard block integration in F4PGA,Abhishek_Anand,https://gist.github.com/ad-astra-et-ultra/d5ac9599746301345fdb402823634565,Maciej Kurc,CHIPS Alliance,"python, verilog, c++, Vivado, Yosys","fpga, IP cores, HDL","F4PGA is an open-source FPGA toolchain designed as a free alternative to proprietary computer-aided design tools like Xilinx’s Vivado. Currently, mapping designs to DSP blocks and generating DSP block bitstreams are not implemented for the Xilinx 7-series FPGA devices within the toolchain. This project aims to integrate DSP48E hard block in F4PGA. This will enable designs using DSPs to be synthesized, placed, and routed correctly. We need to diagnose and implement required changes throughout the F4PGA toolchain, allowing for DSP design bitstreams to be successfully generated with open-source tools. Deliverables: 1. Support for DSP48E within the F4PGA architecture definitions. 2. Testing flow for designs using Xilinx 7-series DSP hard blocks which include Verilog-to-Bitstream using the F4PGA toolchain, Fasm2bels to re-generate the original netlist from the bitstream output of F4PGA and Proof-test through Vivado to verify the correctness of the netlist.",https://summerofcode.withgoogle.com/programs/2023/projects/mSq56goy
Add a web user interface to XaoS,abhishek_tiwari,https://github.com/tabhishek432/GSoC-2023-xaos,"Zoltan Kovacs, Anurag Aggarwal",GNU Project,"javascript, opengl, c++, qt, html, webassembly","web, programming, software","The project aims to enable XaoS, a fractal program, to function effectively on web browsers through the use of Qt. Currently, XaoS requires the user to download and install the software, which limits its accessibility. However, the current implementation of XaoS using Qt web assembly is not functioning well on web platforms due to issues with the synchronous, infinite loop used in XaoS's event loop. Browsers typically run JavaScript, which is single-threaded and relies on asynchronous events to avoid blocking the main thread, making the current implementation unsuitable. The proposed solution is to use a QTimer to periodically update the fractal using UIH functions. By refactoring the code to use a QTimer, XaoS can be made compatible with browser architecture and enable a single Qt source code for implementation across different platforms.",https://summerofcode.withgoogle.com/programs/2023/projects/3R0aNcqK
Frontend and Backend Integration in Codelabz,Abhishek-Pandey,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/02-Abhishek-Pandey-Codelabz.md,"Mohammad Sarfraz Alam, Thanda Mahender Goud",SCoRe Lab,"javascript, nodejs, reactjs, Firebase","web, cloud","CodeLabz is a platform where users can engage with online tutorials and organizations can create tutorials for the users. Currently, the Project doesn't use dynamic data, Some pages are inconsistent with the design system, and new pages are required. This project focuses on making the necessary UI changes to the websites and also creating a proper functional backend using Firebase services to make the site functional and deploy the first working prototype of the site.",https://summerofcode.withgoogle.com/programs/2023/projects/uT9XSYT8
Improving Polynomial GCD,AbhishekPatidar,https://github.com/sympy/sympy/wiki/GSoC-2023-Report-Abhishek-Patidar-:-Improving-Polynomial-GCD,"Kalevi Suominen, Oscar Benjamin",SymPy,python,Abstract algebra and of algorithms.,"The project aims to add new algorithms for computing the greatest common divisor (GCD) of polynomials in the sparse representation in order to improve the speed of many parts of sympy such as matrices, solvers, integration, and simplification functions. Currently, the slow speed of polynomial GCD impacts many operations in SymPy, leading to heavy performance penalties and avoiding the use of domain elements in some algorithms. By improving the speed of polynomial GCD algorithms, many parts of SymPy could become faster, and the use of GCD could become more widespread. This project could significantly enhance the overall performance and usability of SymPy.",https://summerofcode.withgoogle.com/programs/2023/projects/JBxiR5tN
Idea 22.3 - Abhishek Tiwari - Code editor support for Brian model equations,AbhishekTiwari,https://github.com/brian-team/brian-code-editor,"Marcel Stimberg, Dan Goodman, Ben Evans",INCF,"python, javascript, json, asynchronous programming, VS Code LSP, grammar skills, TextMate","web development, scientific computing, Computational Neuroscience, Extension Development","This project involves creating a VS Code extension that provides enhanced support for the Brian2 neural simulator. The extension aims to improve the user experience and productivity of those working with Brian2 by offering syntax highlighting, syntax checking, auto-completion, and language server protocol (LSP) support. These features will be implemented using various programming languages and tools, including Javascript, Python, and the LSP protocol. The deliverables for this project include a fully functional extension that can be installed and used with VS Code, as well as documentation on how to install and use the extension. The extension will be designed to work seamlessly with Brian 2 and will provide a user-friendly interface that is easy to use and navigate.",https://summerofcode.withgoogle.com/programs/2023/projects/s6SQkLzI
Pydata/Sparse: Merge lattices to enable C++ compile-time dispatch of sparse ndarrays,adam2392,https://github.com/hameerabbasi/xsparse,"czgdp1807, Bharath K K, Hameer Abbasi",Python Software Foundation,"c++, Template Meta Programming","machine learning, data science, Sparse arrays","There is currently no robust and unified sparse ndarray library that is compliant with the numpy API. This prevents the substitution of sparse arrays for dense arrays when needed in many data science workflows. PyData/Sparse is a repository that presents an opportunity to address these issues. In order to do so, there needs to be a C++ implementation of a code-generation algorithm that can generate efficient code for any type of sparse tensor operation. This abstraction allows one to maintain a relatively small piece of code that enables functionality for an exponential number of different sparse array format operations. The main objective of the project is to implement, test and document the merge lattice and its related data structures and algorithms that are vital for code-generation. This will result in a generalizable code-generation algorithm that can be applied for implementing a variety of different sparse ndarray formats that work together. This will involve interfacing heavily with the existing C++ code and its implemented templates to add functionality that constructs and manipulates a merge lattice, which is a useful abstraction in code-generation for sparse tensor algebra operations. As a few stretch goals, I plan on: i) implementing abstractions of what a sparse array is and what operations can be done that leverage this underlying core API, ii) finishing the co-iteration algorithm to account for non-unique and non-ordered levels and iii) begin work on the actual code-generation algorithm that leverages the merge lattice.",https://summerofcode.withgoogle.com/programs/2023/projects/dCzMvucW
Improve and enhance 3DMol.js,Adithya Krishna V Sharma,https://gist.github.com/adithyaakrishna/33c35519edaa8cac130ec4a96800c93f,dkoes,Open Chemistry,"python, javascript, opengl, typescript","web, graphics, Visualizations, Molecular Data, Atoms, Molecular Structures, Javascript Toolkit, Molecular Representations","The 3DMol.js library size is quite large, but can be optimized by using const instead of var, array destructuring, global constants, and the Float32Array class. Functions can be made more performant by reusing variables, using default function arguments, and caching repeated values. Reducing conditional checks, using switch statements, and avoiding redundant calculations can also improve performance. Using squared distance, subarray method, and reducing branching can also help optimize the library. CodeQL workflow can be added for security purposes.",https://summerofcode.withgoogle.com/programs/2023/projects/r2fhQb5e
Implementation of a plane wave source,Adittya,https://github.com/gprMax/gprMax/pull/373,"Antonis, Iraklis Giannakis",gprMax,"python, cython, matlab","simulation, numerical methods, Electromagnetism, Differential Equations","The objective of the project would be implement a plane wave source in gprMax. It is mentioned that it would be done by `translating existing MATLAB code into Python'. However, it is more nuanced that that. Plane wave sources are a useful tool in multiple different scenarios of electromagnetic simulations, especially when the wave is emitted by a source that is quite far away from the target or maybe even multiple targets. Currently, such a source does not exist in gprMax. This project will involved translating existing code written by one of the mentors, taking the idea that has been shown to work as a MATLAB script and place it in a much larger environment, gprMax, in Python, blending it seamlessly with the other sources available in gprMax. Implementation of a simple plane wave source, propagating in a homogeneous medium seamlessly with the other sources available in gprMax. This functionality was long ago when gprMax was coded in C, and need to be reintroduced.",https://summerofcode.withgoogle.com/programs/2023/projects/QbO6y5Xj
Add Mutation Diagram on Study View for Enhanced Mutation Analysis,Aditya Garg,https://gist.github.com/aditygrg2/1e20071a8b0ca0168a8d286e7b1d4755,"Onur Sumer, Charles Haynes, Bryan Lai",cBioPortal for Cancer Genomics,"javascript, react, html, css, typescript","web, genomics, cancer","This proposal aims to add a mutation diagram to the study view will enhance the mutation analysis capabilities of cBioPortal. The mutation diagram will display the distribution of mutations across different genes, samples, and mutation types within a study. This interactive diagram will allow users to explore mutation data in a way that is more intuitive and informative than simple tables or charts. Users will be able to select specific samples and mutation types and see the distribution of mutations across different genes and samples.",https://summerofcode.withgoogle.com/programs/2023/projects/uvgCfYuK
Adding new workers and resource management to new dataflow engine written in Python: Pydra,Aditya Agarwal,https://docs.google.com/document/d/e/2PACX-1vR7ONsUkzGpxXYwnXdT4aMur9lYefrLzVhoLnlN_pFMb7X9jCzxN5lsr9TSdJeigf7RuZQNX7_Z3SGt/pub,"satra, DOROTA JARECKA, Ghislain Vaillant",INCF,"python, docker, dask, Pytest, Bokeh, Pydra, PSI/J, Nipype","hpc, Schedulers","My proposal aims to extend Pydra's worker classes to handle a wider range of systems by utilizing PSI/J, which offers a unified API for various schedulers. The objective of this project is to create a Pydra worker class capable of submitting and monitor jobs on different HPC systems, such as Theta, using PSI/J. Furthermore, I intend to use Bokeh to construct an interactive web-based dashboard that will monitor the jobs being submitted and executed by the Pydra worker. The expected outcome of this project is a Pydra worker that can use PSI/J to submit and track jobs on various HPC systems, an updated Dask worker, as well as a jobs monitoring dashboard. The proposed methodology involves designing and implementing the Pydra worker class, evaluating its functionality and performance on various systems, comparing it to existing Pydra workers, and constructing a Pydra dashboard using Bokeh to monitor the jobs. Finally, I will document the usage and installation of the Pydra worker with PSI/J, as well as the Pydra dashboard, and provide users with examples and tutorials. The project timeline includes a community bonding phase from May 4 to 28, followed by an extended coding period from May 29 to September 17.",https://summerofcode.withgoogle.com/programs/2023/projects/d8SQBLVj
Dynamic notification of whether a component is implemented in iOS,Aditya B N,https://adirn26.github.io/Google-Summer-Of-Code-Submission/,Evan Patton,MIT App Inventor,"javascript, java, gwt, Android Development","web, android","The primary objective of this project is to enhance the user experience of MIT App Inventor by providing users with information about the availability of components on iOS or Android platforms. To achieve this, proposed changes will be made to the Designer editor code to enable users to determine whether a component is accessible on a particular platform or both. The coverage.json file will be utilized to extract information about the availability of components, which will be represented by iOS or Android icons displayed on the palette items and a text displaying if the component is exclusive to any of the platforms(Android or iOS) on palette Help Popup dialog box. Furthermore, a dialog box will inform users about unsupported components when they connect their devices through the AI companion. The proposed modifications will empower users to make informed decisions when creating their applications, resulting in higher-quality apps that cater to user needs and expectations.",https://summerofcode.withgoogle.com/programs/2023/projects/j7UZETHS
Multilingual Neural Data-to-Text Generation,Aditya Hari,https://github.com/aditya-hari/multilingual-rdf-to-text,"Diego Moussallem, Nikit",DBpedia,python,"machine learning, natural language processing, deep learning","This project focuses on the problem of multilingual data-to-text generation from RDF triples. In particular, the work will revolve around the analyzing the performance of different neural architectures in tackling this problem, while also exploring how methods like data augmentation can improve performance",https://summerofcode.withgoogle.com/programs/2023/projects/7onLs2cK
Improved Installation Tools,Aditya Saini,https://medium.com/@adityasaini10012001/google-summer-of-code-23-work-submission-dd61d8254d3c,"Antonis, Iraklis Giannakis, Rania Patsia",gprMax,"Python, Cython, tools and compilers on multiple (Linux, Windows, macOS) operating systems",Installation Tools,"The benefits of creating a simplified and more user-friendly installation workflow for gprMax software are: Improved user experience , Increased accessibility , Time-saving , Increased usage and adoption Improved performance:",https://summerofcode.withgoogle.com/programs/2023/projects/HIvD1YHY
Google Developers Community Visualization Tool,AdityaKumar,https://gist.github.com/soCallmeAdityaKumar/47419801a0c22f743eddd4f15f82b76f,"Andreuibanez, Yash Raj",Liquid Galaxy project,"kotlin, graphql","maps, android, Google Assistant, TextToSpeech",Many members of Google Developers Groups are available on Meetup . So I want to develop a platform which will make developers easily to get all upcoming meets and last 7 day meets . All previous events photos will be available on the app. Maps will show the concentration of the developers globally . User can show all updates on events on the app itself.,https://summerofcode.withgoogle.com/programs/2023/projects/7mnhMUjo
Guided RC Code Walkthrough and Tutorial,AdityaSingh-02,https://github.com/AdityaSingh-02/Gsoc-23,"Sing Li, Kevin Aleman",rocket.chat,"mongodb, react, nodejs, typescript, Visual studio Code tour extension",Social and Communication,"Description- This Project is related to a Code tour using Visual Studio Code Tour Extension and the main focus of this project is to make the development and understanding of the codebase Easier for the new contributors who are new to Open-Source and create future Gsoccers. Since Rocket.chat's codebase is huge, many new developers face problem understanding code and they find it overwhelming, It would be great to motivate them to work towards Open-Source community",https://summerofcode.withgoogle.com/programs/2023/projects/UAKFA26X
Integrating libcamera into OpenCV,Advait Dhamorikar,https://advait-0.github.io/GSoC23/Final-Report/,"epaul, uajain",libcamera,"opencv, c++, v4l2","vision, Camera Stack","This project aims to move the current V4L2 implementation of accessing and controlling cameras in OpenCV to libcamera, this will allow for better functionality for more advanced and complex cameras. This will be done by creating a videoio plugin for OpenCV to support libcamera and then creating suitable classes and functions to add the desired functionality.",https://summerofcode.withgoogle.com/programs/2023/projects/lKttObKa
Implement a proper testing framework (rpmlint),Afrid Hussain,https://docs.google.com/document/d/1er40UGl7NEm7YKL-4_LKszGI0zA1J3cdTw1ythPhoPU/edit,Daniel García Moreno,openSUSE Project,"python, linux, Testing, Pytest, RPM Packaging","packaging, Linting","The primary objective of this project is to enhance the testing framework and testing ideology by utilizing mocking techniques. The intention is to get rid of the existing binary rpm packages . This project aims to mock all the 132 binary rpm packages used exclusively for testing purposes in the rpmlint repository, which will significantly improve testing speed and facilitate easy testing development. To achieve the project's goals, I will collaborate with my mentor and devise a strategy for mocking the binary packages using the pytest framework. The deliverables for this project include a redesigned testing framework that is more efficient and reliable than the existing one. Additionally, the project aims to mock all the existing binary packages, which will help streamline testing processes and accelerate software development. Deliverables: 1. Coming up with redesigned testing framework using mocking strategy. 2. Mocking all the existing binary packages",https://summerofcode.withgoogle.com/programs/2023/projects/WxqvIPZs
Alexandria3k Extension,Aggelos Margkas,https://gist.github.com/AggelosMargkas/f8bccf4b86b565c766a997d422706ad7,Diomidis Spinellis,Open Technologies Alliance - GFOSS,"python, sql, XML JSON","PYTHON LIBRARY, command line search, Database schema, Local Bibliographic Metadata Management, SQL queries","The objective of this project is to expand the capabilities of Alexandria3k, an open-source Python package for bibliographic metadata management, to include support for the US Patent Office datasets and PubMed/MEDLINE data. Specifically, the project aims to add functionality to parse and link the provided metadata, and to perform author name and affiliation disambiguation, missing contributor relations, and topic matching. The proposed work will enhance the usefulness of Alexandria3k for researchers, particularly those working in the fields of patent analysis and biomedical research.",https://summerofcode.withgoogle.com/programs/2023/projects/72BG4Mi7
Bowtie and the World of JSON Schema,Agnivesh Chaubey,https://gist.github.com/AgniveshChaubey/3935e130d65ebe02cc60fd95c8273091,"Benjamin Granados, Julian Berman, Bala Avulapati, Pranav Singhal",Postman,"python, javascript, json, JSON Schema",Schema Validation,"The world of JSON Schema is immense. JSON Schema tooling exists in countless languages across a variety of uses (data validation of course a noteworthy and prominent one). Implementing the JSON Schema specification(s) in a fully compliant way is not without challenge, meaning as a user of JSON Schema it is important to understand how a particular implementation may deviate such that one can make constructive tooling choices or help implementations improve. Bowtie is a recently created tool to aide in this task, helping to surface the conformance of various JSON Schema tools with the specification by running them against a set of known correct test cases and regularly rendering the results to a web page. But it can do more! Expected Outcomes: Enhance (or replace) Bowtie's simplistic current UI so that it most easily answers ""what do various implementations say about each test case"" -- making it snappier and more featureful Add support for further JSON Schema implementations by creating Bowtie harnesses in additional languages Teach Bowtie to compare not only True/False validation results but also the full JSON Schema standardized output formats",https://summerofcode.withgoogle.com/programs/2023/projects/71wrRVC0
[PyBaMM] - Documentation - Agriya Khetarpal,Agriya Khetarpal,https://pybamm.org/gsoc/2023/agriya-khetarpal/,"Saransh Chopra, Valentin Sulzer",NumFOCUS,"python, html, sphinx, css, GitHub Actions","web, documentation, CI/CD","This project aims to enhance the documentation infrastructure for PyBaMM and consolidate all of it in one place, which includes but will not be limited to: the API documentation, user guides, the example Jupyter notebooks, and the PyBaMM Wiki. This project will also introduce a new pybamm.org website with the Hugo static site generator, and improvements to the existing documentation built with Sphinx – based on other popular Python packages and libraries in order to make it more robust and maintainable. The project will also include other infrastructure improvements in scope such as those for the test suites, installation, and creating releases.",https://summerofcode.withgoogle.com/programs/2023/projects/DdcerdTx
Enviromage,Ahmed Aziz ABBASSI,https://gist.github.com/aziz-712/f6a2dffa3bdfa773b914ef0f9c2f9f2c,Timothy Lehnen,Drupal Association,"github, git, php, Composer, DDEV, drush","web, backend, Maintenance","Welcome to Enviromage, a powerful Drupal module designed to unleash the full potential of your website's performance and configuration management. With its comprehensive environment configuration settings, Enviromage empowers users to tailor their website's behavior across different deployment scenarios effortlessly. Delve into the magic of Composer performance checks (dry run), ensuring seamless package updates without disrupting your live environment's harmony. Enviromage's mystical memory size analysis reveals resource-intensive modules, enabling you to optimize your website's performance with ease. Unveil the secrets of your website's underlying magic with Enviromage's effortless retrieval of essential environment configurations. Embark on a captivating journey of Drupal development and performance optimization with the enchanting Enviromage by your side.",https://summerofcode.withgoogle.com/programs/2023/projects/GJZM0Obv
Ranking system for AiiDA plugin registry,Ahmed Basem,https://docs.google.com/document/d/1rgxcoO7hx6GDpiumeX0t7Blm7-kRfU1qSrTvS2vI42o/edit?usp=sharing,"leopold.talirz, Jusong Yu",NumFOCUS,"python, react, ci/cd","web, ui/ux","AiiDA has a flexible plugin system that allows extending most aspects of the code. This project aims to add several functionalities to the AiiDA plugin registry web page, including a relevant sort order for the plugins list, and the ability to search. This project also aims to get additional information about the plugins. This information will be a great way to discover and browse through the available capabilities each plugin provide.",https://summerofcode.withgoogle.com/programs/2023/projects/B9z9tso7
Chromium Accessibility Performance,Ahmed Elwasefi,https://gist.github.com/Ahmad45123/b9084506b33cb30b864e24e4aa9f42da,"Pallavi, Aaron Leventhal",Chromium,"javascript, c++, html, ARIA","web, performance, accessibility, memory, stability, code health, threading","The accessibility code in Chromium is used in Chrome and Edge to enable users of assistive technology to access the web. However, enabling it can significantly impact the performance of web applications, memory usage, battery life, and crash frequency. Many users get this code enabled without realizing it through various utilities that request platform accessibility APIs. This project aims to improve Chromium's performance by optimizing its accessibility code, which can benefit the web browsing experience for a significant number of users. With the goal of improving performance and code health, the project will complete three or more sub-projects, including bounding box computation improvement, avoiding unnecessary computations using AXMode flags, optimizing expensive property computations, and moving Accessibility deserialization off the main thread. The project will also potentially investigate performance problems that occur when large subtrees have display: none toggled on them and identify the slowest properties computed for the AX tree to speed up or defer processing.",https://summerofcode.withgoogle.com/programs/2023/projects/IIh4sFdT
Improving OpenPGP encryption experience in LibreOffice,Ahmed Gamal Eltokhy,https://tokiesan.github.io/blogposts/gsoc/final_report.html,"Thorsten, Heiko Tietze, hosseinn",LibreOffice,"c, c++, qt, GNUGPG","Libreoffice, OpenPGP","The project aims to enhance the experimental PGP/GPG encryption support in LibreOffice by addressing several shortcomings, such as the need to select recipients anew for every save and the difficulty in finding the right keys. The project will also focus on developing smart searching, traversing, and filtering capabilities for large keyrings, as well as adding asynchronous querying for improved performance. The plan involves several steps, including understanding the current implementation of PGP/GPG encryption support, implementing recipient selection for PGP/GPG encryption, developing smart searching, traversing, and filtering capabilities for large keyrings, adding asynchronous querying for improved performance, and finalizing the project.",https://summerofcode.withgoogle.com/programs/2023/projects/kT3Vc8Im
pg_adviser / index_adviser: Recommend Potentially Useful Indexes,Ahmed Ibrahim,https://gist.github.com/ahmedibrahim404/9f16d7b627ada377c6209368734c8dfb,"sfrost, Gurjeet S.",PostgreSQL,c,"databases, indexes, GIN Indexes","The Index Adviser (pg_adviser) is an extension for PostgreSQL that suggests potentially useful indexes for given queries. This project aims to improve the extension by adding support for all active versions of PostgreSQL and improving the recommendation of new index types (GIN, GiST and others)",https://summerofcode.withgoogle.com/programs/2023/projects/Uuis4lHV
Improve CI/CD for MetaCall Core MacOS,Ahmed Ihab,https://github.com/ahmedihabb2/gsoc-2023/blob/main/submissions/AhmedIhab.md,"Parra, Jose",MetaCall,"c/c++, cmake, bash, clang, GitHub Actions","devops, CI/CD","MetaCall Core has an intensive test case that is mainly focused on Linux (including Sanitizers in order to detect memory, address, undefined behavior, or threading bugs). The main idea is to support multiple platforms and architectures with multiple compilers but the current baseline (Linux with GCC, Windows with MSVC, and MacOS with Clang; all on amd64 architecture) So, We will implement full CI/CD for macOS with the maximum amount of language support possible for now MetaCall has one for Linux and Windows",https://summerofcode.withgoogle.com/programs/2023/projects/7Jjjexmo
Internationalization of Apertium Tools,Ahmed Siam,https://ahmedsiam.com/gsoc-2023-report-internationalization-of-apertium-tools,Tino Didriksen,Apertium,"c++, git, bash, autotools, icu4c",internationalization,"This project aims to internationalize Apertium tools so that they can be localized easily to other languages, which makes usage of Apertium tools easier for non-English users. I have done this by building and using a library that wraps ICU4C, which supports Unicode and internationalization.",https://summerofcode.withgoogle.com/programs/2023/projects/0lVWglOx
Integrating ftbench into FreeType's Build Structure: A Performance Benchmarking Automation Project,Ahmet Göksu,https://gitlab.freedesktop.org/freetype/freetype/-/tree/gsoc-2023-ahmet-final,Werner Lemberg,FreeType,"c, html, unix, build tools","automation, performance, benchmarking","The goal of this project is to improve the ftbench program in FreeType's build structure for easier performance testing. The current manual process is slow and prone to errors. The plan is to create an automatic system to compare the performance of an older version with the current one. The project involves making a way to compare performance, creating an easy-to-read HTML report, and adding the report to FreeType's CI on GitLab. The final results include the comparison method, the HTML report, the CI integration, and clear documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/WTILl9LD
Support for OpenSSH connection multiplexing,Ahsen Kamal,https://medium.com/@itsahsenkamal/my-google-summer-of-code-gsoc-experience-with-libssh-8c302892d3aa,Norbert Pocs,libssh,c,"ssh, multiplexing",The proposal aims to describe briefly my approach to implement OpenSSH connection multiplexing in libssh. It goes over the required components and functions and how they work in order to achieve connection multiplexing. The project aims to deliver multiplexing multiple sessions using only one TCP connection.,https://summerofcode.withgoogle.com/programs/2023/projects/GdK87jbe
[GSOC-242] Project proposal for Airflow,Aibek,https://github.com/AibekYrysbekov/airflow/tree/main/community/pmc-tool,"Aizhamal, Pablo E",Apache Software Foundation,"python, django, sql, sqlite","web, community","Overview This project aims to create a tool for Apache PMCs that will automate analysis of contributor activity in any given Apache repository. Project Goal The project goal is to make it easy for PMCs to manage their communities. We will try to achieve this by developing a tool that automatically finds and tracks first (or 3rd, or 10th) pull requests in a specified repository on Github that belongs to a specific community. The idea is that the PMC can take this data and send “Thank you” notes or emails to new people that joined the community and made their first contribution. If these automatic reports show that there are contributors with consistent commits to the project, PMC can send them encouragement emails to keep up the good work and become committers, etc. Project Description The tool will be based on using Github API to retrieve a list of all pull requests in the specified repository. Users will be able to set search parameters such as repository name and filters by pull request status. Users can use this tool to: Track pull requests in their own repositories Track issues opened in their own repositories Track the activity of individual contributors to encourage them to improve The tool will provide a user-friendly interface for searching and filtering valuable community information, such as pull requests, issues, questions in StackOverflow and others. Users will also be able to configure notifications to receive alerts about new pull requests. Technical Details The tool will be developed in Python and will use the Github API directly to fetch data (another possibility is using the PyGithub library to interact with Github API, however this may not be necessary). For the user interface, we can use the Flask or Django framework. The tool will be deployed on a web server and will be accessible through a browser.",https://summerofcode.withgoogle.com/programs/2023/projects/h1cLBx3O
Sand-Boxed Scanner Application Framework,Akarshan Kapoor,https://dev.to/kappuccino111/sandboxing-scanners-a-leap-into-the-driverless-realm-gsoc-23-report-3eci,"Till Kamppeter, Aveek Basu, Ira McDonald, Rishabh Maheshwari, Deepak Patankar",The Linux Foundation,"c, c++, cups, eSCL, SANE","apis, scanning, PAPPL, Sandboxed Application Framework","The main purpose of the project is to enable driverless scanning or, in general, to create a Scanner Application Framework under PAPPL. This should enable devices that do not support driverless scanning to be emulated as driverless through our application. Additionally, with this project, we will be able to create sandboxed Scanner Applications.",https://summerofcode.withgoogle.com/programs/2023/projects/UFP1WmKR
Automate Cytoscape.js release process using GitHub Actions,Akash Mondal,https://gist.github.com/AkMo3/7288756239c2aad897c23162daa8195d,"Gary Bader, Max Franz, Mike Kucera, C.Lopes",National Resource for Network Biology (NRNB),"node.js, bash, js, GitHub Actions","automation, CI/CD","Cytoscape.js is an open-source JavaScript-based graph theory library that can be used for graph analysis and visualisation. It contains many useful functions in graph theory and can be used headlessly on Node.js to do graph analysis in the terminal or on a web server. Cytoscape.js supports several types of graphs, including traditional graphs, directed graphs, undirected graphs, multigraphs and hypergraphs (with compound nodes, but not yet with hyperedges). It was designed to make it as easy as possible for programmers and scientists to use graph theory in their apps. The application receives constant updates from open-source contributors, which are bundled in a patch for release. The current system of this release is primarily manual. This proposal aims toward developing GitHub action that automates the task of release resulting in lower costs of making the release.",https://summerofcode.withgoogle.com/programs/2023/projects/b74gpyOU
Enhancements to the ECEB App Based on User Study,Akash Srivastava,https://akashsrivastavagsoc.blogspot.com/2023/08/final-report-gsoc23-project.html,"sunbiz, Dr. Sherri Bucher",LibreHealth,"android, flutter, dart, Figma, DHIS2, Hive","app development, enhancement","The Essential Care for Every Baby (ECEB) mobile application is designed to offer clinical decision support to healthcare personnel who provide essential care interventions for newborns. The project aims to improve the user experience, accuracy, and reliability of the app by revamping its user interface, improving the rule-based classification algorithm, resolving syncing issues on local storage and the DHIS2 rule engine, enhancing the app's functionality, and developing user manuals and training materials. The project will be implemented in four phases using Agile Development Methodology. The first phase will revamp the application based on UX changes, the second phase will improve the rule-based classification algorithm, the third phase will address DHIS2 rule engine and syncing issues, and the fourth phase will focus on documentation. The enhancements proposed in the design include making the application more accessible and user-friendly with more visual cues, legible fonts, and features that increase functionality. The goal is to ensure that healthcare workers in low and middle-income regions have essential knowledge, skills, and competencies to deliver life-saving care to newborns.",https://summerofcode.withgoogle.com/programs/2023/projects/BYWQVsDW
Kolibri Studio - AI-Powered Transcription Generation,Akash Verma,https://medium.com/@akash5100/ai-driven-caption-generation-in-kolibri-studio-8270c0c2554a,Blaine,Learning Equality,"python, javascript, django, vue.js","speech-to-text, Auto-generate captions","This project aims to enhance the accessibility of Kolibri Studio's resources for learners by implementing a feature that automatically generates and edits captions for uploaded audio and video resources. The project will focus on two main tasks: (1) implementing a self-hosted solution for auto-generating captions in the same language as the video with translation into different languages and (2) adding frontend support for previewing and editing uploaded or auto-generated captions. The project will explore various libraries and tools for language support and build a front-end editor that allows for real-time caption editing and synchronization with the video or audio resource. Multilanguage options will also be supported, with automatic translation considered for future development.",https://summerofcode.withgoogle.com/programs/2023/projects/tx5vUflI
Adding a custom text color picker for Kolibri EPUB renderer,Akila Induranga Gamage,https://github.com/Akila-I/gsoc-2023,Marcella Maki,Learning Equality,"javascript, vue.js","education, accessibility, user experience, offline","Kolibri offers a well integrated EPUB renderer for its users with smooth responsiveness, control over the text size, and six color themes to choose from. The existing color themes include variations for both light and dark modes. However, those color themes are fixed to the application and cannot be fine tuned as per individual user needs. Objective of this project is to design and implement a custom color picker component for the Kolibri EPUB renderer so that users can have their own custom color themes in the application. Deliverables of the project: 1. Section in UI to display custom themes 2. Integrated color picker to create and modify custom themes 3. Functionalities of adding, editing, removing custom themes and apply them into EPUB renderer Tools to be used: 1. epub.js library 2. Alwan color picker",https://summerofcode.withgoogle.com/programs/2023/projects/3V9w0tMx
Implement Playlist Demux Module in Rust,Akram Ansari,https://code.videolan.org/loic/vlc/-/merge_requests/8,"Thomas Guillem, Alexandre Janniaux",VideoLAN,"c, c++, rust, audio, video","streaming, multimedia, Parsing, systems development","This project aims to address the limitations of the current C-based development of the open-source VideoLAN Client (VLC) media player in terms of maintainability, safety, and security. Specifically, the project focuses on porting the playlist module under the ""demux"" modules of VLC into Rust, a systems programming language that offers high efficiency, safety, and memory safety. The main aim is to provide a safe Rust implementation of the playlist module that can serve as a reference for other modules and projects along with setting up the necessary VLC core features in Rust required to implement VLC Rust modules.",https://summerofcode.withgoogle.com/programs/2023/projects/6ZBYqoaE
Unlocking the Full Potential of Scala Web Development with Scala 3,Akseli,https://github.com/wiringbits/scala-webapp-template/commits?author=akseliristola,Alexis Hernandez,Scala Center,"postgresql, scala, scala.js","web, Web app template","This proposal aims to integrate Scala 3 support into the Scala Webapp Template, providing a more accessible, reliable, and powerful solution for developers interested in building web applications using Scala and Scala.js. The integration will involve updating the backend and frontend code to utilize new syntax and features of Scala 3, ensuring compatibility with existing Scala 2.13 code through cross-compilation, and updating libraries and dependencies as necessary. The proposed approach also includes testing, documentation, and optimization of the updated components.",https://summerofcode.withgoogle.com/programs/2023/projects/mwBk3FnW
Refactor frontend-markdown processor using an extensible CommonMark parser,Akshat Akshat,https://gist.github.com/akshatdalton/d2e3a0b37a5ce32fb128de69cee38f38,Dinesh Chidipothu,Zulip,"python, javascript, django","web, REST API","Markdown provides a great ability to format messages and write structured documents using plain text format. Zulip uses two different markdown processors: for the backend, it is Python-Markdown and for the frontend, it is marked.js. While the backend markdown processor is highly extensible but the current frontend markdown processor doesn’t allow the same. Moreover, it is not upgradeable because of the Zulip customisations. The goals of this project are: Refactor the frontend-markdown processor with CommonMark parser. Make the same extensible for Zulip’s custom features like @-mentions. I’ll take the reference from commonmark.js to write the CommonMark parser for our frontend-markdown processor. And to make it extensible, I'll use the upstream marked.js. In parallel to this, I’ll focus on works in the markdown area. Integrating them with the Zulip will help to increase the overall users’ experience. The list of them are: Add support for link shortener Re-enable backslash escape inline pattern Add support for online mentions Add support for importing avatar from GitHub on account creation",https://summerofcode.withgoogle.com/programs/2023/projects/bQeFtzEc
PGweb Testing Harness for the official PostgreSQL Website,Akshat Jaimini,https://destrex271.hashnode.dev/pgweb-testing-harness-suite-documentation,"Ilaria Battiston, sfrost",PostgreSQL,"python, selenium, django, Bash Scripting, Pa11y, Beautiful Soup 4","web, unit testing, CI/CD, Integration testing, Web Testing, Accessibiltiy Testing","As part of the Google Summer of Code 2023 , we developed an automated testing harness suite for the official PostgreSQL website. The suite addresses the challenge of manually debugging bugs in the website, which could take hours of trial and error to identify the root cause. By automating the debugging process, the testing suite can significantly reduce the time it takes to identify and fix bugs, improving the overall quality of the website. The suite utilizes the amazing abilities of Django Framework and Selenium webdriver to generate easy to work with logs. The testing suite is designed to test all aspects of the website, including the user interface, the database, and the back-end code. It uses a variety of techniques to test the website, including unit testing, integration testing, and system testing. The testing suite is also designed to be extensible, so that it can be easily updated to test new features and changes to the website.",https://summerofcode.withgoogle.com/programs/2023/projects/WQ90dY05
Make GNOME platform demos and create offline documentation viewer for Workbench,Akshay Warrier,https://akshaywarrier.medium.com/gsoc-2023-final-project-report-78c70210bdcc,"Sonny Piers, Andy Holmes",GNOME Foundation,"javascript, gtk, css","education, linux, programming","Workbench is an application that lets you experiment and tinker with GNOME technologies. An important feature of Workbench is the ""Library"" which is a collection of demos, showcasing the various widgets and APIs GNOME has to offer. This project aims to add more entries to the Library and cover most widgets, APIs, and design patterns. Additionally, this project also adds an offline documentation viewer for Workbench which lets users view, browse, and search documentation for GNOME libraries inside Workbench.",https://summerofcode.withgoogle.com/programs/2023/projects/AYtTvdlp
Diffusion Models for Fast Detector Simulation,Akshit Choudhari,https://github.com/ML4SCI/DeepFalcon,"ML4SCI, Abdulhakim Alnuqaydan, Michelle Kuchera, Harrison Prosper",Machine Learning for Science (ML4SCI),"python, numpy, pytorch, Matplotlib",machine learning,"Particle colliders such as the Large Hadron Collider (LHC) play a crucial role in advancing our understanding of fundamental particles and their interactions. To achieve their desired performance, these experiments rely on accurate simulations of high-energy physics (HEP) events. However, simulating HEP events required for these experiments with traditional approaches such as Monte Carlo simulation is time-consuming and computationally expensive because of which there is a need to explore different approaches. DeepFalcon is a generative ultra-fast non-parametric detector simulation package. This project aims to extend DeepFalcon by adding functionality for Diffusion models to it. The proposed project will build upon existing research on diffusion models and leverage the advancements in deep learning techniques to explore the application of diffusion models for fast simulation of HEP events in particle detectors and potentially improve the accuracy and efficiency of the simulations.",https://summerofcode.withgoogle.com/programs/2023/projects/QDPyBSbO
Scraper Redesign,Akshit Tyagi,https://gist.github.com/exitflynn/3a8db95de7208456464db8c8b71b9b1d,"Nabobalis, samaloney, Laura Hayes",OpenAstronomy,"python, Regex","scraping, Parsing, Refactoring, System Design, requests, Regex",The Scraper class in SunPy retrieves solar data from web sources using efficient file organization. The current implementation uses regex for the core functionality which limits the use-cases and has made the class difficult to maintain. The project aims to re-implement the Scraper to use parse instead and make it easier to work with. The goal also involves implementing newer functionality while keeping the same API for the rewritten parts.,https://summerofcode.withgoogle.com/programs/2023/projects/2Gxxa7qS
Build a Dart HTTP client using Java APIs,Alex James,https://github.com/alex-james-dev/gsoc-2023-report,"Hossein Yousefi, Brian Quinlan",Dart,"android, java, flutter, dart, jni",http,"Create a new HTTP client for the Dart programming language that conforms to the package:http Client interface and uses native Java HTTP APIs through package:jnigen. Using native Java HTTP APIs will allow us to provide several key features requested by our users, such as supporting the system-configured proxy, honouring user-installed and user-disabled certificate authority (CA) certificates, and supporting KeyStore PrivateKeys.",https://summerofcode.withgoogle.com/programs/2023/projects/NKUQqmSA
Leveraging Morphological Data from Linguistic Software Tools for Computational Resource Generation,Alex O'Neil,https://apertium.projectjj.com/gsoc2023/aconeil.html,"Daniel Swanson, Flammie",Apertium,python,"machine translation, language technology, Less-resource languages","This proposal aims to leverage the language documentation data compiled by linguists in popular fieldwork software tools for extraction of morphological data that can be integrated into the Apertium platform. While linguists are able to build elaborate descriptions of a language, including detailed morphological analysis, using software tools such as FLEx and TLex, this data is seldom used in the generation of computational tools for languages. Data from FLEx and TLex can be exported in XML format and this data can then be used to extract information that can be used in the creation of a monolingual dictionary in Apertium, such as head words, parts of speech, morphological segmentation, and more depending on the information detailed by the linguist(s) working on the data.",https://summerofcode.withgoogle.com/programs/2023/projects/RhokBhsw
Glee Authentication,Alexander Godwin,https://medium.com/@alecgee73/my-gsoc-experience-asyncapi-glee-authentication-f8c6df483f17,"Souvik De, Nomani",Postman,"typescript, AsyncAPI","web, distributed systems","This project aims to enable many authentication frameworks and add support for an authentication layer to Glee. This will give developers the ability to use Glee to create secure online applications with a variety of authentication choices. To accommodate future additions of new authentication frameworks, the authentication layer will be created to be modular and adaptable. After this project, when using Glee to build a server, the developer should be able to specify the authentication strategy they wish to support. Token-based authentication: This could be done using the jsonwebtoken npm package, provision will be made for both refresh and access tokens. Access tokens will be short-lived tokens, while refresh tokens will have longer life spans and allow for renewal of the access tokens. Basic authentication: This authentication strategy would be implemented from scratch. Certificate-based authentication: certificate-based authentication will be implemented from scratch. OAuth 2.0 authentication: OAuth 2.0 authentication will be achieved using the node-oauth2-server npm package. Session-based authentication: The viable option here will be to build the session-based authentication from scratch, as many of the options available such as passport-session, express-session, and fastify/session are all framework dependent.",https://summerofcode.withgoogle.com/programs/2023/projects/0yGBQQwG
1st CLasS (Custom Logic as a Service) for Local FPGA Deployment using F4PGA,Ali Sajjad,https://medium.com/@alisajjad1705/open-source-fpga-world-a-road-to-1st-claas-f1dad0923db3,Steve Hoover,CHIPS Alliance,"python, System Verilog, Makefile, Cloud FPGA, TL Verilog","Cloud FPGA, FPGA Development",1st CLasS framework is an open-source project that deals with the deployment of a custom kernel on AWS EC2 instance cloud FPGAs with fully automated scripts and establishing a connection with Web Applications using web protocols and APIs. The AWS F1 instances are quite costly (around 2 dollars/ hr) so the focus of the project will be to add local FPGA deployment as well and integrate it with a hardware-accelerated web application.,https://summerofcode.withgoogle.com/programs/2023/projects/ELNzdcr2
Knowledge Graph aware Recommendation System with DBpedia - Alvaro Lopes,Alvaro Jose Lopes,https://gist.github.com/AlvaroJoseLopes/69aecc214239c0fa4005e49e06260648,"Edgard Marx, Paulo do Carmo",DBpedia,"python, numpy, scikit-learn, sparql, pandas, YAML, NetworkX, DBpedia","framework, data integration, Recommender Systems, DBpedia, Entity Linking, Data Enriching, Knowledge-aware RS, Node embedding based RS","DBpedia proves to be a way of ”Bringing Order to the Web” with structured information as Open Knowledge Graph, contributing towards making quality data more accessible. The main goal of this project is to explore DBpedia’s potential at enriching the data provided to Recommender Systems (RS) on different standard datasets, such as MovieLens and LastFM. A framework, for running reproducible experiments with only the model implementation and a simple .yaml configuration file, will be implemented. Through the framework, this project allows practitioners to easily evaluate and compare their proposed RS algorithms with existing approaches, enabling future benchmarks on enriched and non-enriched datasets. With access to enriched standard RS datasets sourced primarily from DBpedia, this project aims to demonstrate DBpedia’s applicability to RS area and other areas of ML, potentially promoting the adoption of DBpedia and increasing its active community. The main steps of the project are: • Entity linking: between DBpedia and standard RS datasets. • Data Enriching: Build SPARQL queries to enrich RS datasets with useful DBpedia‘s properties. • Framework Implementation: for reproducible experiments.",https://summerofcode.withgoogle.com/programs/2023/projects/3NTZTLYb
Deep Autoencoders for Scientific Data Compression,Aman Singh Thakur,https://zenodo.org/records/10073216,Alexander Ekman,CERN-HSF,"python, jupyter, spark, pytorch, unix","machine learning, deep learning, Neural networks, data compression",Development and Deployment of a Lossy Compression Tool 'Baler' that uses deep autoencoders to flexibly compress scientific data. Use Baler to compress data for LHC experiments like ATLAS and improve existing Baler model to be more robust and accurate while reconstructing data. Document and Benchmark Baler's performance for real-world physics experiment and explore it's capabilities on non-scientific data.,https://summerofcode.withgoogle.com/programs/2023/projects/gnKb1DHZ
Jax Support in DocArray v2,aman0,https://github.com/docarray/docarray/pull/1646,,Jina AI,"python, numpy, pytorch, Jax",machine learning,"DocArray is a library for representing, sending, and storing multi-modal data, with a focus on applications in ML and Neural Search. It currently supports several deep learning frameworks, including PyTorch and TensorFlow. Jax is becoming increasingly popular for deep learning, so we want to integrate it into DocArray. The project we propose is to add Jax as a backend for DocArray, alongside PyTorch and TensorFlow. The first part would involve rewriting and translating all of the computational backend functions of DocArray with the Jax framework. Then, we would battle-test the implementation against a real Jax use case, such as integrating DocArray with Jax support for model training and serving.",https://summerofcode.withgoogle.com/programs/2023/projects/z0OWiySD
Greener coding: back-end development,AmanPandey,https://gist.github.com/salty-ivy/fe8616a28bf7d4a577d84b646141e8a9,"Sage Abdullah, Chris Adams",Wagtail,"python, django, Wagtail","optimisation, sustainability","The project aims to integrate green coding practices into Wagtail’s direction and make concrete improvements to reduce related carbon emissions also ensuring that the websites we build are environmentally friendly. We plan to do so by improving different parts of wagtail architecture like improving project templates, adopting internal template caching, extending image support and lazy loading, lighter embeds, job scheduling interface for asynchronous task processing, eco-friendly themes, and other processing-related optimisations.",https://summerofcode.withgoogle.com/programs/2023/projects/Zs8nVswq
Interactive Visualization for Comparative Metagenomics in MGnify,Amartya Nambiar,https://amartyanambiar.github.io/gsoc-blog/posts/Final_Report/,"Martin Beracochea, sandyr",Genome Assembly and Annotation,"python, react, docker, typescript, JupyterLab, Plotly, HighCharts, Observable Notebooks","web, data visualization, user experience, Comparative Metagenomics","The project aims to improve the visualisation tools for metagenomics data in the MGnify platform by identifying and using new technologies that can be used both on the website and in Jupyter notebooks. The goal is to enable researchers to easily compare taxonomic information from multiple studies for better interpretation and analysis of metagenomics data. Additionally, the project aims to streamline the process of user community contribution to MGnify Notebooks for improved accessibility and user experience. The project will be approached in three phases: research and evaluation of visualisation technologies, development of a Jupyter/observable notebook for comparing and visualising data from two studies, and integration of a JupyterLab extension to streamline the contribution process. The deliverables include a report on suitable visualisation technologies, a fully-functional Jupyter/Observable Notebook, and an integrated extension for user contributions. As a stretch goal, a component for the MGnify website that allows users to select multiple studies and launch a notebook for cross-study analyses will be developed.",https://summerofcode.withgoogle.com/programs/2023/projects/Kg1GYNtp
KerasCV: Creating Tutorials,Ambra Jin,https://github.com/TGAmbra/GSOC-2023/wiki/Home/43429ef393c8ef901e8765bf469a75df7289cb5d,Shilpa Kancharla,TensorFlow,"python, keras","deep learning, 3D modelling","The existing Keras Database [1] presently features just four functional tutorials for 3D datasets, the latest of which dates back to the summer of 2021. To address this gap, I am proposing an innovative new tutorial for this project that draws on one of the most significant papers in 3D shape reconstruction from 2022: ""Learning to Generate 3D Shapes from a Single Example"" [2]. The paper proposes a model capable of generating new shapes from a solitary reference 3D shape, presenting a promising new avenue for exploration in this field.",https://summerofcode.withgoogle.com/programs/2023/projects/9lfGbA1d
Wiki Education Dashboard: Refactoring and upgrading React,AmineH,https://gist.github.com/Aminehassou/043ac4861cd0728c8ea53fe7fc3d45f5,Sage Ross,Wikimedia Foundation,"javascript, ruby on rails, react, ruby",web,"This proposal aims to improve the dashboard's performance and overall code-quality by making a variety of changes to the frontend codebase. this involves converting all React class components to functional components, replacing the remaining jquery code with vanilla JS code and updating to a newer version of React (React 18). This proposal will essentially modernize a large portion of the frontend codebase. Allowing for an easier developer and user experience.",https://summerofcode.withgoogle.com/programs/2023/projects/NfzyC1AJ
Flood Mobile,Amit Amrutiya,https://medium.com/@amitamrutiya2210,"jesec, Akshat Tripathi",CCExtractor Development,"flutter, dart",mobile development,"Flood is a monitoring service for various torrent clients. It's a Node.js service that communicates with torrent client and provides a user-friendly mobile UI for administration. It has great features such as the ability to use magnet/torrent files to download torrents, support for RSS feeds, the ability to select torrent files to start downloads from any location on your device (e.g., File Explorer, WhatsApp), notification action support, and many more. My primary goals would be to, make the Flood-Mobile app scalable through state management migration, create a testable app, implement a feature for changing languages, develop a customizable user interface, improve the app's power management, enhance notification support, add various sorting functionalities for torrents, and implement the CICD tool fastlane in the app.",https://summerofcode.withgoogle.com/programs/2023/projects/iblkHo3k
TensorLy: Multi-backend Tensor API Libraries,Amitesh Vatsa,https://docs.google.com/document/d/1IVkpVEWFVziwcYmpp-x68Y0YHV4QIUKPZQ0FA79Hrew/edit?usp=sharing,"Deeptendu, James Keane, Haris Mahmood",Ivy (lets-unify.ai),"python, machine learning, ivy, TensorLy","machine learning, Tensor Operations","The aim of this project is to use IVY as a framework and build that into TensorLy project so that TensorLy would be usable with any of the frameworks supported by IVY. This will allow TensorLy users to switch backends via IVY’s backend handler rather than their own native backend handler. Set of deliverables are as follows: Implementing the desired functions in tensorly/backend/ivy_backend.py which will enable users to now use IVY as a framework in TensorLy. Implementing TensorLy’s abstraction layer (functionalities like Tensor Decomposition, Tensor Regression and Tucker Tensors) by using IVY as the framework. Implementing new functions into Ivy’s Functional API which exists in TensorLy’s API but currently not present in IVY’s Functional API (for example: context, index_update, ndim, sign, logsumexp, Conj). Creating demos that demonstrate how the functionalities can be used while building projects using TensorLy when IVY’s backend handler is being used. Running tests and implementing benchmarks showcasing the difference in runtime performance. Documenting the benchmark evaluations in a notebook for further research. Extending features with suggestions from the community.",https://summerofcode.withgoogle.com/programs/2023/projects/kvfFWRyF
animint2 Documentation and Bug Fix Project,ampurr,https://gsoc.ampurr.com/,"Toby Dylan Hocking, Faizan Uddin Fahad Khan",R project for statistical computing,"javascript, r","data visualization, documentation, interactive, grammar of graphics","The animint2 Documentation and Bug Fix Project will make the animint2 reference documentation more accessible, fix errors in the documentation, and reduce the number of bugs by at least one.",https://summerofcode.withgoogle.com/programs/2023/projects/6dubWFIS
Key Path inference and diagnostic improvements,Amritpan Kaur,https://github.com/apple/swift/pull/67297,Pavel Yaskevich,Swift,"c++, swift, compilers","compilers, diagnostics, Swift, type inference","SE-0249 introduced key path expressions as functions to the Swift language, to allow Swift users to write a more concise \Root.value in place of the more verbose { $0[keyPath: \.] } wherever key paths are used as literal expressions. During compilation, the key path expression root and value are sequentially type-checked to resolve a key path type from this context. However, the current design of how the type-checker evaluates key path component types, their relationships to each other, and key path capabilities results in incongruous compiler errors for otherwise valid Swift code. This proposal briefly explores how key path expressions are type-checked today and suggests how this type-checker process can be made more robust, dependable, and faster.",https://summerofcode.withgoogle.com/programs/2023/projects/w2oMo4BC
UI tool for fetching online content,Amulya Paritosh,https://amulyaparitosh.github.io/Google-Summer-of-Code-2023-Work-Blog-HTML/,"wandererfan, Chris Hennes, sliptonic",FreeCAD,"python, qt, pyqt, sqllite, PySide, Qt Designer","application, library management system, add-on, online repository, component management","A library management add-on for managing Different online-offline FreeCAD components is a utility application for FreeCAD which allows an easy and structured management of components/models available online or offline and to easily be inserted into the FreeCAD document. Its basic functionalities is to facilitate individual component from the online repository to be able to browsed, downloaded, and extended by already available local components. For a Library management system, a robust repository of data and an local storage structure is must. This is important as user need to brows through the all the existing models which are the part of the repository and download only selective models. A structured local storage will not only also allow users to easily add their own models to the local library management system, but also to the online repository open to public. For maintaining the metadata of these, a well defined storage structure is required. All this need to have an proper interface to be operable. The interface for the above will be developed as both a Graphical Interface and module for python scripting.",https://summerofcode.withgoogle.com/programs/2023/projects/h7rrw0s0
COVID-19 data explorer,Ana Laura,https://github.com/Na1au/COVID19_data_explorer,"Marc Gonzalez Capdevila, Karine Pistili Rodrigues",Liquid Galaxy project,"flutter, KML","mobile app, data visualization, graphics","The project is a data visualizer about COVID 19, it aims to analyze the data obtained about the virus through an API, calculate its evolution using an AI and show possible contamination and mutation statistics, thus showing the past data and possible future data in a Liquid Galaxy cluster. Thus, it will be possible for the user to filter the data about the virus and view its trajectory around the world based on its evolution through filters chosen by him, such as country, date and variant.",https://summerofcode.withgoogle.com/programs/2023/projects/UTsePWCM
Developing Large-Scale Calculation Management Tools for CalcUS,Anchal Malani,https://gist.github.com/anchalm03/75bf9c8e288b2478f116f4ffee906f4c,"Raphaël Robidas, Claude Legault",Open Chemistry,"python, postgresql, javascript, django, html, jquery",web,"CalcUS aims to democratize access to computational chemistry by providing a user-friendly web interface to simplify running and analyzing quantum mechanical calculations. These calculations allow the researchers to better understand the properties of molecules or the underlying mechanisms of chemical reactions. Quantum chemistry projects can involve performing calculations on a large number of structures (10-100) with different parameters(1-10). Currently, these calculations have to be launched individuallyand sequentially. This project aims to add the feature to make this process seamless and highly automated, from launching the calculations to reporting the results. This is a proposal to implement; ● Variation of the calculation web UI, aimed specifically at batch calculations with variable parameters ● Design and implement the workflow to handle these batch calculations ● Implement results gathering and reporting in a convenient format ● Write relevant unit and/or integration tests.",https://summerofcode.withgoogle.com/programs/2023/projects/7GV3rZJU
Eclipse 4diac IDE User Interface Quality Improvement Through Automated Testing,Andrea Zoitl,https://wiki.eclipse.org/Eclipse_4diacWiki/Development/User_Interface_Quality_Improvement,"Bianca Wiesmayr, MikeOberlehner",Eclipse Foundation,"java, RCPTT, SWTBot",UI Testing,"Often open source projects have only a few contributors. These try to incorporate all new ideas and improvements. However, this leaves little time for testing, which means that the software quality suffers. Since Eclipse 4diac is also still tested manually, which on the one hand is inefficient and on the other hand is often not performed completely due to time constraints. For this reason, an automated test set for the 4diac IDE user interface would be a good improvement.",https://summerofcode.withgoogle.com/programs/2023/projects/LWRyOju1
Android Auto,Andrei Shkrob,https://gist.github.com/AndrewShkrob/9da5959fd9fe89aff472ce00ca77cf4e,Roman Tsisyk,Organic Maps,"java, c++","android, Android Auto",This project aims to integrate Android Auto functionality into Organic Maps to provide an alternative to proprietary mapping solutions and make it more accessible and convenient for drivers.,https://summerofcode.withgoogle.com/programs/2023/projects/HMGczlm7
New Summary Statistics API for Java 8 streams,ani5rudh,https://gist.github.com/ani5rudh/4d82f3498f20c9c1a6d6e429cffaab3b,"Gilles, Alex Herbert, Bruno P. Kinoshita",Apache Software Foundation,java,"functional programming, statistics, Object Oriented Design, Streams","My goal is to design an updated summary statistics API for use with Java 8 streams based on the summary statistic implementations in the Commons Math stat.descriptive package. The project aims to be a library of commons statistics functions in line with the latest developments in the Java language, in particular Java's functional programming syntax. At the end of the project I plan to provide a lightweight and reusable API that utilizes Java streams to offer commonly used statistical functions, with an emphasis on minimizing external dependencies and avoiding redundancy.",https://summerofcode.withgoogle.com/programs/2023/projects/lEdvtw7o
Implementation of the pgr_KSP and add all the overloads.,Aniket Agarwal,https://github.com/pgRouting/pgrouting/wiki/GSoC-2023-Implement-pgr_KSP-and-Add-All-Overloads,"Ashish-Kumar, Shobhit Chaurasia",OSGeo (Open Source Geospatial Foundation),"c, postgresql, c++, pgRouting","routing, rdbms, graph","The implementation of a pgr_ksp() function that can calculate K shortest paths for various scenarios is essential for many applications. This project aims to implement a pgr_ksp function that can handle four more different scenarios that are one-to-many, many-to-one, many-to-many, and combinations of (source, target). By implementing such a function, we can efficiently and accurately find multiple shortest paths for different scenarios and improve the performance of various applications that rely on this functionality.",https://summerofcode.withgoogle.com/programs/2023/projects/8JpdTHk8
Develop Performance Farm Benchmarks and Website (2023),Anil rundla,https://lord2anil.github.io/gsoc23-report/,"Ilaria Battiston, sfrost",PostgreSQL,"python, postgresql, django, html, css, js",web,"The Performance Farm project aims to emphasize Postgresql performance as it evolves by conducting benchmarks and posting the results on a webpage. The project has three sections: A client script responsible for getting the most recent Postgres version, compiling and installing it, and then executing PgBench to collect results in JSON format. An API that accepts results, parses them, and saves them in a database while providing endpoints from which they may be retrieved. A website that parses and collects API responses and shows them as tables, graphs, and textual information. The proposed project aims to enhance the project by adding features such as generating and managing EXPLAIN query plans, adding custom queries to the benchmark suite, and integrating profiling tools into the performance farm.",https://summerofcode.withgoogle.com/programs/2023/projects/W2YKA7jL
OSAVC : Technical Documentation,Aniruddha Thakre,https://uccross.github.io/open-source-autonomous-vehicle-controller/,"Carlos Espinosa, Aaron Hunter",UC OSPO,"Technical writing, Markdown Language, Website",documentation,"The OSAVC documentation project for GSoC 2023 aims to create comprehensive documentation for a new user of the OSAVC controller. The project will involve working closely with one of the mentors and incrementally documenting the various procedures starting from a fresh OSAVC controller to a fully-implemented application for a vehicle. To address the global supply chain issues, a new board on a networked device will be set up that can program the OSAVC remotely. The project will begin with testing each sensor and interface and move on to more complex applications, with documentation created at each step.",https://summerofcode.withgoogle.com/programs/2023/projects/xAHWdWNV
Casting Local Media,Ankit Kiran,https://docs.google.com/document/d/e/2PACX-1vSYoYA92xwisADrxlRHePm8KkDOCnNebXkOcW53s0PZ-v8xPdsXWZ1pbgBfM-nMNYqZP2K3uPK3ra6g/pub,"Pallavi, Muyao Xu, Angelo Tadres",Chromium,"javascript, c++, GTest","web, Media Casting","The primary objective of this project is to enhance the local media casting experience within Chromium by implementing a range of improvements. These enhancements include prompting casting initiation for new users through an In-product Help (IPH) pop up, refining the interaction between media playback and casting controls to avoid unnecessary consumption of resources, and fortifying the DIAL protocol's reliability through the introduction of custom timeout actions.",https://summerofcode.withgoogle.com/programs/2023/projects/ULtyGXXr
ExtractAPI while building,Ankur Saini,https://gist.github.com/Arsenic-ATG/65fa1d38d2677dc29d33191f47af66d4,Daniel Grumberg,LLVM Compiler Infrastructure,"llvm, c++, clang","compilers, development tools, libraries",This project aims to give LLVM-clang the ability to generate ExtractAPI symbol graph files as a side-effect of a regular compilation job. This can enable using the symbol graph format as a lightweight alternative to do code intelligence offline and outside of an interactive context.,https://summerofcode.withgoogle.com/programs/2023/projects/lAxUTgOM
Automated system for packaging freeware games with ScummVM,AnkushDutt,https://blogs.scummvm.org/ankushdutt/2023/08/27/final-submission/,"John Willis, Niv Baehr",ScummVM,"c++, bash","game, Game Packages, Downloader, ScummVM Bundler","This project aims to develop an automated system that simplifies the packaging of freeware games for various platforms (like google play, steam, etc.). This system includes predefined platform-specific rules to generate game packages. The resulting distributable is ready for uploading to different platforms, including Linux, Google Play, Apple App Store, Steam, and ForgeTV store. Users can then browse and download these game packages using the proposed ScummVM downloader GUI. Moreover, the system also includes a bundler script that bundles the game with ScummVM to create a standalone application for distribution.",https://summerofcode.withgoogle.com/programs/2023/projects/HzM31ka6
Inner Boundary Velocity Solver,Ansh_49,https://docs.google.com/document/d/1qXd7ps3rxMk0x2He3ZKlaWR8125VJ8rzbKXBb6m03hw/edit?usp=sharing,"Jack O'Brien, Andreas Flörs, Christian Vogl, Yuki Matsumura, Anirban Dutta",TARDIS RT Collaboration,"python, numpy, jupyter, pandas, Matplotlib, sklearn","simulation, visualisation, astrophysics, Estimation, MonteCarlo","TARDIS operates on a “photospheric” inner boundary approximation. A hard inner boundary in velocity is set from which radiative packets are emitted through the ejecta according to a black-body distribution at a given temperature. Currently, TARDIS can solve for the radiative and inner boundary temperatures as well as dilution factors given a static inner velocity boundary. The precise location of where this inner boundary velocity should be placed is not always obvious and there are a few methods by which one can intelligently select a location based on the properties of the plasma (which are constantly updating over each iteration). This project will aim to update the location of the inner boundary velocity based on a set of options for desired properties of the plasma at each iteration. The options include setting the inner boundary velocity according to a given optical depth over all frequencies (either Planck or Rossland mean opacities) or setting the inner boundary according to a desired value for the dilution factors. The project can be broken down into the following four deliverables: - Estimating the inner velocity value based on target values of optical depth and dilution factor - Integrate the estimation methods into TARDIS base - Write thorough test cases for all the above changes. - Make Jupyter notebooks and tutorials demonstrating the feature. -Thorough documentation of the changes. - Write a blog about the project.",https://summerofcode.withgoogle.com/programs/2023/projects/uyYkVw0V
Improving Performance API Code Health,Ansh_Mishra,https://docs.google.com/document/d/1xyOVGx6Evx4R9qj4J1ssrWT635Uo1kkpgLu-HNifJKk/edit#heading=h.x9snb54sjlu9,"Sreeja Kamishetty, Yoav Weiss",Chromium,"c++, html, css, js","web, browser","The primary objective of this project is to enhance the code quality, strengthen the test framework, and bolster the reliability of Chromium's Performance API implementation. The Performance API, which encapsulates the Performance interface of the High Resolution Time standard, plays a pivotal role in enabling web developers to accurately identify and troubleshoot bottlenecks within their web applications. To ensure uniformity in functionality and compliance with current standards across diverse web browsers, the web-platform-test features a comprehensive suite of tests. Over the course of this project, in close collaboration with experienced mentors, the focus will be on harmonizing Chromium's Performance API implementation with the web standards. This endeavour involves meticulous analysis, debugging, and the resolution of issues and failures reported by the web-platform-tests. This comprehensive undertaking will culminate in a secure and more reliable browser ensuring enhanced user experience. These optimizations shall align with Chromium's core principles of speed, security, stability, and simplicity.",https://summerofcode.withgoogle.com/programs/2023/projects/CDKfzWvq
Support importing Excel and JSON files,Anshuman Maurya,https://github.com/centerofci/mathesar/issues/3216,"Dominykas Mostauskis, Anish Surendra Umale",Mathesar,"python, django, sql, sqlalchemy","databases, web","Mathesar is an open-source, web-based database management tool that is easy to use, flexible, and scalable. It provides users a simple, intuitive interface for managing their databases, including creating and editing tables, defining relationships between tables, and querying data. Mathesar UI allows users to import data from CSV and TSV files. We aim to expand this functionality into importing JSON and Excel files too. The project will allow users to import JSON and Excel files and create a table from the imported data. The user can preview the table, remove/rename columns, change data types, and more. If the imported file is not in a suitable format for creating a table, we will develop algorithms to convert the file into a suitable format. If the algorithm doesn’t work, the system will refuse to import the file and give the user a readable error.",https://summerofcode.withgoogle.com/programs/2023/projects/A3gI5pYL
Graph Neural Networks for End-to-End Particle Identification with the CMS Experiment,Anthony Song,https://medium.com/@anthony_iytrzx/test-title-gsoc-2023-92732bff3e57,"ML4SCI, Bhim Bam, Colin Crovella, Ruchi Chudasama",Machine Learning for Science (ML4SCI),"python, pytorch",graph neural networks,"This project focuses on developing and evaluating end-to-end Graph Neural Network (GNN) models for low-momentum tau identification in the context of particle physics experiments, such as the Compact Muon Solenoid (CMS) at CERN. The project aims to improve tau identification performance by leveraging GNNs' ability to capture complex relationships between jet constituents. Additionally, this project will test and benchmark GNN inference on Graphics Processing Units (GPUs) to assess the potential for real-time analysis and integration with existing systems. Key tasks include literature review, data preprocessing, graph construction, model selection, implementation, training, evaluation, optimization, GPU inference testing, benchmarking, and documentation. The expected outcomes of the project are a trained end-to-end GNN model tailored for low-momentum tau identification, a comprehensive evaluation and optimization of the model, and a thorough benchmark of GNN inference on GPUs.",https://summerofcode.withgoogle.com/programs/2023/projects/69elZR8R
Breaking the Thread Barrier: Boosting I/O Performance with io_uring and FS2,Antonio Jimenez,https://github.com/armanbilge/fs2-io_uring/pull/78,"armanbilge, Fred Honório, Christopher Davenport, Daniel Spiewak",Scala Center,"scala, Typelevel, Cats Effect, FS2, io_uring","functional programming, Asynchronous I/O, Thread Model Optimization","The current state of the asynchronous I/O on the JVM involves using separate selector threads to manage I/O events through system functions like epoll or kqueue. Although frameworks like Netty and NIO2 make this approach seem reasonable, the use of separate event loop threads is not without cost. In high-RPS services, these threads can compete for CPU time with worker threads executing application tasks, leading to resource contention and potentially significant performance loss. In contrast, Cats Effect offers a different threading model, integrating I/O and application tasks into a single runtime system, reducing contention an enhancing overall efficiency. io_uring, the key component of this project, offers two major advantages: (1) it enables all supported syscalls to become asynchronous from the application’s perspective, allowing for multiple syscalls to be initiated in parallel without blocking the calling thread, and (2) it uses a pair of ring buffers for syscall submission and completion events that are shared between the application and the kernel, dramatically reducing the overhead of calling from userspace into kernelspace. When integrated with Cats Effect, io_uring can significantly improve the efficiency of syscalls, requiring fewer calls into kernelspace during the worker loop. This proposal brings two key innovations together: a new threading model and a new I/O API. By integrating Cats Effects and FS2 with io_uring, we aim to develop an alternative solution to minimize the inefficiencies found in the traditional model, offering a more efficient and performant solution for I/O-intensive applications.",https://summerofcode.withgoogle.com/programs/2023/projects/RDa4p6HQ
WebAssembly Support for clang-repl,Anubhab Ghosh,https://gist.github.com/argentite/c0852d3e178c4770a429f14291e83475,"Vassil Vassilev, Alexander Penev",LLVM Compiler Infrastructure,"javascript, llvm, c++, jupyter, wasm","web, compiler, JIT, Linker, Interpreter","Clang includes libInterpreter, a framework for incrementally JIT compiling and executing C++ code. The goal of the project is to port this to WebAssembly and run inside a Javascript engine in a browser. This would involve modification to libInterpreter to run in WASM and produce WASM JIT code. These separate WASM modules need to be linked together and executed in the JS engine. If possible, the final goal is to integrate this with JupyterLite, a version of Jupyter that runs WASM kernels entirely on the client side.",https://summerofcode.withgoogle.com/programs/2023/projects/X0cFgJkY
Perf Data Converter,Anup Sharma,https://gist.github.com/TwilightTechie/94f6fc54413e7d88b751615ff280af17,"Ian, Namhyung Kim",The Linux Foundation,"c, json, kernel, perf, Parser, Converter, perfdata, serializer","linux, kernel, low-level, Perf, Embedded C","Linux profiling tool a.k.a perf is the home for analyzing the entire system. It provides the support to analyze the stacks end to end leading from hardware events such as instructions executed, cache-misses suffered, or branches mispredicted to software events such as CPU-clock, page-faults, task-CPU etc. The linux perf tools help us to point out exactly where the specific event is leading to performance downturn in kernel, BPF or userspace application. The increasing demand for consolidation due to the bloom in fields of AI and the cloud technology requires increased efforts to provide best performance for novel devices. As software systems become increasingly complex, identifying and resolving performance bottlenecks becomes more challenging. In an effort to address this issue, this project seeks to enhance the support for performance data analysis in various formats commonly used by software developers. Specifically, we aim to enable the export of performance data to formats such as Firefox's Gecko profile format and Chrome's trace event format, making it easier for developers to analyze and optimize their code for different platforms and environments. By doing so, we hope to improve the overall performance and user experience of software applications.",https://summerofcode.withgoogle.com/programs/2023/projects/OTLxQ6xy
Improving And Expanding Functionalities Of SymPy's Control Module,Anurag Surendra Bhat,https://github.com/sympy/sympy/wiki/GSoC-2023-:-Improving-and-Expanding-the-Functionalities-of-SymPy's-Control-Module-by-Anurag-Bhat,"Smit Lunagariya, Jason Moore, Nikhil Maan",SymPy,"python, sympy","Control Systems, Symoblic Mathematics","In this project, I aim to improve and expand the functionalities of the physics control module. This module was introduced to SymPy 2 years ago. The work done is commendable but has a good scope for improvement. There are many incomplete areas and there is a lot of potential for new implementations. I plan to learn the relevant theoretical aspects of control systems required to complete this project by referring to course textbooks and other CST packages available in the open literature. By the end of this summer SymPy will have a complete Control toolkit, so that it can match the functionalities of MATLAB and other popular software toolkits in this domain.",https://summerofcode.withgoogle.com/programs/2023/projects/1LZE1JYa
Integrate FreeType with alternative rendering engines,Anurag Thakur,https://docs.google.com/document/d/14me6L4HEMnjBVFwOCjaBayRjQym-WK_RQuOJt7A3pCY/edit?usp=sharing,Werner Lemberg,FreeType,"c, rust, markdown","Font, Font Rasterization","Investigate and implement alternative font renderers in FreeType, including: • font-rs: A font renderer developed by Raph Levien. A blogpost describes some of its features in more detail. It claims to be much faster than FreeType's anti-aliasing rendering module by using different data structures, SIMD optimizations etc. • font-go: Port of font-rs to the Go programming language, includes a fixed-point implementation that is allegedly 1.4 times faster. • fontdue: It is another rendering engine based on font-rs, and it claims to be even faster and is actively developed. Additional discussion can be found here. • Pathfinder: Another project inspired by font-rs is Pathfinder, which takes advantages of GPU rendering. The project involves continuing and eventually finalizing the GSoC 2022 contribution, including but not limited to improving build system support, adding SIMD optimizations to more processors, improving documentation etc",https://summerofcode.withgoogle.com/programs/2023/projects/vnrdFMIr
LPython : Implementing Symbolic Algorithms as a part of ASR,Anutosh Surendra Bhat,https://gist.github.com/anutosh491/9cdea54f937705ed17a1dd64c892948d,"Ondřej Čertík, czgdp1807",Python Software Foundation,"c, python, llvm, c++, sympy, SymEngine","compilers, symbolic mathematics","The idea here is to provide both runtime support (preferably using the SymEngine library to provide the computation, as it is fast and robust) and compile time support (in ASR) to implement Symbolic Algorithms in LPython. The runtime operation could use the SymEngine library for LLVM, C and C++ backends. For Python backend, we can simply use SymPy itself. The algorithms would be implemented in the ASR code, which would make them independent of any specific frontend. Any frontend that uses the ASR code could then make use of the symbolic algorithms without having to reimplement them. LPython, in this case, would not implement the symbolic algorithms themselves, but would instead parse the syntax used by the SymPy library, which already has a rich set of symbolic algorithms, and use the ASR representation of these expressions to perform various operations. This would allow LPython to have powerful symbolic manipulation capabilities without having to reinvent the wheel.",https://summerofcode.withgoogle.com/programs/2023/projects/KwNcukf5
Chrome System Audio Mirroring on macOS and Linux,Anže Lešnik,https://lesnik.cc/google-summer-of-code-2023-at-chromium/,"Stephen, mark a. foltz, Angelo Tadres",Chromium,"linux, c++, macos, ScreenCaptureKit","audio, casting","Casting is a feature of Chrome that allows a tab or a screen to be mirrored to a remote Chromecast-enabled device. Currently, both audio and video can be mirrored for any source from a Windows device, while audio mirroring is not supported on macOS and Linux when casting a screen. This project aims to bring casting to parity on all platforms. We will update the audio input capture for macOS and Linux with support for system audio capture, implement the new ScreenCaptureKit API available in macOS, and write unit tests. Support for casting to audio-only devices will also be enabled.",https://summerofcode.withgoogle.com/programs/2023/projects/xZOidcmN
LLDB kernel module improvement,AoK_Blast,https://wiki.freebsd.org/SummerOfCode2023Projects/LLDBKernelModuleImprovement,"Ed Maste, Li-Wen Hsu",The FreeBSD Project,"llvm, c++, FreeBSD Kernel Modue","kernel, operating system, compiler, Debugger","Problem statement: LLDB doesn't support module information in kernel space now. So in my proposal, I want to implement full kernel module support for kernel space. Method: To achieve this goal, I take kgdb as a reference and use the same method in in my project but use lldb as the backend (kld as the frontend). Deliverables: In brief, this project is to implement kernel module supply for lldb which the current lldb doesn't have. After this project, LLDB will support more kernel level debug information and thus facilitate kernel module development.",https://summerofcode.withgoogle.com/programs/2023/projects/Q8nngj1k
Project Properties Dialog,Arin Modi,https://medium.com/@arinmodi2306/work-product-google-summer-of-code-with-app-inventor-cf7471e16344,"Evan Patton, Vishwas Adiga",MIT App Inventor,"java, gwt",web,"Currently, the properties for the screen1 form contains a number of project project-wide properties such as App Name, Theme and many more. We want these properties separated from the component and maintained on a separate dialog on the designer view.",https://summerofcode.withgoogle.com/programs/2023/projects/njEu8xBZ
Honeyscanner: a vulnerability analysis tool for honeypots,Aristofanis Chionis,https://gist.github.com/aristofanischionis/a9d18cb0c8b801bbaf50b51a72fe9405,"Shreyas Srinivasa, Manolis, ryaben",The Honeynet Project,"python, bash, unix","cybersecurity, honeypots, Honeypot Fingerprinting, CyberSecurity Attacks, DoS attacks, Fuzzing Attacks, Exploiting libraries","A honeypot is a security resource that mimics a vulnerable system and is used to lure and trap cyber-attackers. Over the last decade, many open-source honeypots have been developed by the community as side projects without any funding or company behind them. This led to experimental implementations of honeypot ideas, that haven't been tested by security teams thoroughly. This project comes to solve this exact problem. Honeyscanner will be an open-source vulnerability scanner for honeypots. Equipped with a penetration testing strategy that starts from reconnaissance techniques to more advanced ones like exploiting bugs in libraries used by the honeypot, fuzzing and DoS attacks. The tool will be written in Python.",https://summerofcode.withgoogle.com/programs/2023/projects/6oyTxlUo
Add More Summarization Functions,Aritra Majumder,https://aritra8438.github.io/gsoc-final-blog/,"Brent Moran, Sean Colsen",Mathesar,"postgresql, javascript, django, sqlalchemy, svelte","databases, web, data, nonprofit, self-hosted","The Mathesar Data Explorer enables an action called “Summarize” that let a user view a summary of their data, which is in fact an aggregation of some column(s), grouped by some other column(s). Currently, the only possible aggregation functions are counting or listing. This proposal aims that at the end of GSoC '23 period, there will be more aggregation functions (Mean, Median, Sum, Min, Max) will be available to the user to transform the data.",https://summerofcode.withgoogle.com/programs/2023/projects/D9XvkQCN
MCnet/LHAPDF - Test Suite and Coverage for Parton Density Calculations,Arjun Taneja,https://gitlab.com/hepcedar/lhapdf/-/merge_requests?scope=all&state=all&author_username=ArjunBoi,agbuckley,CERN-HSF,"python, c++, git, fortran, unix, ci/cd, YAML","particle physics, Continuous Integration (CI), Continuous Deployment (CD)","The LHAPDF C++ library plays a crucial role in the Large Hadron Collider (LHC) programme by providing it with Parton Distribution Function (PDF) data for both experimental and theoretical calculations. The library's reliability and stability are essential to ensure that the information supplied to the LHC programme is accurate. To ensure that all aspects of the LHAPDF calculations are thoroughly tested, this project aims to implement continuous integration (CI) tests, in GitLab and Cron. These tests will be scalable and will run on a schedule to guarantee the stability of LHAPDF-established behaviours to a high degree of precision. Data from these tests will then be fed into a dashboard on the LHAPDF website, which will work to provide the developers with a bird’s-eye view of the library’s status and performance. This testing and visualisation is aimed at providing the necessary confidence when making new releases and analysing current metrics.",https://summerofcode.withgoogle.com/programs/2023/projects/v2AxsuIT
Dockerizing & Simplifying PyBaMM's Installation,ArjunVerma,https://pybamm.org/gsoc/2023/arjun-verma/,"Saransh Chopra, Ferran Brosa Planella",NumFOCUS,"github, git, docker, bash, ci, GitHub Actions","devops, ci, Dockerization","PyBaMM has a tedious installation process for development , which proves to be difficult for developers & researchers or anyone who wants to develop it. This project aims to simplify the installation process through Dockerization and make PyBaMM more accessible. In addition to that present Continuous Integration(CI) would also be modified in order to integrate dockerization with current workflow.",https://summerofcode.withgoogle.com/programs/2023/projects/vKlUTys3
Completing Vue.js Simulator: Integration and Transition to TypeScript,Arnab Das,https://blog.circuitverse.org/posts/arnab_das_gsoc_final_report/,"satviksr, Devjit Choudhury, Abhishek Zade",CircuitVerse.org,"javascript, ruby, typescript, rails, vue.js","web, Simulator, API Design, Digital logic circuit","This project focuses on finishing up development of Vue.js circuit simulator, alongside converting the existing JavaScript codebase to TypeScript, ensuring a more robust and maintainable platform. The transition to Vue.js and TypeScript will enhance the simulator's performance, stability, and scalability. Key aspects of the project include integrating the simulator with the main repository, setting up TypeScript, API integration and testing, implementing additional features, and refining the user experience.",https://summerofcode.withgoogle.com/programs/2023/projects/eg17qD6w
"Extracting Language and Runtime-Specific Strings in Go, Rust, and Beyond",Arnav Kharbanda,https://gist.github.com/Arker123/7e513d38cc13e57a43cb95ee6e4a3421,"Willi Ballenthin, Moritz, rxrd",FLARE,"python, go, rust","reverse engineering, malware analysis","The FLOSS: Language Specific Strings project aims to enhance the FLARE tool called FLOSS, which is used to deobfuscate protected strings found in malware. The proposed framework will extract language and runtime-specific strings from executables. The project will develop a language identification module, with initial focus on Go and Rust. We will research language string embeddings and create extractor code, leveraging existing knowledge and code to bootstrap this. The project will identify strings related to runtime and library code for targeted programming languages and extend standard output format to render the results. The successful completion of this project will make FLOSS more useful for security analysts and manifest its success as the default tool used for malware analysis.",https://summerofcode.withgoogle.com/programs/2023/projects/pANVOvV7
HPXIO - async and distributed I/O library for HPX,Arnav Negi,https://gist.github.com/Arnav-Negi/042cd197b5c4bb066b933f647035efdb,"Shreyas, akheir",Ste||ar group,"c++, hpc","optimization, parallel algorithms, application",As computation becomes faster I/O starts becoming more and more important. The goal of the project is to utilise HPX facilities such as components and actions and futures to create an I/O library for asynchronous and distributed I/O. The library will enable an interface which will allow the user to send asynchronous or synchronous I/O requests to a cluster of compute nodes. This will also speedup I/O using several nodes to perform I/O parallely.,https://summerofcode.withgoogle.com/programs/2023/projects/r66aQtl0
Introduce New CRD ShardingSphereChaos,aroura,https://github.com/moomman/GSOC-Reporter2023-ShardingSphere-on-cloud,"tuichenchuxin, Maxwell Miao",Apache Software Foundation,"go, kubernetes, chaos","cloud, chaosEngineer","Problem: Introduce New CRD ShardingSphereChaos to ShardingSphere. Plan: 1. Design chaos based on ShardingSphere in a production environment 2.Implement it to out environment by operator.define the status and spec of the corresponding crd based on the actual chaos implemented (considering its duration, running state). The chaos can be managed by writing corresponding logic code in reconcile. 3.make it automatic and do a lot chaos experiments to improve system availability. Result: 1.chaos CRD and controller. 2.chaosEngineer theory about ShardingSphere 3.automatic chaos engineer",https://summerofcode.withgoogle.com/programs/2023/projects/dRt47Swt
GA4GH-FHIR Molecular Consequence Harmonization,Arrax,https://github.com/FHIR/genomics-operations/pull/65,"Rohan Gupta, Bob Dolin, Srikar Chamala, Mihai Todor",Global Alliance for Genomics and Health,"python, mongodb",FHIR,"The Proposal is how to make updates in the reference implementation based on the harmonization work, the creation of the new FHIR profile, and the revisions to the FHIR Operations. Also examine the GA4GH and FHIR data models, comparing and contrasting different representations of molecular consequences, in order to identify additional harmonization opportunities.",https://summerofcode.withgoogle.com/programs/2023/projects/xlmEPbXJ
Improvements for ROS2 Support for Ardupilot,Arsh Pratap,https://discuss.ardupilot.org/t/gsoc-23-wrapping-up-improvements-to-the-native-dds-support-in-ardupilot/105643,"Andrew Tridgell, Rhys Mainwaring",ArduPilot,"gazebo, DDS, ROS-2, XRCE-DDS","robotics, simulation, drones, autonomous vehicle","This project is a continuation of the project : ROS-2 Native Support for Ardupilot, which I worked on while receiving mentorship from Ardupilot in 2021. It intends to provide a number of technical improvements to the ROS-2 support capabilities currently available in the Ardupilot codebase.The major improvements planned for the project are 1) Implementation of Data Writer functions for ROS-2 messages 2) Creating a ROS-2 package that verifies if the DDS capabilities in Ardupilot are functioning properly or not 3) Development support for Gazebo Simulation with ROS-2 4) General Improvements for Ardupilot’s DDS Client to make it more user-friendly",https://summerofcode.withgoogle.com/programs/2023/projects/gwzMO4GB
Interactive Artist Similarity Graph,Arshdeep,https://blog.metabrainz.org/2023/08/28/gsoc-23-artist-similarity-graph/,Mayhem,MetaBrainz Foundation Inc,"python, react, d3.js","user interface, user experience, Open source music database","Discovering new music can be quite an adventure and may lead to finding music which you will hear on repeat for a long time. Currently, ListenBrainz offers many ways to do it, like Fresh Releases, Hue sound, Similar Users and many more. Another powerful discovery tool which can be added to suite is an Artist Similarity Graph. It will provide an intuitive way for the users to analyze relationships between artists. In this way, the users can get exposure to new artists with a music style similar to their favorite artists. This project aims to provide a pleasant UX for the same, while delivering the following features in the UI: 1. Display a graph of related artists. 2. Link to artist's MusicBrainz profile. 3. Play artist's most popular album. 4. Play the most popular recording.",https://summerofcode.withgoogle.com/programs/2023/projects/ToDA0xuV
Increase Code Coverage to the DRM core helpers,Arthur Grillo,https://grillo-0.github.io/blog/kernel%20developing/2023/08/27/gsoc-2023-final-report.html,"Maíra Canal, Tales, André Almeida",X.Org Foundation,"c, linux, KUnit","unit testing, Kernel Development","This proposal aims to increase code coverage on the DRM core helpers with meaningful tests. Unfortunately, it is impractical to have 100% coverage on all core helpers in such a small time frame, so I will focus on the drm_format_helper.c, which makes the conversion between color formats. Parallel with developing the tests, I will improve the kernel-doc when needed, create blog posts about the process, and study the DRM subsystem. Moreover, with the knowledge gained, I will improve the xfrm functions to work with multi-plane formats.",https://summerofcode.withgoogle.com/programs/2023/projects/kaJtz1s3
Pola-rs in R,Arthur Pan,https://sicheng-pan.github.io/GSoC-2023/,"Toby Dylan Hocking, Søren Welling",R project for statistical computing,"rust, r, Pola-rs",data analysis,"In short, this proposal aims to export more pola-rs bindings to R beyond existing ones offered in r-polars, and make such bindings as efficient as possible. Pola-rs is a highly efficient data manipulation library written in Rust, and it can significantly improve the performance of data pipelines. It would be especially helpful for computationally demanding analysis if such library is accessible in R.",https://summerofcode.withgoogle.com/programs/2023/projects/s83q0fVU
Support OpenMetrics _created timestamp in Prometheus,Arthur Sens,https://www.arthursens.dev/posts/created-timestamps,"Max Amin, Bartek Plotka",CNCF,"prometheus, go, protobuf","encoding, prometheus","The proposal consists in treating the time series creation time as another metadata. We propose a few incremental improvements that can be released separately, and therefore faster. We start by dropping time series when negotiating OpenMetrics format. Then changing the current metadata behavior to be correlated with MetricPoint instead of MetricFamily. The third step is storing the last seen value of _created for each MetricPoint. Lastly, storing a symbolic value each time the _created timestamp minus the scrape timestamp is lower than the scrape interval.",https://summerofcode.withgoogle.com/programs/2023/projects/pmQsJm1C
Agro Robot Swarm dashboard for Liquid Galaxy,Artur Culleres,https://docs.google.com/document/d/1O2xYHiNRehPv2lAI_7w9kVmLUspu-7Ib3AwGxcu0mwU/edit,"Andreuibanez, Alejandro Illán Marcos, Victor Carreras, Pau Francino",Liquid Galaxy project,"android, flutter, KML, MySqlLite, GoogleEarth","robotics, mobile, Visiualization, Agriculture","The purpose of this project is to create a dashboard application that allows better control of their fields, to all farmers who want to take their business to a more technological environment. Thanks to the appearance of the new farming robots, we will be able to improve the control of the harvest and the state of the field.",https://summerofcode.withgoogle.com/programs/2023/projects/096FweCs
Technical Improvements to enhance the usability of The Turing Way chapters by different user groups,Arya A,https://github.com/the-turing-way/the-turing-way/blob/main/communications/GSoC-applications/GSoC-2023/2023-GSoC-Final-Report-arya.md,"Malvika Sharan, Johanna Bayer",INCF,"python, javascript","web, Jupyter Book","The Turing Way is an open source, open collaboration and community-led handbook on data science. The book is hosted online in a browsable format. Over the last four years, the book has grown significantly, making it challenging to navigate. The team created a Python package in 2022 to enhance The Turing Way's usability by enabling various access points to the book depending on the user profile or persona. But before integrating the feature provided by the package to Turing Way , there are some improvements that need to be made to allow a better user experience. The project aims at improving the Python Package to enhance the usability of The Turing Way. The following approach will be used to achieve this goal : - 1- Making browsing experience less confusing by modifying chapter links and profile tags based on a selected ‘pathway’, rather than displaying all tags associated with a chapter. 2- Adding a feature to provide descriptions for each pathway which will improve user experience allowing meaningful use of books by all profile types. 3- Implementing the solutions proposed in this application and integrating them into The Turing Way via the open source framework.",https://summerofcode.withgoogle.com/programs/2023/projects/DBBe5FSs
Search integration with Blockly editor,Arya Anand,https://gist.github.com/arduino-monkey/568b8fe0b2e3eca3aaaad8240288f3c7,"Evan Patton, Mark Friedman",MIT App Inventor,"javascript, java, gwt, Blockly",web,This GSOC project aims to integrate the Blockly work-space search plug into App Inventor and add App Inventor specific functions to it. Adding dropdown to select what filter to use and implementing these filters in JavaScript.,https://summerofcode.withgoogle.com/programs/2023/projects/Cu9JGL33
Adding support for automatic management of ZeroTier Tunnels,Aryaman,https://aryamanz29.medium.com/add-support-for-automatic-management-of-zerotier-tunnels-791be96903bf,"Federico Capoano, Ajay Tripathi (atb00ker), Gagan Deep (pandafy)",OpenWISP,"python, django, openwrt, Zerotier","web, Computer Networks, OpenWRT","OpenWISP Controller already supports configuring OpenVPN, WireGuard and VXLAN over WireGuard tunnels. The goal of this project is to add support for another VPN backend: ZeroTier.",https://summerofcode.withgoogle.com/programs/2023/projects/KGEKArcc
Adding structured Lagrangian support to CVXPY,Aryaman Jeendgar,https://github.com/cvxpy/org/blob/main/GSoC2023/aryamanjeendgar/final_report.pdf,"sdiamond, Philipp Schiele, Riley Murray",NumFOCUS,"python, CVXPY","Mathematical Optimization, Optimality Conditions, Lagrangian",Optimality conditions are a key aspect of mathematical optimization. The Karush-Kuhn-Tucker (KKT) conditions in particular are a really powerful result in convex optimization that provide certificates of optimality for convex constrained programming. This project aims to add support for verifying the KKT conditions for problems solved in CVXPY,https://summerofcode.withgoogle.com/programs/2023/projects/a8YyGIP0
ZAP: Browser Recorder,Aryan Gupta,https://www.zaproxy.org/blog/2023-09-11-browser-recorder/,"thc202, Simon Bennetts",OWASP Foundation,"java, typescript","web, automation, Browser Extension, Security Testing","This project aims to address the inconvenience users face when testing websites that require pre-task activities, such as logging in. The proposed solution is a browser extension that records user interactions and generates a Zest script in JSON format for use with ZAP. The browser extension will also allow users to save generated scripts locally, and the final deliverables will be a fully functional browser extension with seamless integration with ZAP. Overall, this project will streamline the website testing process and improve efficiency.",https://summerofcode.withgoogle.com/programs/2023/projects/lx6XL1Rd
Implementing Dijkstra’s Driving distance Function and its migration,Aryan Gupta1,https://github.com/pgRouting/pgrouting/wiki/GSoC-2023-Implementing-Dijkstra%E2%80%99s-Driving-distance-Function-and-its-migration,"Shobhit Chaurasia, Regina Obe",OSGeo (Open Source Geospatial Foundation),"c, linux, c++, cmake, sphinx, sql, git, graph","open science, gis, citizen science, geolocation, mapping","The project aims to implement a new function called ""pgr_dijkstraDD"" that replaces the existing ""pgr_drivingDistance"" function. The new function will have all overloads, including single and multiple vertices as before. The function will return columns such as sequence, depth, start vertex ID, node, edge, cost, and aggregate cost for all overloads. The project will also include testing of the new function with pgTap Tests. Documentation for the new function and migration guides for users to switch to the new function will also be created.",https://summerofcode.withgoogle.com/programs/2023/projects/tAxiQllV
Enhance chrome://policy page,Aryan Kaushik,https://docs.google.com/document/d/1GJDLJnNPA9OOTEvxFTthhRNbtZcDpiSHMOR9IjhPoo4/edit?usp=sharing,"Pallavi, Salma Elmahallawy, Julia Lomakina",Chromium,"javascript, c++, html, css, typescript","web, browser","The ""chrome://policy"" page is a URL in the Google Chrome browser that displays a list of policies applied to the browser. These policies determine the settings and behaviour of the browser. The aim of the project is to enhance the functionality and user experience of the ""chrome://policy"" page, to create a user-friendly and visually appealing interface that provides administrators with the information they need to effectively manage the policies. The new design will prioritize readability, information transparency, ease of use, and a responsive design across desktop and mobile platforms. There is also additional scope to introduce additional fields to the page to improve its usability.",https://summerofcode.withgoogle.com/programs/2023/projects/wR9RJpgX
Improving p5.js WebGL/3d functionality.,ARYAN KOUNDAL,https://github.com/processing/p5.js/blob/main/contributor_docs/project_wrapups/aryan_koundal_gsoc_2023.md,"Dave Pagurek, Tanvi Kumar",Processing Foundation,"javascript, webgl, GLSL","graphics, library","In p5.js, there are two render modes: P2D (default renderer) and WEBGL. It enables the user to draw in 3D. There are many ways to implement lightning, currently p5js has implemented 8. But there is another technique to light objects, not by direct lights, but using the surrounding environment as a single light source which we call Image Based Lightning. In other words, the overall goal is to add 3D lighting to the object in the scene using an image.",https://summerofcode.withgoogle.com/programs/2023/projects/WGVqRdp4
Adding Codecs & Improving UI for squoosh.app,Aryan Milind Pingle,https://github.com/aryanpingle/Summer-Of-Code-2023,"Sreeja Kamishetty, Mariko Kosaka",Chromium,"c++, rust, docker, typescript, webassembly","progressive web apps, Image codecs","Squoosh is a Progressive Web App (PWA) focusing on image compression - reducing image sizes through numerous formats. You can try out the latest and greatest image codecs in your browser, and even compare their performance and compression ratios against each other. It works cross-platform, can be run completely offline, and is a testament to the power of native web APIs. Being an incredibly powerful web app, Squoosh is rightfully complex in design. I aim to enhance the user experience with Modals that explain codecs and their parameters. In the process, I'll be documenting the current workflow of building these codecs, updating existing ones, along with adding one that's relatively new - the Quite OK Image codec.",https://summerofcode.withgoogle.com/programs/2023/projects/NrgtZp7v
OpenCV IDEA: Lightweight Optical Flow Model,Aser,https://github.com/Aser-Abdelfatah/Google_Summer_of_Code_2023_OpenCV_Optical_Flow_Summary,FYtao,OpenCV,"python, c++","computer vision, deep learning, Optical Flow","Optical flow is the problem of estimating the motion of objects in an image or video sequence. Optical flow is pivotal to many computer vision applications such as object tracking, video stabilization, and motion analysis, providing essential information about the dynamics of a scene or an object. With the upsurge in the use of deep neural networks, DNN models were developed to solve the optical flow problem, achieving state-of-the-art results by learning to estimate motion from image data. However, DNNs can become computationally expensive making it infeasible to be deployed on embedded systems. This problem is tackled by the development of lightweight DNN models. However, OpenCV model zoo hasn't had any implementation of an optical flow lightweight model yet. Thus, this project aims to find the best lightweight optical flow model in terms of model size, speed, and accuracy to introduce to the OpenCV model zoo.",https://summerofcode.withgoogle.com/programs/2023/projects/eteD6MMy
Industrial meter reading with OpenVINO,Ashish Bangwal,https://gist.github.com/ashish-2005/36d27cf400ecd3468a5b6eb8434e59e5,"ZhuoWu, Ethan Yang",OpenVINO Toolkit,"python, machine learning, flask, tensorflow, openvino","computer vision, deep learning, inference","The aim of the project is to read industrial meter with Deep Learning frameworks and OpenVINO .The project is divided into two parts. In the first part of the project, we created a deep learning-based solution to read industrial meters. We achieved this by first detecting meters in the frame with the EfficientDet-d0 model, then doing semantic segmentation of meters with UNET (with a Resnet50 backbone) to obtain a segmentation map with which we calculated readings, and for inference we use the OpenVINO runtime. In part two of the project, we further optimize the solution pipeline to support multiple camera inputs with OpenVINO-toolkit functions like AsyncInferQueue and other performance hints, along with a web-based GUI with HTML,CSS, JS, and Flask web framework.",https://summerofcode.withgoogle.com/programs/2023/projects/3eKcuFkd
Docker-based Jenkins quick start examples,Ashutosh Saxena,https://www.jenkins.io/blog/2023/08/24/gsoc-docker-based-quickstart/,"Jean-Marc Meessen, Bruno Verachten, Bervianto Leo Pratama",Jenkins,"linux, docker, jenkins, YAML, Docker-Compose, Gitpod","documentation, devops","This proposal aims to simplify the use of Jenkins with Docker by creating easy-to-use Docker Compose files with suitable examples. The process of getting started with Jenkins with docker is too complex and the available documentation is also hard to understand making it challenging for new users to get started. By simplifying the use of Jenkins with Docker, we can enable more developers to take advantage of these powerful tools together and accelerate their software development process. The main point of the project is to simplify the spinning up of the container to run a Jenkins instance with a single command. That’s where Docker-compose comes to the rescue which uses YAML files to spin up multi-container setups. The expected outcomes after completion of the project are an elegant docker-compose file, comprehensive documentation on the workings of these docker-compose files with examples, a Jenkinsfile will be added to ci.jenkins.io with instructions to check the docker-compose files and as these docker-compose files will be able to run on Gitpod we will be able to create a one-click setup for Jenkins using docker and Gitpod.",https://summerofcode.withgoogle.com/programs/2023/projects/4RsDTPvh
KomMonitor Web Client: Migration to Angular,Ashwanth Kumar D,https://blog.52north.org/2023/09/26/kommonitor-final-blogpost/,Christian Danowski-Buhren,52°North Spatial Information Research GmbH,"javascript, bootstrap, angular, typescript, leaflet","web, api","KomMonitor is an open-source web client developed by the Bochum University of Applied Sciences as a research project. It has been developed in Angular JS and it provides users with a range of features, including the ability to search for and view data, customize maps, and perform spatial analyses, statistical visualization, etc. The web client uses Angular JS as its main framework. The current KomMonitor client is developed in AngularJS, there are some potential disadvantages to consider, include compatibility issues, limited community support, reduced performance, and limited scalability. As a result the solution to overcome the problem is to consider using a more modern and widely-supported framework in the development of the KomMonitor Web Client, such as the latest version of Angular supports Typescript, a superset of JavaScript that provides strong typing and data binding, Services & other features that help developers write more maintainable and error-free code, improves performance, scalability, etc.",https://summerofcode.withgoogle.com/programs/2023/projects/G7aigYXC
Improvement to translation reviewer experience,Ashwath Kannan,https://medium.com/@ash.me.cse/my-google-summer-of-code-2023-journey-with-oppia-ee93a6fc312d,"sagangwee, Hasitha Kaushan",Oppia Foundation,"python, typescript",web,"Presently, reviewing translations is a tedious task for translation reviewers, mainly due to the current workflow of the contributor dashboard. This proposal aims to improve the workflow of the contributor dashboard overall by implementing various features that will enhance the user journey.",https://summerofcode.withgoogle.com/programs/2023/projects/KyecKJP2
Camera and Gimbal enhancements,Asif Khan,https://docs.google.com/document/d/1ZGjGy3RMMbsAMOzFokrXzb60ubjuVwYJ4V5STDD3Hds/edit?usp=sharing,"Randy Mackay, Peter Barker",ArduPilot,"lua, c++, xml, embedded systems, Mavlink","embedded systems, linux, drones, Ardupilot, cameras, Aerial robotics, PixHawk, Gimbals","This project aims to fix camera and gimbals related issues in ArduPilot, upgrading currently supported messages and adding support for new mavlink messages. Some new and exciting features are also introduced, those are: 1. Pointing gimbal at circle-centre, 2. Gimbal Following another vehicle, 3. Time based triggering of image capture, 4. Start/Stop Video recording when arm/disarm, 5. Camera logging with mount specific messages, 6. GIMBAL_MANAGER_SET_ATTITUDE support, 7. Transferring support of mount poi (point of interest) from lua to c++, 8. Support for specifying which gimbal each camera is associated with, 9. Fixing other bugs in gimbals and cameras (specifically SiYi Zr10)",https://summerofcode.withgoogle.com/programs/2023/projects/6wk8qNHC
Modernization of the conda-forge.org website,Asmit Malakannawar,https://dev.to/asmitbm/google-summer-of-code-2023-with-conda-forge-12c4,jaimergp,NumFOCUS,"javascript, react","web, graphics, ui/ux",The project aims to modernize the conda-forge website by redesigning the landing page and creating a style guide for other conda-forge’s web-based projects. The new implementation is expected to provide an intuitive and usable user experience. The redesigned landing page is expected to pass the SpeedPage and WAVE automated tests. The project also aims to work towards WCAG 2 conformance during the design phase and include accessibility annotations for the development phase. The expected outcome is a prototype conda-forge.org frontpage redesign that is live in cf-infra-docs and a conda-forge style guide for its new online presence. This project will benefit the conda-forge community by providing a more user-friendly and accessible website.,https://summerofcode.withgoogle.com/programs/2023/projects/5mhdEKMI
Web Components for discovering and using scientific software in the Cloud,Assel Abzalova,https://gist.github.com/ltwmori/dab4d1781368d24d7023aca82ef6e205,"Salihu, Anurag Gupta, Alex Kanitz, denis.yuen, Liam Beckman, Charles Overbeck",Global Alliance for Genomics and Health,"typescript, SvelteKit, Testing Library for Svelte, GA4GH TRS specification, TRS-Filer API, Flowbite-Svelte library","web, svelte","The Global Alliance for Genomics and Health (GA4GH) defines the Tool Registry Service (TRS) specification for the discovering and accessing research software, packaged as either “tools” (command-line executables) or “workflows” (descriptors of DAG-based analysis pipelines, typically written in specialized DSLs). In this project, I will aim to create components that will help discovering these tools and workflows. This will be done using Svelte framework and Typescript.",https://summerofcode.withgoogle.com/programs/2023/projects/u8vLOUkf
Scan8 - Web-scanner,Atharva Karambe,https://github.com/Atharva-karambe/GSoC/blob/master/GSoC-2023/Atharva-Karambe-Scan8.md,"RavinduDeSilva, Isuru Vishwanath, Kenneth Manjula",SCoRe Lab,"python, flask, MongnDB, clamAV","security, python, flask, antivires","The Scan8 project aims to develop a distributed scanning system for detecting malicious threats such as trojans, viruses, and malware embedded in files. The current system only supports scanning binaries, but this project proposes the development of a plugin to capture all the content of a given URL and submit it to the Scan8 scanner for analysis. The plugin will allow users to submit a list of URLs or files to the system, and receive scan results in return. By expanding the capabilities of the Scan8 system to include scanning web-based content, the project seeks to improve the detection and prevention of online threats. The expected results of the project include the successful development and implementation of the plugin, which will be integrated into the existing Scan8 system. The plugin will enable the system to analyze web-based content, providing a more comprehensive approach to threat detection. Overall, the Scan8 project aims to enhance online security and protect users from potential threats through the development of an advanced scanning system.",https://summerofcode.withgoogle.com/programs/2023/projects/vJNlrVcX
Impact visualization portal for global neuro-informatics community,Atharva Purohit,https://medium.com/p/b2fd132a9d25,Arnab Banerjee,INCF,"python, javascript, django, html, css","web development, data science","The International Neuroinformatics Coordinating Facility (INCF) is a non-profit organization dedicated to advancing the field of neuroscience and neuroinformatics. They strive to establish and promote standards and best practices that are open, fair, and citable. INCF provides resources and support to neuroscience researchers, labs, and partners worldwide. Their work encompasses a wide range of projects, including predicting Alzheimer's onset, detecting cancer cells through image processing, mapping the brain in 3D, developing connectomes, and analyzing EEG data. Our proposed project aims to create a comprehensive dashboard showcasing INCF's impact on the global neuroscience and informatics community. The dashboard will highlight important metrics such as research progress and the number of lives impacted and saved.",https://summerofcode.withgoogle.com/programs/2023/projects/02XIJIa9
Containerized Development Environments for R,Atharva Shirdhankar,https://startrooper08.github.io/GSoC_Learnings/,Heather Turner,R project for statistical computing,"r, docker, bash, YAML","open source, devops, cloud native",R-Development Container Environment which can be set up in one click on Github codespace and with minimum configuration on the Local system. One can easily install and contribute to R source code easily and efficiently using the R-dev container. It creates encapsulated environment because of which one can do the bug fixes on specific R-version without overwriting onto the other R-versions.,https://summerofcode.withgoogle.com/programs/2023/projects/zH3uWpjc
Exploring Intersection of Civic Technology and Large Language Models,August Fu,https://medium.com/@yuntongf/gsoc-23-exploring-the-interesection-of-llms-and-civic-technologies-bb35cc9eb5ce,Michael Lawrence Evans,Mayor's Office of New Urban Mechanics,"python, javascript, flask, rest api, OpenAI, Langchain","web, machine learning, large language model, vector store database, microsoft azure","For years, the government has struggled to provide helpful information for residents in need. Sometimes the resources are not readily accessible, or the channel of communication is simply missing. Many people have questions about government policies but don’t know where to ask or never bother to read through official documents; instead, they end up getting incomplete or misleading information from the web. These issues call for a system that handles queries on a large scale with high efficiency and consistency - this is where large language models (LLM) come into the picture. With the help of exciting tools like LlamaIndex, we are now able to extend the knowledge base of LLMs like ChatGPT to more specific domains and tailor the model’s responses to be more relevant to the residents’ needs. This project will extend ChatGPT’s knowledge base with specific government data (such as pdfs of housing policies) and provide a frontend interface for user to interact with a ChatGPT-style chatbot. In addition to the ability to chat and ask questions, users will also be given the power to evaluate responses of the chatbot by giving a thumb up/thumb down to the response.",https://summerofcode.withgoogle.com/programs/2023/projects/g6eReF6j
Extending GraphNeuralNetworks.jl to support Temporal Graphs,Aurora Rossi,https://docs.google.com/document/d/1YW0LTLolaesaq0EfXm6MskP_th2VHE4tGWFX0Vs5RJg/edit?usp=sharing,CarloLucibello,The Julia Language,julia,"machine learning, graph neural networks, Temporal graphs","The purpose of this project is to add Temporal Graph Neural Networks (TGNNs) to GraphNeuralNetworks.jl. The first part of the project will be dedicated to creating a temporal graph type and providing it with all the accessory functions. After that, new layers will be added to the package to build models that fall under the category of STGNNs. Thus, new datasets of temporal graphs will be included in MLDatasets.jl to be used for training the models. Finally, tutorials will be produced to complete the project, introducing the new temporal graph type and showing how to perform temporal graph tasks using the added data, model and features.",https://summerofcode.withgoogle.com/programs/2023/projects/vbQaqNYW
Enable & Improve Multi Display Chrome Testing Capabilities,Avi Mathur,https://docs.google.com/document/d/1Iq8t2GS4lMBcUQK9sNr-_nAiL6jpljw8d9nuy5uFEr4/edit?usp=sharing,"Sreeja Kamishetty, btriebw, Mike Wasserman",Chromium,"c++, Automated testing, Indirect Display Driver, Driver coding","web, tracing, Automated Testing, Virtual Displays, Multi-Display APIs","In this project, our aim is to enable the capability for testing multi-display APIs for Chromium, on Windows OS. In order to achieve this, we are manipulating and developing an Indirect Display Driver (IDD) for enabling virtual display(s) for mocking the APIs. The main reason for doing this is because the users on Windows OS face various issues while using multi-display features of Chromium, and this leads to a bad user experience. For this reason it is important to have extensive, automated testing capabilities so that APIs may be improved drastically.",https://summerofcode.withgoogle.com/programs/2023/projects/EaWBWece
VLC iOS UI Revamp,Avi Wadhwa,http://aviwadhwa.com/VLC%20iOS%20Upgrades,"Felix Paul Kühne, Diogo",VideoLAN,"swift, xcode, Media","app development, ios","I aim to revamp VLC's iOS User Interface and make it easier to use. This includes incorporating native Apple API's such as Local File access, Picture-in-Picture support, as well as a revamp of the UI elements within the VLC app to make the user's media more simple and easy to use (such as Audio file organizing and sorting).",https://summerofcode.withgoogle.com/programs/2023/projects/AdIxIXTF
Deployment Of OWTF,Aviral Jain,https://docs.google.com/document/d/1E8thWt7waCQ1ca8HMeo8RSOKebTNzlN7dgvnuFuCFas/edit?usp=sharing,"Mrigank Anand, Abraham Aranguren, Viyat",OWASP Foundation,"python, react, docker, aws, Redux-localStorage","cloud, Web-Security","I aim to deploy OWTF on AWS for easier use by users and to ease its development for developers. Also, I will improve its Docker installation, which I have been working on. I also want to add a new plugin to scan the cloud storage of any web service according to the OWASP web security guide.",https://summerofcode.withgoogle.com/programs/2023/projects/dgRHwWxt
Open Science Labs-Improve Scientific Python Cookiecutter Project,ayeankit,https://medium.com/@ayeankit/final-report-google-summer-of-code-2023-6a45e877322b,"Saransh Chopra, Ivan Ogasawara, Agustina Pesce, Ever Vino, Alex de Siqueira",NumFOCUS,"python, javascript, git, jinja2",science and medicine,"Cookiecutter is a powerful command-line utility that generates project templates. Open science lab has developed a template that aims to provide the workflow, library, and tool recommended by PyOpenSci. This project aims to improve the document and add a different tool, add build systems, testing libraries, and more static analysis tools, and change the template engine from cookiecutter to cookieninja.",https://summerofcode.withgoogle.com/programs/2023/projects/26c9LZfd
Calling the BATMAN: Free Networks on FreeBSD,Aymeric Wibo,https://wiki.freebsd.org/SummerOfCode2023Projects/CallingTheBatmanFreeNetworksOnFreeBSD,Mehdi Mokhtari,The FreeBSD Project,"c, batman","networking, wireless, Freifunk","BATMAN (Better Approach to Mobile Ad-hoc Networking), as developed and used by the Freifunk project, is a routing protocol for (primarily wireless) multi-hop ad-hoc networks. Freifunk is a German initiative to build an open Wi-Fi network at city-scale, based on the principles of net-neutrality. BATMAN's motive is to be a completely decentralized protocol; no one node in the network knows or has to care about the topology of the whole network. Support for this protocol is provided by the batman-adv kernel module on Linux, and, with this project, I'd like to bring that to FreeBSD. This will include the kernel module itself, but also userland networking libraries and tools necessary to create BATMAN networks.",https://summerofcode.withgoogle.com/programs/2023/projects/9YX3dONN
Add multiple audio tracks playback support,Ayush Dey,https://code.videolan.org/videolan/vlc/-/merge_requests/4121,Thomas Guillem,VideoLAN,c,"audio, streaming","Currently, only one audio track playback is supported in a media file at a particular instance. The idea is to add support for the playback of multiple audio tracks from a media in parallel. The deliverables are to modify the audio output module API and its implementations over common audio output APIs, the media player module API to give the user more control over multiple streams, and the graphical user interface to enable numerous track selections.",https://summerofcode.withgoogle.com/programs/2023/projects/IC7gKtOu
Extending and Stabilizing enviroCar App: Voice Command,Ayush Dubey,https://blog.52north.org/2023/08/28/stabilizing-and-extending-envirocar-voice-command-final-blog/,Dhiraj Chauhan,52°North Spatial Information Research GmbH,"python, android, java, kotlin, docker, Automation","machine learning, cloud, devops, android","Road safety is of utmost importance, and avoiding distracted driving is a critical aspect of maintaining safety on the road. One of the major distractions for drivers is the use of mobile phones while driving, which can be hazardous. Thus it becomes particularly important for mobile apps like enviroCar that aid in driving to offer a hands-free experience to avoid distracted driving. This proposal aims to stabilize and extend the functionalities of enviroCar : Voice Command project, which offers hands-free interactions to the drivers. While the main focus of the proposal remains to implement voice control on every app functionality and stabilize the bot for handling different situations, it also proposes the addition of newer functionalities like a better voice assistant UI, support for Deutsche, and CI/CD pipelines for the backend.",https://summerofcode.withgoogle.com/programs/2023/projects/JltWRGZ7
Evaluation Infrastructure Optimization,Ayush Rathore,https://medium.com/@ayushr1/google-summer-of-code-2023-with-cloudcv-a2c1afd152ba,"Gunjan Chhablani, Rahul-Singh, Gautam Jajoo",CloudCV,"python, django, angularjs, aws","web, cloud, devops","This project aims to enhance EvalAI's functionalities by automating large worker deployments in AWS, adding relevant features for efficient challenge management and also writing a robust and efficient test suite. The focus of the project is: To automate large worker deployment processes on EvalAI using AWS EC2 instances, reducing infrastructure running costs. Make challenge management seamless and less reliant on the admins reducing the dependency of challenge hosts on EvalAI admins. To make EvalAI more reliable and error-free by incorporating tests for different frontend and backend components. Having robust tests prevents making code-breaking changes to the codebase. This task will include adding unit tests for the API suite, prediction upload evaluation workers, code upload evaluation workers (on EKS), and integration tests for end-to-end testing of all components.",https://summerofcode.withgoogle.com/programs/2023/projects/0s3XeybO
Friendly Error System(FES) and Documentation,Ayush Shankar,https://docs.google.com/document/d/1yL2YAVKJGVIeAmJ_-Np7jF3TYb2IwN2W1Mjk8Epu2Pg/edit?usp=sharing,"Alm Chung, Nick Briz",Processing Foundation,"javascript, github, p5JS",web,I propose to work on the following for enhancement of Friendly Error System : 1. Decoupling the Friendly Error System to a standalone package 2. Resolving Issues/Fixing Bugs on Friendly Errors Issues 3. Adding a new language translation(#3390) for FES error messages.,https://summerofcode.withgoogle.com/programs/2023/projects/62XKU2Y8
Replace GBridge in BeagleConnect,Ayush Singh,https://programmershideaway.xyz/post28/,"Jason@BeagleBoard.org, Vaishnav Achath",BeagleBoard.org,"c, linux, rust",driver development,The project aims to eliminate GBridge and merge its functionality into greybus (linux driver) and cc1352 driver. The subtasks I have identified are the following: 1. Allow Greybus Linux driver to directly communicate with cc1352 2. Move SVC and APBridge roles into cc1352 3. Eliminate the need for GBridge,https://summerofcode.withgoogle.com/programs/2023/projects/iTfGBkDk
O3: Enhancing Component Test Coverage and Quality for OpenMRS3,Ayush_Mishra,https://medium.com/@ayushmishra2854/gsoc-2023-enhancing-component-test-coverage-and-quality-for-openmrs3-final-evaluation-ebf647cb32d4,"Piumal Rathnayake, Anjula Samarasinghe",OpenMRS,"javascript, typescript, JEST, RTL, MSW","web, Quality Assurance",This project mainly aims to improve the overall code quality of O3 by enhancing the component test coverage. It also expects a well written documentation explaining the test strategy and best practices which other developers can follow for the future development of O3. Following this documentation will ensure that the quality of o3 is maintained and developers can have the confidence in their developed features.,https://summerofcode.withgoogle.com/programs/2023/projects/M5jrIP4T
Mobile App: Improved Member Management and News Feed,Ayush0Chaudhary,https://gist.github.com/Ayush0Chaudhary/bf6d3cc956ff3a403277ac9018619c72,"Md Noman Khan, CyberWake, Aditya Birangal",The Palisadoes Foundation,"node.js, flutter, graphql, dart, mongoose","web development, mobile development, Flutter, System Design","Implement member management and implementation of the news feed to include different types of posts that can be used for Photo-intensive, and article-based content. Also, Implement the feature like Caching, Report Feature, multi-reaction, pinned posts, editing posts, deleting posts, and notifications, Hastags to filter posts, and Repost feature to endorse a post, Notification to all org member, if time allows ill also implement uploading a profile photo.",https://summerofcode.withgoogle.com/programs/2023/projects/JbDD1yPa
Grotrian Diagram Visualisation,Ayushi Daksh,https://docs.google.com/document/d/1zDZcunshy0eAD7W11okAVryDAjYNBQPggi_OiRVZ2_8/edit?usp=sharing,"Andreas Flörs, Sona Chitchyan, Jaladh Singhal, Mark Magee, Aoife, James Gillanders, Harshul Gupta, Yuki Matsumura, Eva Laplace, Jing Lu",TARDIS RT Collaboration,"python, numpy, jupyter, pandas, Matplotlib, Plotly","visualization, simulation, astrophysics","TARDIS generates synthetic observations of stellar explosions that can be compared to real observations. With such comparisons, we can learn more about the physical processes occurring and the conditions inside the supernova, including which elements and atomic transitions are dominant. TARDIS tracks the atomic transitions of interacting photons, level populations, etc. allowing the user to interrogate the physical conditions of the supernova. The goal of this project is to build a visual tool to represent this information for the user in Grotrian diagrams, which show different atomic levels of ions and transitions between them. Developing this tool will allow the user to more easily understand the important physical conditions of their supernova model. A regular Grotrian diagram would only display the overall line interaction for the packets that interact with the ion, but we also want to display how many packets went through each specific transition and the level populations. One way it could be done is to color each arrow to represent quantity of packets (similar to a heatmap) and the thickness of the level platforms denoting the level populations. This project will have the following deliverables: - Develop an interactive widget which allows the user to look at the Grotrian diagram for specific ions which interacted with photon packets during a TARDIS simulation. - The widget should allow the user to filter on a wavelength range, type of line interaction (excitation or de-excitation), and ion. The diagram will also give a sense of the frequency of each line transition using colors. - Develop the above plot as a static Matplotlib too. - Integrate this widget into TARDIS codebase and documentation. - Create a Jupyter notebook tutorial for the tool.",https://summerofcode.withgoogle.com/programs/2023/projects/HxymUMRe
LuCI Migration to JavaScript based Framework: Improved UX and Performance on OpenWrt-based Devices,Ayushman,https://blog.freifunk.net/2023/08/15/gsoc23-final-report-luci-migrate-to-javascript-based-framework/,"andibraeu, Paul Spooren",freifunk,"javascript, lua, html, ash","web, performance optimization, New RPCD Services","LuCI is a framework used to build web interfaces for configuration and monitoring on embedded devices such as WiFi routers, etc. In the old CBI based system, pages were rendered on the router and delivered as HTML to the browser, leading to a higher load on the embedded devices. To address this issue, LuCI applications must be migrated to JavaScript-based framework to reduce the load on embedded devices and improve performance. This migration involves rendering pages on the client-side using JavaScript, rather than on the router. To facilitate this migration, LuCI provides a JavaScript API that will be used to build web interfaces that can be rendered in the browser. To make this migration possible, new RPCD services will be developed to provide data to the client side that was formerly used directly on the router. This data will be provided in JSON format via RPCD (Remote Procedure Call Daemon) and UBUS. These new RPCD services will need to provide the same functionality as the old system but in a format that can be used by client-side JavaScript. The migration of LuCI to JavaScript-based framework will offer several benefits to OpenWrt community and other users of OpenWrt-based devices. One of the primary benefits is improved performance and reduced load on embedded devices such as WiFi routers. By rendering pages on the client-side using JavaScript, rather than on the router, this will reduce the workload on the router and improve the UX for those interacting with the LuCI web interface. This will be particularly beneficial for users with lower-specification routers etc. Another benefit of the new system is increased flexibility for developers. The use of a client-side JavaScript framework provides developers with more options for customizing and extending the LuCI web interface. And this also provides a standardized way for developers to interact with the router's services which should make it easier to develop and maintain LuCI-based applications.",https://summerofcode.withgoogle.com/programs/2023/projects/zBkmcw7X
Addition of regression GAM and kNN classification functionality in statistics package,Azmat Khan,https://azm999.hashnode.dev/gsoc23-final-report,"nrjank, pr0m1th3as",GNU Octave,Octave,"data science, statistics, Regression, Octave, statistical modelling",The project aims to enhance the Statistics package in the GNU Octave by adding Generalised Additive Models (GAMs) Regression and kNN classification functionality. These features will allow users to perform better statistical analyses and modeling with ease of interpretability.,https://summerofcode.withgoogle.com/programs/2023/projects/XDEr4S3N
Rendering Performance Optimization,b23v,https://forums.synfig.org/t/gsoc-2023-performance-optimization/14122/21,"RodolfoRG, Ayush Chamoli, Anish Gulati",Synfig,"opengl, c++","graphics, optimization","The project aims to improve the rendering speed of Synfig, a free and open-source 2D animation software. The project's primary goals are to document the rendering system, fix the thread issue, find the best way to schedule rendering tasks, improve the blending and color functions, optimize the contour rasterization algorithm, and stabilize the OpenGL renderer's core. The project's stretch goals include implementing a Contour Layer using shaders. The project will benefit the community by providing faster rendering, better user experience, and proper developer documentation. The project aims to deliver a solid, stable base for the OpenGL renderer and improve software renderer performance, reducing render times and making the viewport more responsive.",https://summerofcode.withgoogle.com/programs/2023/projects/qvj9aF7Y
"Pocket Paint for Android: Implement eraser, line, fill ,spray can, cursor tools in flutter version",Baki,https://gist.github.com/bakicelebi/d1882366d4496c2f5bf30f05d32783b0,"Julia Herold, SebastianGrief",International Catrobat Association,"flutter, dart",app development,"My project idea is to extend the Flutter version of Pocket Paint with further functionalities, such as more tools like eraser, line, fill, spray can, and cursor. My expected total time for this project is around 350 hours, and my goal is to implement 1-2 fully tested tool per month.",https://summerofcode.withgoogle.com/programs/2023/projects/CpRefZvl
Proposal for selecting tests to run on gerrit patches based on machine learning,Baole Fang,https://github.com/baolef/libreoffice-ci,"Thorsten, stragu, cloph",LibreOffice,"python, c++","machine learning, Unit test","LibreOffice is a large and complex office software and has an extensive CI system to ensure that new patches do not introduce bugs. A lot of unit tests are run in Jenkins when contributers submit their patches to gerrit. It usually takes hours to run all the tests across different platforms, especially in rush hours. Therefore, a better test selection method is needed to reduce the load in testing while maintaining a high software quality. Recently, machine learning is used to predict whether a patch can pass a given test. This can greatly reduce the testing load because we can skip the tests that is very likely to pass when a patch is submitted. Although feature engineering isn't trivial, transformers have been proved useful in feature extraction under similar problem settings. Therefore, I propose that we can implement a machine learning based test selection method to select tests to run in the CI chain to reduce testing load.",https://summerofcode.withgoogle.com/programs/2023/projects/TRuGywNg
Implementing backward bounded model checking in CPAchecker,Bas Laarakker,https://www.sosy-lab.org/gsoc/gsoc2023.php,Nian-Ze Lee,Software and Computational Systems Lab at LMU Munich,"c, java","software verification, model checking","Backward bounded model checking is a technique for program analysis that aims to solve the error location reachability problem by searching for execution paths from an error location to the initial location and determining their feasibility, whereas regular forward techniques search for paths from the initial location to an error location. The main aim of this project will be to formulate the backward bounded model checking algorithm within the framework of CPA and develop an implementation in CPAchecker. This will also require figuring out which components already provide support for backward analysis in CPAchecker and developing support where it does not already exist. Once backward analysis is supported and the algorithm is implemented, it can be tested and benchmarked on a set of programs to evaluate its performance.",https://summerofcode.withgoogle.com/programs/2023/projects/BqBmUDig
Enhancing the SPDX License Submission Online Tool: Improving Streamlined License Compliance,BassCoder2808,https://basscoder2808.github.io/GSocSubmission/,"Rohit Lodha, Jilayne Lovejoy",SPDX,"python, javascript, django, html, git, css","web, compliance, licensing","This project aims to enhance the SPDX Online Tool by improving its functionality and efficiency for license submissions. The project proposes adding features such as automatic creation of pull requests and .txt test files, improving error handling, adding unit tests and GitHub API interaction tests with mock, and creating a base reusable Django app to reduce development efforts. The objective is to streamline the license submission process, reduce manual effort, save time, and enhance productivity. The project proposes clear deliverables such as generating a .txt test file, differentiating exceptions from license submissions, adding or fixing unit tests, and improving error handling. The project will contribute to the open-source community and will provide a learning experience for the software engineering student working on the project. The choice of SPDX as the organization to work with is motivated by its mission to create a standard format for communicating the components, licenses, and copyrights of software packages and its strong community of developers, contributors, and users committed to driving innovation in the field of software licensing.",https://summerofcode.withgoogle.com/programs/2023/projects/neMaWSyM
Search Field in Options,Bayram Çiçek,https://bayramcicek.github.io/libreoffice-dev/2023/08/26/final-report-2023-gsoc.html,"Heiko Tietze, Andreas Heinisch",LibreOffice,"c++, UI, ux","search, office suite, desktop application","This enhancement aims to provide a search functionality for ""Tools > Options"". LibreOffice is a complex application with a large and growing number of options. It is not easy to find the right needle in the haystack. Like most other complex applications, it will be valuable and useful enhancement to add a search field to the ""Tools > Options"" dialog that iterates over the various tabs and filters where the search text is found.",https://summerofcode.withgoogle.com/programs/2023/projects/IKtSHIH1
Forensic analysis of container checkpoints,Behouba Manassé,https://github.com/behouba/gsoc-2023,"Adrian Reber, Radostin Stoyanov",CRIU,golang,"linux, Containerization, CRIU, Memory forensic","The goal of this proposal is to address the challenge of investigating the contents of containerized applications, which run in isolation from the host operating system. The proposed solution is to extend go-crit with forensic analysis features to improve its usability in analyzing container checkpoints. Then the new features of go-crit will be used to enhance checkpointctl's user-friendliness when performing forensic analysis of container checkpoints. The deliverables of this project will include the following: - An updated version of go-crit with forensic analysis features, which will allow other tools written in Go to perform forensic analysis of container checkpoints more easily. - An updated version of checkpointctl CLI with new command designed for forensic analysis of container checkpoints.",https://summerofcode.withgoogle.com/programs/2023/projects/CdBgTw7S
FakeNet-NG: Implementing an Interactive Graphical Summary of NBIs,Beleswar Prasad Padhi,https://gist.github.com/3V3RYONE/9685fd0e6960df140cb9127268cc1523,"Tina Johnson, Michael Bailey, Blas Kojusner, Elliot Chernofsky",FLARE,"python, javascript, html5, css, Virtual Machines, Vis.js","reverse engineering, cybersecurity, malware analysis","FakeNet-NG is a tool that is used to simulate the internet which is useful in malware analysis. Currently, FakeNet-NG displays its output by either printing it to the console or writing it to a log file. However, malware with a lot of activity can generate long FakeNet logs. To save analysts from having to read or grep long FakeNet logs, this project aims in providing a user-friendly interface for viewing the output of FakeNet-NG in a more organized and detailed manner. It would also be supported with features like search, filter and copy which would further help the user in generating effective malware reports.",https://summerofcode.withgoogle.com/programs/2023/projects/fRVAltDd
Realtime object tracking models,Ben Kang,https://docs.google.com/document/d/e/2PACX-1vRwcOGlfH81hiTeBjaa6Z5YG9v5wbsX71LiChVMGWtln-sDZ99kAZSe9pliOtLIHB3ACuzYDhXHnMcM/pub,Zihao Mu,OpenCV,"python, c++, pytorch","computer vision, ai, deep learning","The current state-of-the-art tracking models are hampered by low speed, limiting their applicability on devices with limited computational power. Although Existing realtime object tracking models could reach high speeds on edge devices, their performance is poor. Consequently, the high-performance tracker with fast speed on edge devices is critical. I have two plans to solve this problem. The first Scheme is to use the pre-trained lightweight transformer as the tracking models' backbone and through the proper design, the tracking model not only has good performance because of the use of the pre-trained visual transformer but also because the visual transformer used is lightweight and does not slow down the model due to the huge amount of computation caused by the transformer. The second Scheme is to build a small tracking model and pre-train the small tracking model using the MAE pre-training method, and finally, choose the current best-performing transformer-based tracking model as the teacher model to train the student model. Eventually, two state-of-the-art real-time tracking models will be provided, along with their code, and they will be maintained over time.",https://summerofcode.withgoogle.com/programs/2023/projects/hzVSKe3M
Extending gcc -fanalyzer C++ support for self-analysis,Benjamin Priour,https://github.com/vultkayn/gsoc23-gcc,David Malcolm,GNU Compiler Collection (GCC),c++,"compiler, Static analysis","Currently, the static analyzer offers little dedicated support for C++. Even when projecting the most straightforward valid C test cases to C++, the checkers output incorrect diagnostics, either by their absence or imprecision. The issues this project aims to tackle are all prerequisites to further extensions of C++ support. The aim of this project is to enable the analyzer to self-analyze itself.",https://summerofcode.withgoogle.com/programs/2023/projects/6t9Yjufu
Allow moving a model between apps,Bhuvnesh Sharma,https://gist.github.com/DevilsAutumn/61404f4cbfc583ced8dbc7a66d9de127,"Mariusz Felisiak, Natalia B",Django Software Foundation,"python, django",web development,The goal of this project is to allowing moving models between apps.. The model movement will be auto detected by a new generate_moved_model method in auto-detector to decrease the manual work load. The model will be moved using all the existing operations.,https://summerofcode.withgoogle.com/programs/2023/projects/ZnrbdQSB
Debug information handling improvements,billow,https://github.com/rizinorg/rizin/pull/3703,"Anton Kochkov, Deroad, ret2libc",Rizin,"c, python","reverse engineering, debugging, disassembly","The proposal outlines a project to improve the debug information handling in Rizin, an open-source reverse engineering framework. The project aims to enhance the parsing support for DWARF and PDB formats, enable loading of DWARF information from separate files and debuginfod, and integrate source line and types/variables information with analysis, printing, and breakpoint commands in debug mode. The end goal is to provide a smoother debugging experience for reverse engineers using Rizin.",https://summerofcode.withgoogle.com/programs/2023/projects/JGpphQHN
MariaDB Columnstore - Parquet support in cpimport - proposal - Bin Ruan,BinRuan,https://github.com/HanpyBin/mariadb-columnstore-engine/tree/MCOL-5505-7,Gagan Goel,MariaDB,"c++, git",database,"The task is to make cpimport support parquet files as input or design a general framework to add new input formats. Considering cpimport finish its workflow by two stages, read and parse, so I plan to solve this problem from these two stages. For read stage, I will use some external library to help finish reading like `parquet-cpp`, `arrow` and so on. By using parquet-cpp, I can directly read parquet file and by using `arrow::table` I can store data in table format. Later, in parse stage, I plan to use table format data and parse it to insert data into target table. After finishing the task, cpimport can handle parquet file input or other poplular formats like arrow, avro and successfully insert data into the database.",https://summerofcode.withgoogle.com/programs/2023/projects/w0LzyrnO
Proposal_Interactive web tour_Biqing Su,Biqing Su 1,https://github.com/cBioPortal/cbioportal-frontend/pull/4687,"Ryan Fu, Jeremy R. Easton-Marks",cBioPortal for Cancer Genomics,"javascript, react, typescript",web,"The cBioPortal provides access to a wealth of cancer genomics data, but new users often struggle to navigate its features, and existing users may not be aware of all available tools. This project aims to enhance the user experience of the cBioPortal for Cancer Genomics by implementing an interactive web tour feature. The objective is to guide new users on how to use the portal and to showcase new features to experienced users. The project proposes using reactour for implementing the web tour and local storage to record the tour progress. The deliverables include implementing the web tour feature for the group comparison tool, allowing users to disable hints, and addressing difficulties such as automatically filling input boxes and continuing tour steps after jumping to other pages.",https://summerofcode.withgoogle.com/programs/2023/projects/luumPTO5
Analytics Edge Ecosystem Workloads,Bishal Das,https://bishal-das.hashnode.dev/gsoc-2023-project-opensuse-rancher,"Doug, BWGartner, Robertsirc",openSUSE Project,"python, docker, kubernetes, devops, gitops, MLOps, Containerization","machine learning, containers, kubernetes, Rancher","In this project, we will provide an opensource-based example deployment of a trained/tested/functional workload, which would address market verticals by implementing edge-core-cloud infrastructure. It would be a brainstorm to an end-to-end example approach and potentially port portions of found examples to another technology aspect. We will use Rancher (kubernetes-as-a-service) to manage cluster and deploy microservices.",https://summerofcode.withgoogle.com/programs/2023/projects/KwnJF6Su
Add ensembling methods for tiling to Anomalib,Blaž Rolih,https://gist.github.com/blaz-r/cfaa95ff33708635fefade1d12b7a8a7,"Dick Ameln, Samet Akcay",OpenVINO Toolkit,"python, pytorch, onnx, openvino, AnomaLib","computer vision, deep learning, anomaly detection, Ensemble Methods","When tackling the challenge of detecting defects in high-resolution images, we encounter many challenges. One significant problem is the difficulty in training models effectively, primarily due to memory limitations. The process of down-sampling these images to fit within memory capacities leads to the loss of crucial information, which can result in the oversight of small yet significant defects. To overcome these issues, we can employ a strategy involving a tiled ensemble mechanism. In this case, images are split into smaller, manageable tiles. Each of these tiles is then processed using a separate model, specifically trained for that tile position. This strategy enhances localization and improves the detection of small anomalies, while also satisfying memory limitations. Anomalib currently has a basic tiler. However, the advantages of locally-aware models, like Padim, are diminished without the support of a tiled ensemble. To address this problem, we introduce a tiled ensemble implementation that preserves the advantages of local awareness while also enhancing overall performance. This approach aims to incorporate Anomalib's existing features, while simultaneously providing users the flexibility to tailor specific steps within our pipeline. All the while, we ensure that our approach remains memory-efficient.",https://summerofcode.withgoogle.com/programs/2023/projects/WUSjdxGl
Physical memory anti-fragmentation mechanisms,Bojan Novković,https://wiki.freebsd.org/SummerOfCode2023Projects/PhysicalMemoryAntiFragmentationMechanisms,Mark Johnston,The FreeBSD Project,c,"Defragmentation, Virtual memory, Superpages","The use of superpages in modern hardware and operating system yielded important performance benefits. Unfortunately, allocating superpages can often fail due to a high rate of external fragmentation in physical memory. Thus external physical memory fragmentation in modern operating systems has once again become a serious issue. This project aims to design and implement several anti-fragmentation mechanisms for the FreeBSD kernel. At the time of writing, the FreeBSD kernel has no memory compaction mechanisms or any way of quantifying physical memory fragmentation. The first major goal is implementing several fragmentation metrics for the page allocation code. The second major goal is designing and implementing a runtime physical memory compaction mechanism. When invoked, this mechanism would identify sparsely populated and fragmented physical memory regions and rearrange the pages to eliminate any ""holes"" in the region. Aside from explicit invocation, a background daemon would monitor the relevant fragmentation metric and trigger the memory compaction mechanism should the value drop below a certain threshold. The last goal will introduce a passive anti-fragmentation mechanism for the demand paging mechanism. The key idea is to enhance the page placement code to use contiguous spans of pages instead of allocating random pages.",https://summerofcode.withgoogle.com/programs/2023/projects/DcDs0ZSS
Add Support for SQL Database Storage in CurveBS,Bokai Jia,https://github.com/bit-dance/GSoC_Final_Report,Xiaocui Li,CNCF,"c++, sql","database, Distributed File System","CurveBS currently use etcd as metadata storage but etcd has limited scalability, and the amount of metadata that can be stored is limited.So i plan to add a MySQL database as one of the storage engines and let user choose whether the metadata is stored in the kv engine or the sql engine through the configuration file. Deliverables: 1.A new SQL storage client implementation for metadata in CurveBS. 2.Configuration options to choose between kv engine and SQL engine for metadata storage. 3.Modifications to the leader election process to support the new SQL storage client. 4.Documentation on how to configure and use the new SQL storage client. 5.Tests to ensure the new SQL storage client works as expected and is compatible with existing functionality. 6.Release notes detailing the changes and improvements made to CurveBS with the addition of the new SQL storage client.",https://summerofcode.withgoogle.com/programs/2023/projects/uEZfWgBc
Add chunk file upload support and enhance Import/Export exprience,Brijmohan Siyag,https://gist.github.com/brijsiyag/1a0a0205e3bb1ee8a70d1e605d7042bd,vrongmeal,Zulip,"python, javascript",web,"The primary goal of this project is to improve the performance of Zulip, with a focus on the ""upload"" and ""import/export"" areas. Specifically, I will implement chunk file upload support for large-sized files and enable the direct importing of exports from other services via the web. Additionally, I will work on the images thumbnail part, Which currently places a significant load by downloading the full image.",https://summerofcode.withgoogle.com/programs/2023/projects/CxaFGt6R
Vintage Platform Audio Emulation Library,brittneyjuliet,https://gitlab.com/brittneyjuliet/purr-data-vintage-platform-audio-emulation,"Purr Data, Matt Barber",Purr Data,Pure data,Music Performance,"My Google Summer of Code 2023 project is a performance-oriented vintage platform audio emulation library coded entirely in the graphical programming language Pure Data. This project seeks to bridge the gap between traditional instrumental performance and electronic music performance such that artists of all technical-abilities can experiment with or continue to develop their own, unique, electronic music performance practice. The completed emulation library includes the following deliverables: a library of objects that have sound outputs similar to that of the SNES and GEMS (Genesis Editor for Music and Sound Effects) audio systems, a sequencer, example patches that demonstrate the functionality of the library, accompanying help files / documentation for each device, and midi compatibility whereby each element of the library can be intuitively controlled via midi controllers and other midi-compatible hardware.",https://summerofcode.withgoogle.com/programs/2023/projects/iZh8H4uD
Parameterizing invariant spaces,Bruno Edwards,https://github.com/Bruno-TT/GSOC-writeup-public/blob/main/writeup.pdf,Dima Pasechnik,SageMath,python,"mathematics, Group Theory, invariant theory","I've been working on extending SageMath's capabilities to calculate parameterizations for invariant rings of matrix groups over finite fields. While the general linear group's invariants can be parameterized using Dickson invariants, it's more challenging for smaller groups like the special linear group. I aim to implement known methods for computing these spaces, like subring decomposition, to make them more accessible and known to researchers. I also plan to tackle invariant rings of characteristic 0 representations of finite groups, focusing on permutation representations.",https://summerofcode.withgoogle.com/programs/2023/projects/6vgtw5XH
VDB Rendering for BRL-CAD,Caio Brito,https://brlcad.org/wiki/User:Caio/GSoC2023/FinalReport,"Himanshu Sekhar Nayak, Erik",BRL-CAD,"c++, OpenVDB","graphics, Volumetric rendering, VDB","VDB is a volumetric, sparse and hierarchical data structure which can be used for volumetric rendering, simulation and computational solid geometry (CSG). This project aims to add a VDB as a new entity for volumetric data into BRL-CAD. Additionally, the VDB structure would be used to render volumetric data with ray tracing.",https://summerofcode.withgoogle.com/programs/2023/projects/X9kIPCbP
Continuous Integration Optimization,Cameron Peterson,https://submitty.org/developer/google_summer_of_code/2023_Cameron_Peterson,"Barbara Cutler, Matthew Peveler, Shail Patel, Jasmine Plum, Chris Reed, William Allen, Jensen Li",Submitty,"python, docker","continuous integration, development, Unit tests, Integration Tests","Submitty currently has unit and integration tests that take over an hour to complete, the goal is to reduce the run time of the tests by at least half, while adding more tests to increase the code coverage, in order to limit the amount of inaccurate changes being merged.",https://summerofcode.withgoogle.com/programs/2023/projects/buBnvtEr
GSoC 2023 Project Idea 2.2 Generalize parameter optimization routines,Carolina Fernandez,https://github.com/jonescompneurolab/hnn-core/pull/652,"Nicholas Tolley, Stephanie Jones, Mainak Jas, R Thorpe",INCF,python,"simulation, networks, neuroscience, modeling, computational","The Human Neocortical Neurosolver (HNN) is open-source, computational neural modeling software that allows us to examine the cellular- and circuit-level basis of brain responses. HNN requires the hand-tuning of a large set of parameters until a close fit between simulated and recorded data is attained. This hand-tuning can take a substantial amount of effort thus it is in the user’s best interest to automate the process so that parameters can be optimized in a time efficient manner. The goal of this project is to develop optimization functions that will perform a wide search over the parameter space to arrive at faithful simulations. HNN is currently being used to develop or test hypotheses about underlying circuitry that gives rise to cognitive processes of interest. Developing a robust algorithm for parameter optimization has the potential to illuminate avenues for the diagnosis and treatment of multiple brain disorders and diseases, cognitive impairment, and psychiatric disorders. Finally, contribution to HNN’s codebase will aid researchers who use the tool in yielding important constraints to the development of theories about the origins of human brain responses.",https://summerofcode.withgoogle.com/programs/2023/projects/6L4I0twl
Improvements in the DrTest tool,Carolina Melendez,https://medium.com/@carolina.melendez376/improvements-in-the-drtest-tool-gsoc-2023-final-report-3da5ca1024f0,"Juan Pablo, Alison Fernandez Blanco, Geraldine Galindo, Gabriel Darbord",Pharo Consortium,smalltalk,Testing tool,"This project proposal focuses on improving two DrTest plugins: Coverage and Executable Comment. In particular, to enhance how these plugins show the results to facilitate developer analysis by: (a) adding a statement coverage visualization view; (b) showing detailed coverage statistics; and (c) adding more grouping options in the result panel. Complementary, we propose to add a new plugin that allows developers to perform mutation testing analysis.",https://summerofcode.withgoogle.com/programs/2023/projects/Wk43GERq
Bootstapping Gentoo with The LLVM C Library,Catcream,https://blogs.gentoo.org/gsoc/about-me-cc/,"Sam James, juippis",Gentoo Foundation,"c, python, llvm, bash, clang, Portage, libc","operating systems, Standard C library","The goal of this project is to get a Gentoo Linux system running with LLVM libc in fullbuild mode as the system libc. The biggest hurdle here will be getting the Portage dependency Python to work, because it for example requires some math.h functions not yet included in LLVM libc to build. To work around this I will fudge in the missing parts, and later on in the project work on getting these upstreamed. Similar actions will be taken for other software too. My final goal is to get a simple terminal-based desktop running, as well as an experimental amd64/llvm-libc stage3 tarball for other interested users. As a side project I will also work on getting Crossdev to work with a pure LLVM toolchain by providing a means to compile the builtins library ""compiler-rt"" for foreign target triples. This will be used half way through my project when I switch focus from a ""Linux from Scratch"" approach into working with Crossdev. Deliverables: + Portage running on a llvm-libc/Linux system. + Basic utilities for a terminal-based desktop. + An experimental stage3 tarball for other users. + Documentation on Gentoo wiki and blog posts. + Being able to use Crossdev with the LLVM toolchain.",https://summerofcode.withgoogle.com/programs/2023/projects/ho8CVwCn
DICOM & BioFormats,cgdogan,https://gist.github.com/CGDogan/f6e720357d503c506c02199ae8947be1,"Birm, Tony Pan",caMicroscope,c,"web, graphics","My project goal was to add DICOM file support to caMicroscope, a Whole Slide Image viewer. The viewer backend (OpenSlide) didn't support DICOM, so we needed a second backend. Surprisingly, before the coding period started, OpenSlide did get DICOM file support and this gave me the opportunity to tackle the bigger challenge of integrating BioFormats into caMicroscope. This would be extraordinary, as BioFormats is a Java library with no C wrappers available online. I started by refactoring caMicroscope code to use a single base Dockerfile which compiled OpenSlide. Then I made a Java wrapper and prepared its corresponding C caller. For this, I had chosen GraalVM C API, but once I found out about its level of performance and its requirement to achieve high code covergage first (for metadata collection), I rewrote it for Java JNI. To make it available to the two derivatives of our base image, I refactored this to be a separate project. We also needed to make this available to our Python image metadata server, so I wrote a wrapper in Python using cffi.",https://summerofcode.withgoogle.com/programs/2023/projects/k6l72ZaB
Migrate EHR to Laravel - User & Roles Module,Chaitak Gorai,https://blogbook.tech/gsoc-2023-final-work-submission-report,"Mua Rachmann, Tony McCormick",LibreHealth,"html, sql, css, VueJS, TailwindCSS, PHP (Laravel)","health, EHR","I am excited about the opportunity to contribute to the LibreHealth EHR project by migrating the User's Module to the new Laravel codebase, revamping the User Interface, and updating the documentation. The primary objective of this project is to migrate the User's Module to the new Laravel codebase without any loss of data or functionality. As a developer, I have the necessary skills and expertise to work with both the Legacy codebase and the Laravel framework. I will work closely with the LibreHealth EHR team to ensure that any required adjustments to the current codebase are made to ensure compatibility with the new framework. In addition to the code migration, I am committed to enhancing the User Interface of the User's Module. With my extensive experience in UI/UX design, I will work closely with the LibreHealth EHR team to gather feedback on the current UI and design an updated version that aligns with their needs. I believe that this will enhance the overall user experience and make the application more user-friendly. Finally, I understand the importance of documentation in ensuring that developers can easily understand and work with the codebase. As such, I will update and improve the project's documentation to ensure that other developers can easily understand the codebase and contribute to the project. I will document the migration process, including any adjustments made to the current codebase, to ensure that it is clear and understandable to other developers. In summary, I am excited to contribute to the LibreHealth EHR project by migrating the User's Module to the new Laravel codebase, revamping the User Interface, and updating the documentation. I believe that my skills and expertise make me a strong candidate for this project, and I am committed to ensuring its success and helping it achieve its mission of providing high-quality medical software to medical practices and clinics globally.",https://summerofcode.withgoogle.com/programs/2023/projects/QCPyXdFo
Circuit Visualization with Makerchip Platform,Chaitravi Chalke,https://chaitravi-ce.hashnode.dev/unveiling-the-power-the-crucial-role-of-visualization-in-understanding-risc-v-cores,"Steve Hoover, Bala Dhinesh",Free and Open Source Silicon Foundation,"javascript, verilog","web, Computer Architechture","The Makerchip platform has added custom visualization support for circuit simulations, allowing for improved insights into microarchitectural behavior and circuit debugging. This project seeks to extend the capabilities of the platform by implementing customized circuit visualization for various circuits, including SweRV, SERV, BaseJump STL, and fundamental circuits for educational purposes. Additionally, the project will incorporate neural networks and gamified circuit design visualization to further enhance the user experience. This feature will provide a clearer understanding of how each step of the code is functioning, leading to improved insights and faster debugging. By enabling users to visualize and analyze circuits in a more efficient and engaging manner, this project aims to improve the overall functionality and usability of the Makerchip platform.",https://summerofcode.withgoogle.com/programs/2023/projects/pKARyx8Z
GORA-708 Improve ArangoDB datastore and upgrade Hive and HBase dependencies,chaminda-neluka,https://gist.github.com/chaminda-neluka/e2b96506cfdee6256a577f14aa21665b,"Kevin Ratnasekera, Chanaka",Apache Software Foundation,java,"database, ORM",The project proposes further extending multi model database support in Apache Gora with ArangoDB datastore and upgrade Hive and HBase datastore dependencies to become fully compatible with latest available API versions.,https://summerofcode.withgoogle.com/programs/2023/projects/iSEHsdtP
Resonate - A Social Voice Platform,Chandan S Gowda,https://gist.github.com/chandansgowda/022262ad5d8cb61e4c2949cbb16fe6c5,"Bruno, jddeep, Subhangi Choudhary",AOSSIE,"nodejs, flutter, Express, Livekit, appwrite","mobile app, communication","The objective is to develop an open-source, social voice platform that promotes collaboration and community engagement. To achieve this objective, the project architecture involves the development of a Flutter App and a NodeJs + Express Server, both powered by the Appwrite backend. By integrating Appwrite, the platform will benefit from its robust features and functionalities, replacing the previously planned Firebase backend. The Flutter App will serve as the primary user interface, offering a seamless and intuitive experience for users. The Node.js + Express Server will handle the backend logic, providing essential APIs for communication with the Appwrite backend. This integration will enable efficient management of rooms/spaces and storage of user-generated content. Additionally, the project will leverage Livekit, an open-source WebRTC Stack, to provide real-time audio communication infrastructure. By incorporating Livekit into the platform, users will have the means to engage in live discussions, enabling effective collaboration and fostering a sense of community.",https://summerofcode.withgoogle.com/programs/2023/projects/tOFRXbVO
GSoC Implement python client for RocketMQ 5.0,Chaomei Yan,https://github.com/yanchaomei/GSOC2023/blob/main/README.md,"Aaron Ai, RongtongJin",Apache Software Foundation,"python, java, grpc","message queue, Client","RocketMQ 5.0 has released various language clients including Java, CPP, and Golang, to cover all major programming languages, a Python client needs to be implemented. Referring to the API design of the Java client, the Python client is also composed of several main modules: Consumer, Producer, Message, Metrics, and Client. The general process for implementing a python client is as follows: * Build a test environment * Automatically generate protocol layer code through the grpc protoc tool * Implementing Producer/SimpleConsumer * Implementing PushConsumer * Implement client metrics architecture based on OpenTelemetry/Open Focus",https://summerofcode.withgoogle.com/programs/2023/projects/XEJasFhe
Geant4-FastSim: Transformer-based architecture for fast shower simulation,Chenguang Guan,https://gitlab.cern.ch/cguan/ml4fastsim/-/tree/autoregressive-dev?ref_type=heads,"Dalila Salamani, Piyush Raikwar",CERN-HSF,"python, tensorflow, pytorch","machine learning, transformer, Generative Model, AI for Science","Calorimeter is one of the most important components of the Large Hadron Collider (LHC) experiments, detecting energy loss of particles after collision. However, current Geant4 simulation of showering process in the calorimeter is inherently slow for large amounts of events, especially after High Luminosity Upgrading in the future. Therefore, generative models and other machine learning techniques can be used to accelerate the Geant4 simulation. This project aims to improve the performances of the current VQ-VAE Transformer for particle showering and explore architectures beyond (VQ-)VAE and/or Transformer, including new position embedding, hierarchical attention, an-isotropic attention, Fourier Transform linear mixer, and etc. We expect to provide deliverables including notes of extended numeric experiment and integrating new models into the project code.",https://summerofcode.withgoogle.com/programs/2023/projects/mQ2n3AcZ
GSoC 2023 Proposal: Wiki farm support for Canasta,Chenhao Liu,https://github.com/CanastaWiki/Canasta/pull/295,Yaron Koren,Wikimedia Foundation,"golang, docker, php, Apache","wiki, cloud, server","Canasta is a Docker-based MediaWiki distribution that simplifies the process of setting up a full-featured MediaWiki instance on virtually any server. Despite its extensive features, Canasta currently lacks support for running multiple wikis (a wiki family or wiki farm) within a single container. The aim of this project is to implement this missing functionality and enhance the Canasta command-line interface (CLI) to manage individual wikis within a wiki farm effectively.",https://summerofcode.withgoogle.com/programs/2023/projects/9LkRgaCP
Chirag's Proposal for Borg Collective,Chirag Aggarwal,https://chirag.sh/gsoc-2023-wrapping-things-up/,"Manuel Riel, yfprojects (borg collective), Grant",Python Software Foundation,"python, qt, ci/cd, BorgBackup","gui, Backup","My proposed project aims to enhance the Borg ecosystem by tackling three main areas: Filter option in diff and extract view in Vorta, implement live binary tests in Vorta, and bootstrap a Borgmatic restore from nothing. These improvements will help users more efficiently and effectively manage their backups, improve testing processes, and facilitate disaster recovery. Firstly, I will implement a search function that allows users to filter files by search string in Vorta's diff and extract view. I will also add the ""Change"" filter to the comparison view, which will filter only removed, added, and modified files. This task also includes adding syntax to allow advanced filtering and filter by size range as a stretch goal. These enhancements will help users easily find and manage their backup files. Secondly, I will improve BorgBackup testing by implementing live binary tests in Vorta. Currently Vorta contains stdout and stderr mock files for the Borg JSON output of various commands for testing purposes but there’s no actual running of the commands. Moreover, it only supports one mock file while Vorta supports multiple Borg versions where output syntax may vary. This project aims to improve Vorta Testing by implementing live binary tests that run on multiple actual Borg versions/binaries. I'll also integrate live binary tests with Vorta's CI/CD pipeline. Finally, I will implement bootstrap functionality in Borgmatic to restore backups from nothing, enabling users to easily recover their data in the event of a disaster. I will implement this feature by providing clear and comprehensive documentation, which will outline the steps required to perform a Borgmatic restore from scratch. This will significantly improve disaster recovery capabilities and reduce the risk of data loss.",https://summerofcode.withgoogle.com/programs/2023/projects/jbNMH32a
Dashboard for Equity in City Infrastructure,chiragmahapatra,https://github.com/monum/llm-exploration,"Michael Lawrence Evans, Michael_Miller_boston",Mayor's Office of New Urban Mechanics,"python, mysql, d3, typescript, pandas","data analysis, civic tech, Web App","The goal of this project is to build a web-based dashboard that allows City departments to keep track of infrastructure investments and measure their equity across different neighborhoods. The Mayor's Office of New Urban Mechanics is focused on creating innovative and equitable services for the residents of Boston. The proposed dashboard will help City departments monitor their infrastructure investments, analyze and visualize trends over time, and identify any disparities in the distribution of these investments. The dashboard will be built using frequently updated open data and will include a map-based view of infrastructure investments and various charts to spot trends. The project will be built using the latest technology in GIS and web mapping platforms. The proposed dashboard will be a valuable tool for City departments in measuring and improving equity in their infrastructure investments. The project has the potential to improve the quality of life for residents of Boston by identifying disparities in the distribution of investments and helping City departments to address these disparities. The project will also serve as a model for other cities looking to measure and improve equity in their infrastructure investments.",https://summerofcode.withgoogle.com/programs/2023/projects/yNFqE4fX
Creating new Lattices for Apothesis,Christina-Anna Gatsiou,https://github.com/nixeimar/Apothesis/tree/gsoc2023,"Vissarion Fisikopoulos, Nikos Cheimarios",Open Technologies Alliance - GFOSS,"c++, Algorithms, Mathematical modelling",Simulation of physical/chemical phenomena,"The goal of this project is to enhance Apothesis, an open-source software that enables the simulation of thin film deposition processes, by adding new lattice structures to its capabilities. Thin film deposition is an essential step in the manufacturing of numerous products and devices, including solid-state and medical devices, and computational simulation is a valuable tool for scientists and engineers in this field. In the previous GSoC, the student worked on the I/O operations of Apothesis and designed the necessary infrastructure to enhance the software. In this project, the objective is to expand the capabilities of Apothesis by adding hexagonal and diamond lattices to enable the simulation of more complex materials and processes. The addition of these new lattice structures will allow Apothesis to simulate a wider range of materials and enable the development of new technologies that can streamline or enhance thin film deposition processes. The project will involve researching the hexagonal and diamond lattice structures, developing the necessary code, and testing the implementation. The end result will be a more robust and versatile software tool for scientists and engineers working in thin film deposition processes.",https://summerofcode.withgoogle.com/programs/2023/projects/xLtiI8tX
A sandboxing tool for virtiofsd,Christopher Acosta,https://github.com/czzrr/gsoc2023,"Stefano Garzarella, German Maglione",QEMU,"rust, qemu",virtualization,"Virtiofs is a shared file system that lets virtual machines access a directory tree on the host. Unlike existing approaches, it is designed to offer local file system semantics and performance. Currently, virtiofsd integrates the sandboxing code and the server code in a single binary. The goal is to extract that code and create an external tool that creates a sandbox environment and runs virtiofsd in it. This will make it easier to develop sandboxing features and virtiofsd side by side. In addition, that tool should be extended to be able to run virtiofsd in a restricted environment with Landlock. Landlock is a Linux kernel module that allows unprivileged processes to restrict their own access rights. This will enable the tool to apply access restrictions to virtiofsd without requiring privileged access, in a way that is enforced by the kernel, thereby increasing the protection of virtiofsd users. This will allow greater flexibility when integrating virtiofsd into a VMM or running it inside a container, due to how Landlock enforces access restriction rules as composable security layers that are compatible with system access controls.",https://summerofcode.withgoogle.com/programs/2023/projects/52bIKoWU
Implement Initial Non-Destructive Editing Workflow in GIMP,cmyk-student,https://gimp-nde-gsoc-2023.blogspot.com/2023/08/record-of-work-done-on-nde.html,Jehan,GNU Image Manipulation Program,"c, gtk","graphics, art, photography, Non-Destructive Editing","GIMP utilizes a Destructive Editing workflow – all changes are made directly to the image itself. A much requested feature is Non-Destructive Editing (NDE) which would allow users to make changes without overwriting the original image. This would mean they can easily revert prior edits, modify the settings of filters to see live changes, and rearrange the order that effects are applied in. GIMP’s image processing engine GEGL is fully capable of many NDE operations. However, these features are not fully exposed to users. The goal of this project would be to enable Non-Destructive Editing on individual layers and layer groups through “Layer Effects” such as drop shadows and brightness/contrast filters. A basic implementation consists of three milestones: 1. Research and design a NDE workflow that compliments GIMP’s current design and user base. 2. Implement “Layer Effects” for GIMP’s regular and text layers as well as layer groups. 3. Add support to the PSD plug-in to recognize and import equivalent “Layer Styles” and “Adjustment Layers” as NDE Layer Effects.",https://summerofcode.withgoogle.com/programs/2023/projects/CuwyAr75
Node preview in the shader editor,Colin Marmond,https://wiki.blender.org/wiki/User:ColinMarmond/GSoC_2023/Final_Report,Brecht Van Lommel,Blender Foundation,"c, c++","graphics, shading","The node previews in the shader editor had been removed when Eevee replaced the Internal render engine. This project ’s aim is to bring it back. Indeed, the demand of a preview area under selected nodes to preview the effects is high. I will write code to put back this feature in the blender sources, taking into account the specificities of the Cycles engine (tricking with AOV).",https://summerofcode.withgoogle.com/programs/2023/projects/XE2KH2vE
CAPA: Ghidra Integration,Colton G,https://colton-gabertan.github.io/Google-Summer-of-Code-2023/,"Willi Ballenthin, Mike Hunhoff, Blas Kojusner, Elliot Chernofsky, Conor Quigley",FLARE,"java, x86, Python3, Ghidra, IDA Pro, Vivisect, dnfile","security, reverse engineering, emulation, disassembly, Binary Analysis","CAPA is the FLARE team’s open-source tool to identify program capabilities using an extensible rule set. Each rule is matched against features that CAPA extracts from a program. Extracted features include file-level features such as strings, section names, imports, and exports and function-level features such as API calls, string and byte references, instruction mnemonics, and number constants. CAPA uses feature extractors, called ""backends"", to extract features from supported file types (PE, ELF, and .NET) and architectures (32- and 64-bit x86). Each backend is built around an existing tool or library that provides file parsing and disassembly capabilities. CAPA uses this to extract features. CAPA currently implements backends using Vivisect, IDA Pro, and dnfile. Ghidra is a popular open-source disassembly framework with a robust API to access its analysis. Programs can interact with a wealth of information that includes parsed file formats and disassembled code. The goal of this project is to develop a Ghidra backend for CAPA using Python 3 (via Ghidrathon) and Ghidra’s scripting API. Users should be able to invoke CAPA such that it uses Ghidra’s analysis engine and/or invoke CAPA from within Ghidra.",https://summerofcode.withgoogle.com/programs/2023/projects/7RBMLaJD
Videoconvert plugin for PipeWire,columbarius,https://gitlab.freedesktop.org/pipewire/pipewire/-/merge_requests/1704,George Kiagiadakis,X.Org Foundation,"c, vulkan, PipeWire, DMABUF","graphics, Videostreaming","Sharing video buffers via PipeWire requires at the moment consumers and producers to provide a common capability set of buffer type, buffer format and in case of hardware buffers drm\_modifier. To mitigate mismatch issues, the goal is creating a PipeWire plugin, similar to the existing audioconvert one, using vulkan as the underlying technology for efficient video format conversions on hardware buffers and optional downloads to system memory. This approach allows producers to focus solely on the most efficient buffer type and format, removing the necessity to provide a fallback to system memory buffers, or its own rendering capabilities, while consumers on the other hand get increased compatibility and don't have to support any possible format. This eases the development of a working PipeWire client, making it possible to implement support for a wider range of formats and more advanced features later.",https://summerofcode.withgoogle.com/programs/2023/projects/BRWjKfFw
Modules Build Daemon: Build System Agnostic Support for Explicitly Built Modules,Connor Sughrue,https://github.com/cpsughrue/llvm-contributions,"Jan Svoboda, Michael Spencer",LLVM Compiler Infrastructure,c++,"build systems, c++, compiler, Clang","This project aims to implement a daemon that serves as a build system manager for modules, providing support for explicitly built modules irrespective of the build system. By simply incorporating a single command line flag, each Clang invocation registers its translation unit with the daemon, which then scans the unit's dependencies. As translation units are registered and analyzed, the daemon constructs a dependency graph for the entire project. Concurrently, it utilizes the emerging graph to schedule and build each module's AST. This approach allows for a single, comprehensive entity to effectively coordinate and manage the build of modules throughout the entire build process.",https://summerofcode.withgoogle.com/programs/2023/projects/XvbLGMbT
Equivariant Quantum Neural Networks for Continuous Symmetry in High Energy Physics,Cosmos Dong,https://medium.com/@zhontiandong/equivariant-quantum-neural-networks-be4ba231c457,"Konstantin Matchev, Katia Matcheva, Rui Zhang",Machine Learning for Science (ML4SCI),"python, Pennylane","machine learning, physics, Quantum Computing","This project aims to explore the development and application of equivariant quantum neural networks (EQNNs) for continuous symmetry in high-energy physics data. This type of network architecture will respect certain underlying symmetry of the input data. While several studies for discrete symmetry such as permutation symmetries have been done recently. Research for continuous symmetry is still limited. I will begin by implementing EQNNs on a toy model related to a simple continuous group. Afterward, I will apply the proposed EQNNs to high-energy physics data and compare the results with classical machine learning methods.",https://summerofcode.withgoogle.com/programs/2023/projects/Pzd5EZBm
"NumFocus & SciML, PDEs on Graphs",Criston Hyett,https://cmhyett.github.io/portfolio/gsoc/,"Chris Rackauckas, Alex W Jones",NumFOCUS,"python, c/c++, julia, fenics","partial differential equations, numerical methods, dynamical systems","I propose to implement a common interface to deploy the power of SciML to dynamical systems on graphs. In achieving this, one new package will be developed (I refer to it temporarily as ``PDEsOnGraphs.jl'') and two will be contributed to: modernization of FEniCS.jl with integration with FEniCSx/DOLFINx, and implementation of staggered-grid discretizations in MethodOfLines.jl. I propose this work to empower researchers modeling flows - be it water, sewer, natural gas, electricity, traffic, blood, etc. - by utilizing the power of the julia, and specifically the SciML, ecosystem.",https://summerofcode.withgoogle.com/programs/2023/projects/YX0ACw7M
Improve automatic differentiation of object-oriented paradigms using Clad,Daemond Zhang,https://docs.google.com/presentation/d/1l9cGNBloVSmt0u_Cyl1EBOu72orrBEdg/edit?usp=sharing&ouid=109152010533861457157&rtpof=true&sd=true,"Vassil Vassilev, parth_07",CERN-HSF,"llvm, c++, clang","programming language, compiler","I would like to apply for the Improve automatic differentiation of object-oriented paradigms using Clad project. This project is mainly focused on supporting object-oriented programming features in clad, including several milestones such as differentiation of constructors, differentiation of operator overloads, reference class members, and custom derivatives for object-oriented constructs. It's valuable as no other AD system has done this before, and thus is experimental.",https://summerofcode.withgoogle.com/programs/2023/projects/AFXlNwSz
NWB File Compatibility Testing and Summary Generation via Docker,Daksh Rathore,https://gist.github.com/Daksh1603/744637f97ed86f108bcf8599973f5220,"Ankur Sinha (he/him/his), Padraig Gleeson, Björn Brembs",INCF,"python, docker","data analysis, neuroscience","The ""NWB File Compatibility Testing and Summary Generation via Docker"" project aims to streamline the process of testing NWB (Neurodata Without Borders) files for compatibility through the utilization of Docker containers. NWB files are commonly used to store neuroscientific data, and ensuring their compatibility with various software environments is crucial (NWB Explorer in particular). By employing Docker, the project facilitates consistent and reproducible testing across environments under observation. The project also involves the automated generation of summary files, which provide concise insights into the compatibility status of NWB files. This endeavor ultimately enhances the efficiency of assessing file compatibility while promoting standardized practices within the neuroscientific community.",https://summerofcode.withgoogle.com/programs/2023/projects/eFJx96d3
High Fidelity simulation using Unreal engine,damodardatta,https://damodardatta.github.io/blog/2023/report_gsoc2023/,"Carlos Espinosa, Aaron Hunter",UC OSPO,"python, ros, gazebo, c++, matlab, unreal engine, Simulink","robotics, graphics, UAVs","Existing frameworks for simulation autonomous vehicles use a gazebo simulator with ROS, which limits the development to only Python and C++ programming languages. I intend to develop an unreal engine-based simulator which the OSAVC team can use for development, taking inspiration from Airsim. This allows us to do high-fidelity simulation with the support of programming languages,i.e. Python and C++. In this project, I will add an example of simulating a custom-built CAD model and additionally controlling it using Matlab (Simulink). So that in future, the Vehicle control algorithm design and validation process will become easier. I intend to add detailed documentation of the weekly development period and examples to smoothen future development. Upon successful completion, the project will deliver a powerful simulator with realistic simulation using an unreal engine and the ability to test different vehicles like cars, UAVs and Rovers in future.",https://summerofcode.withgoogle.com/programs/2023/projects/hVIFSHa7
Dynamical Systems with Multiple Functions,Dang,https://drive.google.com/file/d/1uesZJcV3PCd-v2j27cluIds2VpFGrYQe/view?usp=sharing,"BenH, Alexander Galarraga",SageMath,"python, SageMath","Dynamics, sage","Sage does not have support for dynamical semigroups, which are dynamical systems involving multiple functions. This project aims to create a class that encapsulates dynamical semigroups, which can be use to further explore this field of mathematics.",https://summerofcode.withgoogle.com/programs/2023/projects/OCowCmCj
http4s Ember WebSocket Client,Dang Trung Hieu,https://github.com/http4s/http4s/pull/7196,"armanbilge, Christopher Davenport, Diego Alonso",Scala Center,scala,web,"The aim of this project is to implement an http4s Ember WebSocket client, a pure functional WebSocket client in Scala and integrate it with other libraries in the Typelevel ecosystem. WebSocket is a computer communication protocol that enables two-way communication between a client and a server, which is widely used in numerous applications including messaging and real-time notifications, as well as GraphQL subscriptions and executing commands in a Kubernetes Pod. An Ember implementation of the WebSocket client would benefit from the ability to cross-compile to multiple platforms (JVM, ScalaJS and Native). It would also potentially achieve high performance due to Ember being built on fs2 and thus can take advantage of highly optimized fs2 runtimes.",https://summerofcode.withgoogle.com/programs/2023/projects/O5hVJAO1
Non-rigid Iterative Closest Point,Dániel Unyi,https://github.com/CGAL/cgal/issues/7674,"Mael, Roberto M. Dyke",CGAL Project,c++,"graphics, geometry","Non-rigid Iterative Closest Point (N-ICP) is a classic method used for the registration of non-rigidly deforming shapes. Non-rigid registration seeks to find a series of transformations that aligns one surface to another. This process is a necessary step prior to performing tasks such as shape analysis, dynamic surface reconstruction, and object retrieval. As well as its simplicity, a key benefit of the N-ICP algorithm is its extensibility, allowing it to be adapted/enhanced for specific applications. Currently, there is no implementation of N-ICP within CGAL. This project seeks to develop a novel component for the CGAL library that follows the common design practices used in Open Source projects.",https://summerofcode.withgoogle.com/programs/2023/projects/FOvDMw3h
Improving SLIPS Performance Data Gathering,Daniel Yang,https://docs.google.com/document/d/1eTPEl_uJKz9h9TFsc-cA48RMlz5za3Fq9vQ_Pyn7Jdw/edit?usp=sharing,"Sebastian Garcia, Alya Gomaa, Veronica Valeros","Stratosphere Laboratory, Czech Technical University in Prague","python, redis","optimization, network security","SLIPS is a Machine Learning based intrusion detection system, which scans network traffic and processes the data using a variety of techniques, both machine learning based as well as heuristic based. Despite having many different features and techniques to detect malicious behaviors on a target network, there will always be a problem of processing so much network traffic data quickly and efficiently, both in regards to the CPU and memory usage. However, there is currently no way to gather data about CPU and memory usage during execution time, which makes it difficult to make further performance improvements to the project. Therefore, this project seeks to remedy this by creating a set of tools to gather performance data about the IDS execution behavior. To improve performance data gathering capabilities, the following features will be added to the project: - CPU profiling module - Memory profiling module - Both modules will allow for: Export of profile data, output as both absolute and difference from input profile baseline (if provided), output as data stream - CPU/Memory data visualization/analysis module which can: Show process resource usage over time, can restrict to top however many if desired, histogram of resource consumption and time spent at consumption level for a single module, and recommendation lists for modules needing optimization, scoring criteria based on highest memory/CPU usage, longest blocking time, and weighted aggregate score.",https://summerofcode.withgoogle.com/programs/2023/projects/pxeNagBx
Expand support for spatial models in PyMC,Daniel_Saunders,https://github.com/daniel-saunders-phil/GSoC/tree/master,"Chris, Bill Engels",NumFOCUS,"python, Pytensor","Probabilistic Programming, Bayesian, Spatial statistics","This project would implement the Besag, York, Mollie (BYM) model in PyMC. BYM is a highly flexible model for studying spatial data and is used widely in epidemiology, agriculture, and ecology. The strategy behind the BYM model is to treat the outcome of interest as the result of three factors: some set of predictor variables, spatial covariance between neighboring regions, and random effects that represent non-spatial heterogeneity. Although very flexible, the BYM model can be difficult to specify in a way that is simultaneously computationally efficient, interpretable, and identifiable. Recently, Morris et al (2019) demonstrated an alternative specification of the BYM model that is significantly more efficient, interpretable, and can be identified with Monte Carlo Markov Chain (MCMC) samplers. Developing an implementation in Python with PyMC would make the model more accessible to a greater variety of users. Furthermore, BYM models are only available in a Bayesian framework. As a leading Bayesian statistics package, PyMC should support this extremely useful model in spatial statistics.",https://summerofcode.withgoogle.com/programs/2023/projects/Oxk6HziB
Extend and improve the CERNBox Notifications platform,daniel-rey,https://daniel-sparemblek.github.io/gsoc-2023/,"Hugo Gonzalez Labrador, javfg",CERN-HSF,"mysql, javascript, go, typescript","web, Notifications","Reva is the core of the CERNBox service. It is a middleware framework, providing interoperability between storage and application providers using a universal set of APIs. Currently, Reva’s notifications system is under development. In the next few weeks, a small set of actions in the notifications system will be launched, including • Notifying a user you shared a file/folder with them via email. • Notifying a user you uploaded a file to a folder they shared with you. I propose to improve this notifications center with several additions. The notifications would have a new settings option in which the user can primarily choose which MIME type and possibly file type he wants to receive notifications for. This is to be done with additions to the database schema, possibly designing a completely new schema. Also, there is major work to be done in the back-end system in order to fully support this feature, and of course lastly, in the front end - there needs to be work done on creating the settings window and parsing the user choices for the setting they want to choose. After this, another improvement can be done to the notifications center which is the ability to get metrics on certain data - in particular how many files/folders of a certain type or in general have been shared to this or by this user. There is mostly work on the front end to be done here designing the possible options in the settings to display this metric. But also work on accessing the database to get these metrics displayed to the user. Deliverables: The extension of the simple notifications into a notifications center in the UI, including settings for filtering the MIME type of the file • Documentation on the implementation, reusability, extensibility, and testability of the system, alongside a guide on how to use the UI. • This includes extensions of the current back-end architecture as well as extensions in the front-end UI. • A richer API system for notifications that include metrics analysis",https://summerofcode.withgoogle.com/programs/2023/projects/zrPEE0Cg
Scala Center GSoC Proposal: Data Visualization,Danylo Ostapchenko,https://danielost.github.io/posts/gsoc23/,Noel Welsh,Scala Center,scala,"data visualization, 2D Graphics, Data Plotting","The Doodle library for compositional vector graphics can be further improved by adding support for coordinate planes, the grid, legend, labels and titles, including the x-axis label, y-axis label, and plot title, which will simplify graph analysis. With the support of my mentor and the community, I will implement the plotting functionality in Doodle, improving the ability to visualize, compare and explore data. Moreover, the improved plotting capabilities will make the presented data easier to understand and more accessible to a wide audience. The project itself can be divided into three separate deliverables: 1) Plotting API: it’s necessary to define a plotting API that will allow users to create various plots, customize them, and perform data transformations. The API should be flexible and extensible, allowing users to easily add new types of plots, customize the appearance and layout, and apply different data transformations. To achieve these goals, we will use the tagless final style and composition, which enables us to combine multiple interfaces. 2) Graph Adjustments Support: these features can help improve the clarity and usefulness of the plots and graphs we create. These features include axis limits, line width, marker style, transparency, color scheme, legends, annotations, axis scale, aspect ratio, etc. 3) Documentation: in addition to written documentation, we will provide visual examples and demos that are extremely helpful in illustrating how to use the API. Providing code snippets and sample plots will help users get started quickly and provide a foundation for more advanced usage.",https://summerofcode.withgoogle.com/programs/2023/projects/LmQEiuJv
Better Java 11 Support for Java Pathfinder,Daohan Qu,https://docs.google.com/document/d/1sTP9xfc-XRT2GTLsQoJYBv7CMogTIDS7yEqozEebtbg/edit?usp=sharing,"Cyrille Artho, Pavel Parizek, Soha Hussein",The JPF team,"java, Java Virtual Machine","software model checking, Java Virtual Machine, JDK 11","Java Pathfinder (JPF) is a Java virtual machine that can run compiled Java programs as well as model checking it. It is also an extensible software analysis framework for Java bytecode. As it has been created for about two decades, supporting new Java language features is of vital importance for its wide adoption. JPF community has taken steps to add Java 11 support, but there are still some unsolved issues. In this project, I plan to add better Java 11 support for JPF. This includes more comprehensive Java bytecode support, especially for invokedynamic, more JDK API support, and some bug fixes. It will fix all 13 failing tests JPF faces now on Java 11 and enable more programs to run on JPF.",https://summerofcode.withgoogle.com/programs/2023/projects/lwLp9Tuy
Turn All References Blue (TARB),darahaas15,https://archive.org/details/tarb-gsoc-2023-content-drift,Dr. Sawood Alam,Internet Archive,"python, apis, HTTP, sklearn","web, machine learning, mediawiki, Parsing","The ""Turn All References Blue"" (TARB) project at the Internet Archive aims to tackle the issue of content drift in Wikipedia hyperlinks. Content drift refers to the phenomenon where the content behind a URL changes over time, leading to a discrepancy between the original cited information and the current content. The project leverages machine learning models like BERT and BART to identify and flag such instances of content drift. It then suggests replacements for the content drifted URLs with stable references from the Wayback Machine, ensuring the reliability and integrity of Wikipedia citations.",https://summerofcode.withgoogle.com/programs/2023/projects/7YkLVuE5
Enhancements for Dockerfiles,Darshan Kumar,https://github.com/buildpacks/pack/pull/1791,Natalie Arellano,CNCF,"golang, docker, BuildPacks",cloud,Build out samples and workflows showing how to use Dockerfiles in harmony with a cloud native buildpacks platform. Need to update the pack implementation to be more performant by taking advantage of the available daemon and updating documentation and sample workflows to reflect the changes.,https://summerofcode.withgoogle.com/programs/2023/projects/OL9wVCop
Rust and GTK 4 Bustle Rewrite,Dave Patrick Caberto,https://seadve.github.io/blog/9-gsoc-2023-final-overview/,"Bilal Elmoussaoui, Maximiliano 🥑",GNOME Foundation,"rust, gtk, Dbus",visualization,"Bustle is a powerful graphical tool for analyzing D-Bus activities. The current implementation, while still functional, cannot take advantage of the latest developments in the platform and is less accessible to potential contributors and users. However, through a GTK 4 and Rust rewrite, the tool could take advantage of more ergonomic libraries such as zbus, gtk4-rs and LibPCAP bindings and access to newer APIs such as Libadwaita widgets and the ListView API. The project will begin on continuing the basic implementation. Then carrying on to porting from GDBus to zbus, implementing the diagram, improving the loading implementation, implementing recording, and adding multiple recordings and opened files handling. For future deliverables, the following can be implemented: pair of logs opener, statistics view, command line interface, and exporting to other formats.",https://summerofcode.withgoogle.com/programs/2023/projects/EfijCNWY
Arduino Flavor,David Andrawes,https://gist.github.com/dandrawes/03e73204d6280a3e1276e25efdc4c00f,"Dev Sebastian, Patrick And.",International Catrobat Association,"java, kotlin, jenkins, arduino, junit, espresso, Mockito","mobile development, Internet of Things (IoT), rapid prototyping","In the current version of the Android app Pocket Code, it is only possible to control some basic functions of an Arduino. Therefore, this project aims to create a new Arduino flavor with many more functionalities for controlling an Arduino. This opens many possibilities in the context of the Internet of Things (IoT) and allows the quick realization of own projects.",https://summerofcode.withgoogle.com/programs/2023/projects/cilc4yh5
kworkflow: Implementing lore.kernel.org interface,David de Barros Tadokoro,https://davidbtadokoro.github.io/posts/gsoc23-final-report/,"Siqueira, Melissa Wen, rubensgn, Paulo Meirelles, Magali",The Linux Foundation,"dialog, Bash Script","operating systems, linux kernel, lore.kernel.org, Bash script","In the context of the kworkflow project that aims to simplify the Linux kernel development workflow and provide a unified experience to kernel developers, the lore.kernel.org archives have enormous potential in terms of easing the interaction with Linux kernel-related public mailing lists. I propose to implement the integration of kworkflow with lore.kernel.org allowing users to have a complete patch consulting and reviewing routine using just the kworkflow tool. Secondarily, I aim to refine the 'kw mail' feature of the project that is responsible for sending patches to the public mailing lists. Deliverables for lore.kernel.org interface ('kw upstream-patches-ui' feature): 1) Implement an interface that is user-friendly, simple, and without major bugs; 2) Make the feature capable of downloading, building, and deploying patches and displaying the status of those actions to the user; 3) Allow users to reply to the patches in the public mailing lists with Reviewed-by, Tested-by, and inline reviews. Deliverables for 'kw mail' feature: 1) Update feature codestyle; 2) Fix known bugs; 3) Improve feature where possible.",https://summerofcode.withgoogle.com/programs/2023/projects/eqFrXfAz
Add a Print this component to O3,Deb,https://medium.com/@kalungi2k6/the-print-feature-google-summer-of-code-2023-project-final-report-a604c26db327,"Hadijah Kyampeire, Dennis Kigen",OpenMRS,react,web,"While the Open Medical Record System (OpenMRS)'s major objective is to store and retrieve electronic medical records in the developing world, in some areas this objective has been frustrated due to lack of a stable internet connection, tech-illetracy and rampant power outages in most parts of the developing world. A patient's medical history and treatment may be well documented but due to lack of internet, computers and electricity in the next facility, that patient may not be in position to receive the service due to lack of reference document hence breaking continuity of care among health care providers, its is against this background that the print feature was development. so that at any point in time, a patient and the service provider can have a hard copy of whichever document they want. how I plan to solve it; 1. have a list of areas where printing is required and add them to the configurations 2. Add the print button in the selected areas 3. write code for the print function using the react-to-print package 4. write tests",https://summerofcode.withgoogle.com/programs/2023/projects/y9jgifwW
Dataplane migration for Apache Kafka communications: Leveraging Java19’s Project Loom.,Debasish Biswas,https://gist.github.com/debasishbsws/5b32514a96c3c516d12e40b26ae019ea,"Ali Ok ., Christoph Stäbler, Pierangelo Di Pilato, Matthias Wessendorf",CNCF,"java, kubernetes, apache kafka","cloud, cloud-native","Overview: In the current scenario, the Knative Eventing Kafka Broker's data-plane communication with Apache Kafka for consuming and producing records is done via the Vert.x-Kafka-client library which is basically a wrapper for communications with Apache Kafka inside the Vert.x threading model. Objictive: This project idea aims to implement the Knative Kafka Broker data-plane communication with the native Apache-kafka-client library working on Java 19 and evaluate OpenJDK 19's Project Loom and leverage its virtual threads for efficient and concurrent communication with the Apache Kafka cluster.",https://summerofcode.withgoogle.com/programs/2023/projects/BHsUqzLn
Regolith Onboarding,Deepanshu Pratik,https://medium.com/@deepanshu.pratik/master-tiling-window-managers-with-this-tool-81fb657052e9,canihavesomecoffee,CCExtractor Development,"gtk, vala, meson, Debian, ninja","linux, Desktop Application Development","The Regolith onboarding project aims to create a desktop application that helps users learn keyboard shortcuts and workflows for i3 and sway window managers and popular Linux tools. The application will provide users with various workflows containing a sequence of key bindings to teach them how to use the keyboard for different tasks, such as navigation, launching applications, modifying windows, and session management. This will enable users to improve their efficiency and productivity by relying less on the mouse and embracing a keyboard-centric approach to working with Regolith.",https://summerofcode.withgoogle.com/programs/2023/projects/eP0w9NoG
Demonstrating 2D Arrangements Embedded on the Sphere,Deniz Diktas,https://docs.google.com/document/d/1Wwj3dGjTDG_1wiOohYyZeLDyN-n8dQqojx31jffyl0E/edit,Efi Fogel,CGAL Project,"opengl, git, qt5, c++14","computational geometry, 2D arrangements, 3D-Graphics","Abstract: Recently the ""2D Arrangement"" package of CGAL has been enhanced with the support of 2D arrangement of geodesic arcs embedded on the sphere. Demonstrating such an arrangement graphically requires rendering in three dimensions, a.k.a. 3D graphics. Implementation Plan: The project will proceed in 2 main-stages. The output of the second stage will be a stand-alone program with its source code and the corresponding documentation. First stage: Examining the 2D arrangements & 3D polyhedron demos and also Efi Fogel’s initial implementation which has its own set of dependencies. Second stage: Implementation of the 3D arrangements on the sphere program. Here, I will incrementally port Efi Fogel’s program to a stand-alone program that solely depends on CGAL and QT5.",https://summerofcode.withgoogle.com/programs/2023/projects/8C3gdjXL
Interactive MLIR query tool to make exploring the IR easier,Devajith Valaparambil Sreeramaswamy,https://devajith.com/blog/gsoc-2023,Jacques Pienaar,LLVM Compiler Infrastructure,"c++, mlir","cli, Repl, MLIR, Query Tool","This project aims to create an interactive query language for MLIR that will allow developers to dynamically query the MLIR IR. The tool will provide a REPL or command-line interface for users to query various properties of MLIR code. The goal is to create a tool similar to clang-query, with autocomplete and other features. The project's objective is to make it easier understand the MLIR IR representation, implement a REPL for executing queries over MLIR IR, and deliver a standalone tool for interactively exploring IR with common matchers. A stretch goal is to enable extracting parts of the IR matched by queries into self-contained IR snippets.",https://summerofcode.withgoogle.com/programs/2023/projects/bdePp9VD
Making Teuthology Friendly,Devansh Singh,https://gist.github.com/Devansh3712/1ef38690b94141c27437a3d1363e76c6,Kamoltat Sirivadhna,Ceph,"python, javascript, html, css, FastAPI","api, ui, ux","Teuthology commands, in general, require a bit of a learning curve and usually requires someone who's a veteran with teuthology to help out, this can interrupt the productivity of the engineering team. The complexity of teuthology can lead to new users scheduling bad runs that can hold up the queue and block other jobs. By creating an API and integrating it with Pulpito, developers can directly schedule or kill jobs without SSH-ing into teuthology through the website. The API will have endpoints based on the teuthology modules, and widgets for login, logout, scheduling and killing job(s) will be added to Pulpito.",https://summerofcode.withgoogle.com/programs/2023/projects/qaRHjXNC
Mobile/Responsive Design Implementation of p5.js Web Editor.,dewanshDT,https://dewanshthakur.hashnode.dev/google-summer-of-code-wrap-up,"Shuju Lin, Linda Paiste",Processing Foundation,"javascript, react, node.js, webpack, ui/ux","web, javascript, p5.js","This project focuses on the mobile responsive views implementation of the web editor. The p5 community has over a million sketches and the p5 web editor is one of the main tools used by a lot of creators and also welcomes many newcomers. The current implementation of the web editor doesn't work well on small-screen devices like mobile phones and tablets, having able to view, share, edit, or show the code to someone on their mobile devices when they are away from other main machines would highly enhance the accessibility of the p5 web editor. This project focuses on making the editor work on mobile devices which will help the user view, share, and edit the code of their projects on the go.",https://summerofcode.withgoogle.com/programs/2023/projects/kJWpttJC
CRS #3: WAF Performance Testing Framework,Dexter Chang,https://github.com/coreruleset/rules-performance-tests,"Christian Folini, fzipitria",OWASP Foundation,"docker, Python3","security, testing, WAF","Performance evaluation is one of the concerns about using ModSecurity and Core Rule Sets. More specifically, people take different approaches to examine the performance, such as stability tests (e.g., the peak of I/O, speed of re-connection) and capacity tests (e.g., use of disks). However, individuals often miss measuring before/after using the Firewall. Secondly, although there are many open-source utilities (e.g., Apache JMeter, httperf), no specific tool is designed to evaluate performance affected by a firewall. To address the issue, I suggest creating a CLI tool to benchmark the performance with CRS. A list of deliverables includes: 1) Define a framework for testing performance for a generic WAF. 2) Research existing utilities for performance testing on WAF. 3) Create a CLI tool to achieve the framework and define different types of testing performed by the tool. 4) Implement different types of performance testing. 5) Integrate the CLI tool with pipelines (e.g., GitHub pipeline). 6) Based on the existing Docker images, perform different evaluations with different configurations/versions. 7) Documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/jdv2MaJR
CRIU: Add support for memfd_secret file descriptors,Dhanuka Warusadura,https://warusadura.github.io/gsoc23-final-report.html,"rppt, Aleksandr Mikhalitsyn",CRIU,"c, python, linux","operating systems, linux, containers, Checkpoint/Restore","CRIU can checkpoint/restore a trivial hello_word process to running Linux containers. However, with the current implementation of CRIU, it can't checkpoint/restore a process that has a memfd_secret file descriptor(s) opened. So, the purpose of the proposed project is to add new functionality to successfully checkpoint/restore any process that has memfd_secret file descriptor(s) opened.",https://summerofcode.withgoogle.com/programs/2023/projects/uEaniQVU
Improving Compile Times,Dhruv Chawla (0xdc03),https://docs.google.com/document/d/1gsOYrFOZlJ-RCHsb-MZzZyIYrGm9Esh4unjTioo58L4/edit?usp=sharing,Nikita Popov,LLVM Compiler Infrastructure,"llvm, c++","compilers, c++, optimization, llvm","This project aims to reduce the amount of time that LLVM spend on compiling code by focusing on hotspots in the code identified by profiling workloads both with and without optimization passes enabled. The main possibilities for improvements are identified in SelectionDAGISel (specifically DAGCombine), InstCombinePass and InlinerPass. Aside from these, the analysis passes and some machine passes are also identified as good opportunities for optimization. At the end of this project, there will be a noticeable improvement in compile times for the test cases considered and an overall improvement (if small) in general compile times for all inputs. Fatal cases from the LLVM GitHub issues page where compile time explosions occur will also be considered to fix edge cases where super-linearity of the optimizations come into play or where an extreme amount of input causes outliers in the compile time share of certain passes.",https://summerofcode.withgoogle.com/programs/2023/projects/JdqGUwNq
Semantic search in video datasets,Dhruv Kunjadiya,https://github.com/Dhruv454000/Semantic-search-in-video-datasets,Raúl Sánchez,Red Hen Lab,"python, vue.js, FastAPI, Weaviate Vector Database","natural language processing, Semantic Search, AI Models","I propose to create a semantic multimodal search engine for collections of transcribed and aligned videos using state-of-the-art artificial intelligence models of different types, including NLP (Large Language Models) for text generation and capturing the semantics of transcriptions, as well as image description models to understand what is being seen in the video. Only focusing on the transcribed text does not help much, considering the context, what is being shown in the video will be helpful. The search engine will list down the most closest matches to the user query containing the metadata like link to the video, video-id, timestamp, text.",https://summerofcode.withgoogle.com/programs/2023/projects/2p2PgKDn
GradSLAM -2: Multi-backend framework support of GradSLAM in Ivy by implementing missing PyTorch APIs,Dhruv Rajendra Patel,https://dhruv2012.github.io/gsoc23/,"Aarsh Chaube, AnnaTz, RickSanchezStoic",Ivy (lets-unify.ai),"python, tensorflow, deep learning, numpy, pytorch, Jax","robotics, deep learning, slam","Multi-backend framework support of GradSLAM in Ivy by implementing missing PyTorch APIs: Brief Implementation Plan: 1.) Developing support of a basic low-level API of GradSLAM (which is independent of other GradSLAM APIs) in Ivy frontend and backend (by implementing missing PyTorch APIs), along with its corresponding ivy tests. E.g., gradslam.geometry 2.) Follow a similar implementation strategy for other independent APIs (gradslam.config) or high-level APIs dependent on gradslam.geometry (Eg: gradslam.datasets, gradslam.structures, gradslam.slam, gradslam.odometry) 3.) Develop test script same as in official gradslam repo for all APIs. 4.) Create a tutorial (a jupyter notebook similar to official gradslam notebooks as here) for running GradSLAM using Ivy. 5.) Lastly, showcase better runtime performance of GradSLAM using JAX as the backend framework. Deliverables: -> Multi-backend framework (PyTorch, NumPy, JAX, Tensorflow) support for GradSLAM",https://summerofcode.withgoogle.com/programs/2023/projects/pUV5O2Hj
iOS versions of Android components,Dhruv Shrivastava,https://docs.google.com/document/d/1FFm5hi8xJEcV05UpvbtjeD7LuzUfHJFfTI_L_vI8GP8/edit?usp=sharing,"Evan Patton, Diego Barreiro",MIT App Inventor,swift,iOS development,"Develop iOS versions of Android components for MIT App Inventor Implement the File component under Storage and ListView under User Interface for iOS. Implement the UI (TabLayout, Snackbar, CircularProgress, and LinearProgressbar components) components for iOS. Implement several sensor components for sensors supported by iOS Implement Biometric Authentication feature. Develop an iOS version of the Cardview component for Kodular.",https://summerofcode.withgoogle.com/programs/2023/projects/aeUHF4rI
Extraction of Gesture Features,Dhruv Tyagi,https://medium.com/@Dhruv_Tyagi/gsoc-2023-red-hen-lab-feaa572f2cdc,"Peter Uhrig, Swadesh",Red Hen Lab,"python, CNN, Openpose, Neural Networks, LSTM","machine learning, feature extraction, Pose Estimation","The way humans interact with each other occurs in multimodality. We not only articulate words but also, show them. Expressing different concepts such as time, place, and emotion comes with speech and some movements called body gestures. The aim of this project is to detect these commonly occurring phrase and gesture combinations to get meaningful patterns and insights. For this, I propose a multi-modal multi-phase pipeline that captures different patterns of body gestures and speech phrases aligned with an articulated time. The three-stage pipeline begins with pose feature extraction in which both supervised and unsupervised approaches shall be incorporated to classify and cluster various gesture classes. In the next stage phrase features are extracted. These extracted features are then passed through the next stage. This stage will produce a synchronized dataset by aligning extracted features in time by applying late fusion. Lastly, Apriori Algorithm is applied to identify the frequent phrase and gesture combinations. Further, the project can be merged into production in a Red Hen pipeline.",https://summerofcode.withgoogle.com/programs/2023/projects/yWTZ53Vp
Survey 6 (Data Aggregator),Dhruvi Doshi,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/04-Dhruvi-Doshi-Survey-6.md,"Udesh Kumarasinghe, RavinduDeSilva, Isuru Vishwanath, Kenneth Manjula",SCoRe Lab,"spark, grpc, airflow, Debian, RSync, Parquet","ipv6, Cyber Security Research","Ipv6 is the internet's future, and it necessitated a more scalable survey tool to comprehend how routing, DNS function and other traffic. The purpose of this project is to create an IPv6 listener that will passively collect IPv6 traffic data as a passive data collection tool for cyber security research. Survey6 tool has three main components: Probe, C&C Server & Data Aggregator. This year's aim is to design and implement a data aggregate component. It aims to design a big data scale async and robust data uploading pipeline.",https://summerofcode.withgoogle.com/programs/2023/projects/LdlUOWJd
Interactive graphics with ‘You Draw It’,Dillon Murphy,https://gist.github.com/DillonMurphy04/5518dfdafe74561352fa53ad90594410,"Heike Hofmann, Susan Vanderplas, Emily Robinson",R project for statistical computing,"javascript, r","Interactive Graphics, Data Visualizations, Regression Analysis","I plan to create an R package that extends and adds additional functionality to the ""You Draw It"" tool. To achieve my goal I will use an iterative workflow, and prioritize tasks based on size and importance. First, in June, I will package the ""You Draw It"" tool for flexible usage with any real or simulated one-to-one data set. I will slowly implement features, create tests, and write documentation for each feature. In July, my next task will be to add a feature to the ""youdrawit"" tool that will automatically set up scales based on the range of the provided data. This function will analyze the data and determine minimum and maximum values for each axis to set up the axes' scales. In August, to improve the user experience of the ""You Draw It"" tool, I will add tool tips to the shiny applet that will explain tasks and help educate users on using the tool. If I can complete these tasks during the 3-month timeline and have enough time, I will move on to the two additional optional tasks. Then, I will finalize all vignettes, documentation, and tests.",https://summerofcode.withgoogle.com/programs/2023/projects/x23wiE1I
Improve and maintain 12 Sugar activities,Dimitrios Mylonas,https://github.com/Dimi20cen/gsoc-sugar-contributions,"Chihurumnaya Ibiam, Sourabha G",Sugar Labs,"pygame, gdk, Telepathy, PyGobject, Presence",education,"This project aims to enhance a variety of educational activities by implementing improvements and introducing new features. The proposed changes cover a range of activities, including Cell Game, Turtleart-activity, Chat-activity, 2 Cars-activity, Chess activity, TextDungeon, Browse-activity, Flappy/Flappy-birds, Jukebox-activity, Lemonade Stand, Calculate activity, and Solar System activity. The improvements involve addressing existing issues, refining UI elements, adding support for different input methods, and providing more engaging content. Some of the planned solutions include adding in-game tutorials, adapting layouts for various window sizes, enabling collaboration features, integrating more captivating stories, and introducing educational elements to existing games. Upon acceptance of this proposal, the deliverables will include the successful implementation of these enhancements across the aforementioned activities, resulting in a more engaging, accessible, and educational experience for users.",https://summerofcode.withgoogle.com/programs/2023/projects/0itGSuKZ
Development of a Robotic Education Platform for the DIY robot kit for educators,Dimitris Charitos,https://gist.github.com/Niroth36/46664dee286e5ea223290f2b143bfcd5,Christos Chronis,Open Technologies Alliance - GFOSS,"python, javascript, react, flask, celery, Raspberry, Monaco","web, robotics, cloud, micro-services","This proposal aims to improve the scalability and maintainability of Fossbot robot software project by splitting the front-end and the back-end into separate services, with the long-term goal of transforming the application into a microservices-based architecture. The proposal includes rewriting the front-end in React, optimizing the back-end using Flask and Celery, implementing websockets for real-time communication, incorporating Monaco as an online code editor, and dockerizing the platform for consistent and reliable deployment. The proposal includes a commitment to continuous bug fixing and code improvement throughout the project's lifespan. The proposed deliverables include a modular and scalable platform with improved user experience and functionality.",https://summerofcode.withgoogle.com/programs/2023/projects/HNtIlEkU
Convert Writer's Java UNO API Tests to C++,Dipam Turkar,https://gerrit.libreoffice.org/q/anfanite396+tests+-status:abandoned,"Tomaž Vajngerl, Xisco",LibreOffice,"java, c++, CppUnit","software development, unit testing, uno api","The objective of this project is to convert Writer’s Java UNO API tests to C++. Unit testing is a software testing method by which individual units of source code are tested to determine whether they are fit for use. However, the unit tests for Writer’s UNO API tests are still implemented in Java, making it hard to debug them. LibreOffice has a long term plan to move them to C++. I intend to complete this task as my project for GSoC 2023.",https://summerofcode.withgoogle.com/programs/2023/projects/co1Noz8V
Exploring the underlying symmetries in particle physics with equivariant neural networks,Diptarko Choudhury,https://medium.com/@cdiptarko/invariant-nets-and-particle-showers-b6ac21275d86,"ML4SCI, Bhim Bam, Colin Crovella, Ruchi Chudasama",Machine Learning for Science (ML4SCI),"python, cuda, tensorflow, pytorch","machine learning, deep learning, particle physics, Equivariant Neural Network, Symmetry","Symmetry is one of the most beautiful and interesting phenomena in physics. Particle Physics is dominated by Lorentz symmetry. It is seen that Equivariant networks are more expressive and sample efficient than conventional Neural Networks. The project aims to build a Lorentz Equivariant Neural network to analyse particle collision data obtained from CMS Open Data. The project also aims to compare the results of the Lorentz Equivariant model with other Equivariant models(symmetry groups) and conventional CNNs and ViTs in terms of performance, speed and sample efficiency.",https://summerofcode.withgoogle.com/programs/2023/projects/OZd31ChO
Introduce Captcha to Livechat Widget,Disha Bhardwaj,https://gist.github.com/bhardwajdisha/64e2fb41d9e1300a94fc8561df46149c,"Kevin Aleman, Murtaza Patrawala, Renato Becker",rocket.chat,"javascript, react",Web-development,"RocketChat is a widely used open-source communication platform that is unfortunately susceptible to spam messages in its live chat widget. To address this issue, it is essential to implement a CAPTCHA solution in the live chat widget. The objective of this project is to integrate a customizable CAPTCHA mechanism in the live chat feature of RocketChat to prevent spam messages from being sent. The proposed solution involves offering complete customization options to the admin, allowing them to select the captcha service that best fits their needs. This will be achieved by integrating three different CAPTCHA solutions: Cloudflare captcha, Google reCAPTCHA v2, and v3. The deliverables of this project include the integration of captcha widgets using Cloudflare and Google reCAPTCHA V2 and V3 in the Rocket Chat live chat feature, customizability options for the admin to select the captcha service according to their requirements, a comprehensive testing suite to ensure that the CAPTCHA is working correctly, and a user guide to help users understand how to use the new CAPTCHA feature in the live chat widget.",https://summerofcode.withgoogle.com/programs/2023/projects/rLmrE2Ee
Optimization of the computations of HOIs and integration in the Frites python package,Dishie,https://dishie2498.github.io/gsoc/,"Daniele Marinazzo, Etienne Combrisson",INCF,"python, numpy, Jax","data science, neuroscience, parallel computing, higher order interactions, optmizations","Activity patterns of neurons have so far been examined both singly and in pairs. Higher order interactions (HOIs), or non-pairwise interactions between neurons, are being studied in an effort to improve analysis . The type and quantity of information stored in groups (pairs or multiplets) in the brain is revealed by information about organisational structure (o-info). Various methods to optimise the o-info implementations in NumPy and Jax, as well as techniques for plotting the HOIs and integrating them with Frites will be included.",https://summerofcode.withgoogle.com/programs/2023/projects/z6hGpvLS
Borg Collective: Add beginner-friendly features and enhance the capabilities of Vorta & Borgmatic.,Divi,https://github.com/diivi/GSoC23-PythonSoftwareFoundation,"Manuel Riel, Julian Hofer, Dan Helfman",Python Software Foundation,"python, mysql, postgresql, mongodb, qt","databases, linux, desktop application, cli, File Backups","Borg Collective is a well-known organization that offers a range of Python-based backup tools, including Borg, Borgmatic, and Vorta. Borg is a file backup tool that performs tasks like compression, encryption, authentication, and data deduplication. Vorta is a desktop GUI for Borg, and Borgmatic is a CLI wrapper around it. With this project, I aim to improve Vorta by adding some essential features that users have frequently requested, enhancing its user experience, making it easier for beginners to use, and designing and developing new interfaces. As for Borgmatic, I aim to expand its already powerful capabilities, particularly in the areas of database backups and restores. I also want to help decrease the number of unresolved issues in the Borgmatic repository and work closely with project maintainers and users to incorporate more features into the project.",https://summerofcode.withgoogle.com/programs/2023/projects/0i8Q6ZrE
CatAI : LLM-Based AI Programming Support for Catrobat Applications,Divyangi Raghav,https://gist.github.com/divz-codess/c19de227749935a7eb50793456b9f04d,"Wolfgang Slany, Michael Flucher, Bernhard Prattes",International Catrobat Association,"flutter, ai, dart",artificial intelligence,"The aim of this project is to add support for an LLM (large language model) based on tools such as GPT-4 to support AI-based programming support for our users. This support could range from proposing code from text prompts, help in correcting bugs or other issues, finding a good architecture or meaningful names, writing Catrobat language tests for one's code, proposing extensions, proposing project ideas, explaining downloaded code, providing translations of variable or message names etc from downloaded projects of other users, proposing image and sound resources based on the context and text prompts, explaining basic or more advanced concepts needed to realize projects, e.g., simple concepts such as variables and loops, or more complex ones such as software design patterns or testing strategies. Overall, the proposed project aims to provide a more comprehensive and tailored solution for Catrobat users, with a broader range of features and a more user-friendly interface compared to existing products.",https://summerofcode.withgoogle.com/programs/2023/projects/Z2ZWk7l2
Swift native implementation of a Memcached Client using SwiftNIO for the networking stack.,dkz,https://forums.swift.org/t/gsoc-2023-swift-memcache-gsoc-project-kickoff/64932,FranzBusch,Swift,"swift, SwiftNIO",Memcached,"I will be developing a native Swift Memcached client using SwiftNIO to address the need for an efficient and user-friendly caching solution in Swift based applications. The goal is to provide a high performance client that integrates seamlessly with existing Swift ecosystems, simplifying the process of sending commands and receiving responses from memcached servers. Our focus is on implementing the Memcached meta protocol, request encoding, response decoding, and request pipelining, while the non-goals is to cover every memcached feature or command. This project aims to benefit developers by offering an asynchronous-first Swift API for essential memcached operations, ultimately enhancing the caching capabilities of their applications.",https://summerofcode.withgoogle.com/programs/2023/projects/wdnBvz3G
TileLink Uncached Heavyweight (TL-UH) implementation in Azadi-SoC,Doaa Magdy,https://medium.com/@doaa.magdy2001/cf7eb9f18030,"Zeeshan Rafique., NAMEER IQBAL ANSARI.",Micro Electronics Research Lab - UITU,"systemverilog, Simulation tools","digital design, Bus Protocol","In this proposal, I am going to introduce the steps needed to upgrade Tilelink Uncached Lightweight (TL-UL) bus protocol to TL-UH (Tilelink Uncached Heavyweight). The main difference between TL-UL and TL-UH is that 3 additional types of operations are added in TL-UH that cause it to be more efficient. Those operations briefly are the hint operations and atomic operations.",https://summerofcode.withgoogle.com/programs/2023/projects/3TI8MLxs
Participatory design enhancements to NeoRoo app,Donya Esawi,https://gitlab.com/DoniaEsawi/lh-mhbs-neoroo,"Dr. Sherri Bucher, Khushboo Chandnani",LibreHealth,"android, flutter, dart, frontend, Figma, UI, DHIS2","healthcare, Flutter, Mobile App development","The NeoWarm swaddling device and NeoRoo mobile app have been developed to support Kangaroo Mother Care/Skin-to-Skin care for premature newborns and automatically collect vital signs information. The aim is to overcome the barriers to implementing KMC/STS and improve care for premature babies. The technology includes features such as automated monitoring of vital signs, alerts for abnormal readings, and shared goal-setting for education and discharge planning. To enhance the usability of the NeoRoo app, a participatory design study with A/B prototypes is being conducted, to improve the app's UI based on feedback. My rule is to implement the enhanced UI in Flutter and integrate the new UI with the DHIS2 backend server to ensure that the UI interacts seamlessly with the underlying logic and functionality provided by this server.",https://summerofcode.withgoogle.com/programs/2023/projects/GerzaD2s
Automate testing of stylus touch pen,Douglas Hou Nam Chiang,https://docs.google.com/document/d/1kbG2jdawmTQ2jOYyWvtYBYZ4nSfgnsdMcQP8bp2o990/edit?usp=sharing,"Pallavi, banerjta",Chromium,"python, go","testing, robotics, ChromeOS","This project aims to automate the testing of stylus touch pens with Chromebook using a human motion robot (HMR). Currently, stylus pens or any other touchpad-related test cases take much longer time and are more expensive when going through lab testing. Developing and conducting these tests via a human motion robot will save half the cost and accelerate the testing time from 13 hours to 15 minutes. The objectives of this project include evaluating and assessing the pass/fail of stylus test cases, developing automation scripts for onboarding the HMR, and implementing the HMR’s testing lifecycle to run and evaluate test results. A three-step evaluation procedure has been proposed, and the onboarding automation scripts and the HMR lifecycle have been implemented. Evaluation results show successful evaluations with directions on future work aiming to improve and scale up the proposed approach.",https://summerofcode.withgoogle.com/programs/2023/projects/mxPS95Ya
Machine Learning Training Assistant,Dung Do Tien,https://github.com/BryanGsep/ML-Training-Assistant-Final-Report,NAN LI,caMicroscope,javascript,"web, machine learning","To improve pathology data collection, caMicroscope has added specific tools for assisting with annotations and classifications. However, these tools require a pretrained model and the training workflow is difficult to use. The machine learning training assistant project aims to consolidate and improve the training workflow while also enhancing the user experience. This project may involve adding a microservice to enable training on a server and runtime analysis to determine the most useful information at a given time.",https://summerofcode.withgoogle.com/programs/2023/projects/jV0ik9bp
LambdaEase,Durgesh Maurya,https://github.com/metacall/gsoc-2023/blob/main/submissions/gpt-deploy.md,"Gil Arasa Verge, Jose",MetaCall,"python, node.js, typescript, reactjs, IndexedDB, ChatGPT","web development, ai, editor, Assistance","LambdaEase is an innovative tool designed to automate the process of writing and deploying functions in any programming language. This eliminates the need for manual coding and debugging, making it a game-changer for developers. With LambdaEase, users can generate optimized and well-written deployable functions simply by making a request in natural language. The tool uses chatGPT with customized features to extract essential details such as function name, parameter names, types, and expected return types. It can also provide documentation for the generated function, making it easy to understand and use. Users can run the generated code in memory before deploying it, ensuring the accuracy and quality of the output. LambdaEase is built using Typescript, React.js, and Python, making it a robust and reliable tool. Its compatibility with any other language makes it versatile and accessible for any developer. The success of LambdaEase depends on the accuracy and reliability of chatGPT, which is continuously evolving and improving. With LambdaEase, developers can expect to deploy complex business logic with minimal manual coding, making it a powerful tool in any development environment.",https://summerofcode.withgoogle.com/programs/2023/projects/jFcgf9UX
GNU Mailman: Improved User Experience,Durlabh Pathak,https://gist.github.com/Error838/fc36ec9a0ce8e05a0b8d998644fd77c7,"Stephen J Turnbull, Danil Smirnov",Python Software Foundation,"python, html, css, js","web, ui",The objective of this proposal is to enhance the user experience of Mailman 3 by introducing two new features - systemwide user defaults and an improved UI for subscription management. These features will enable site admins to manage mailing lists more effectively and improve the subscription management UI for users.,https://summerofcode.withgoogle.com/programs/2023/projects/6aziIJ85
REST API improvements,DUSHIMIMANA Samuel,https://github.com/dushimsam/GSoC-23,"Gaurav Mishra, Shaheem Azmal M MD, Vivek Kumar, Kaushlendra, Rohit_Pandey",FOSSology,"postgresql, docker, php, rest api, Slim framework, Unit Test",web,"Fossology is focusing on the development of a new UI framework, which requires adequate support from REST APIs. However, the current state of available APIs in the Slim framework is insufficient to meet the needs of the project. There's still a need to enhance the existing APIs and add new ones to ensure sufficient support for the development of the new UI framework. The solution involves fixing the issues with the current REST APIs and improving the parameters and result object of the existing REST APIs. This will be done by going through each module and making sure that the required API for each component is available, tested and exposed for the frontend's consumption.",https://summerofcode.withgoogle.com/programs/2023/projects/lGWKqBe6
OSRM Python Bindings,DW Chung,https://gist.github.com/whytro/6af6cade4b1a5c7cbb11ee70fb16cf55,"Nils Nolde, Siarhei Fedartsou",OpenStreetMap,"python, c++",routing,"Develop Python bindings to the OSRM C++ framework using pybind11, with the end goal of publishing the package to PyPI. This would allow OSRM to function as a Python library, as well as increase ease of use via the existence of PyPI packages. The main deliverable would include a functioning Python library via binding to the C++ framework - and published on PyPI.",https://summerofcode.withgoogle.com/programs/2023/projects/PiLUxU6Z
Project 5: Implementation of parallel analysis in MDAnalysis,Egor Marin,https://marinegor.github.io/posts/2023/06/gsoc-summary,"Oliver Beckstein, Richard Gowers, RMeli, yuxuanzhuang, Ian Kenney",MDAnalysis,"python, dask","molecular dynamics, Parallel Programming, hpc computing","The proposal introduces parallel backend based on `dask` for MDAnalysis package. Potentially, it will allow researchers to run analysis of the molecular dynamics trajectories much faster, depending on their access to HPC facilities, hence increasing the speed of obtaining valuable insights from large-scale molecular simulations. Briefly, the proposal aims to re-write protocol for `MDAnalysis.AnalysisBase.run()` method to use a scheduler-based approach. This is supposed to be done with gradually increasing complexity, covering each steps with respective tests to ensure backward compatibility: - simply re-write the protocol without adding additional complexity such as multiple processes - add multiple cores for a single node At this point, a mid-project checkpoint is set. - introduce cluster support that allows user to run analysis in an HPC environment with a `dask` backend - (optional) add tests for subclasses of the base class, and mark those that don't support such parallelization - (optional) add example jupyter notebook showing that a large-scale molecular dynamics trajectory can be analyzed in a parallel fashion much faster than before",https://summerofcode.withgoogle.com/programs/2023/projects/cOTjpLid
Tokenization for spaceless orthographies in Japanese,Eiji Miyamoto,https://docs.google.com/document/d/1yxQH6hk-_fjIM9U0fx14OcezMwBUcIlM2WC-AM8O5Y8/edit?usp=sharing,Kevin Brubeck Unhammer,Apertium,"python, c++, xml","machine learning, nlp","Investigating the suitable tokenizer for east/south Asian languages which usually do not use spaces and implementing it. Besides, improving Japanese-related files.",https://summerofcode.withgoogle.com/programs/2023/projects/dkiuHPRc
Kubebuilder phase 2 plugin,Eileen Yu,https://github.com/Eileen-Yu/Eileen-Yu/blob/main/stories/Empowering%20Kubebuilder%3A%20My%20GSoC%202023%20Journey%20with%20Phase%202%20Plugin.md,"Rashmi Gottipati, Camila Macedo, Bryce Palmer",CNCF,"go, git, kubernetes, typescript, ci/cd, Ginkgo",cloud,"The introduction of external plugin extends the functionality of the Kubebuilder CLI tool by allowing users to create and use custom plugins. These plugins can be written in any programming language, as long as they implement the interface specifications to interact with Kubebuilder. This proposal aims to provide best practices based on tutorials, testing and documentation. It also suggests the kube-state-metrics plugin as a sample project, which would scaffold the configuration for KSM to load and populate metrics for CR/CRD. The overall efforts are attempted to guide Kubernetes developers to learn how to write, install, and use their own Kubebuilder plugins.",https://summerofcode.withgoogle.com/programs/2023/projects/N5cWUVl7
Rewrite the base parts of lib_ccx to Rust,Elbert Ronnie,https://docs.google.com/document/d/1_dYTb5T6DhPw9XRAf4f1gekfLtfjVK8yJXjBFl84PkI/edit?usp=sharing,"Carlos Fernandez Sanz, Punit Lodha",CCExtractor Development,"c, rust","video, Subtitle","Currently, the entire lib_ccx library is written in C with only some parts in Rust. Since using C is incredibly difficult to get right, the entire library can be rewritten in a modern programming language like Rust. This project aims to convert a small portion of the library which has the least dependencies, to Rust.",https://summerofcode.withgoogle.com/programs/2023/projects/SdPnVLaq
"Creating a deployable package for Mifos/Fineract, Payment Hub EE, and Mojaloop",Elijah Okello,https://elijah-gsoc.gitbook.io/mojafos/project/final-submission,"Courage Angeh, tdaly61",The Mifos Initiative,"java, make, docker, fineract, mojaloop, Payment Hub EE","devops, infrastructure, helm, terraform","The goal of this project is to develop a cli-based software deployer that will allow anyone to quickly spin up a payment stack consisting of Fineract and Mojaloop with Payment Hub EE as the middlewear. This will allow for easy testing by potential adopters. It will serve as a proof of concept for what kind of transaction use cases can be achieved using Mojaloop and Fineract connected via Payment Hub EE. I will collaboratively develop a deployment script that will adapt the already existing deployment methods for the Fineract, Mojaloop and Payment Hub EE and fuse them into one seamless deployment workflow",https://summerofcode.withgoogle.com/programs/2023/projects/oQk6Gmup
Riotpot: improving the IoT/OT honeypot,Elisa Tsai,https://docs.google.com/document/d/1nVafocmiVmYq0ZqdqdOt21mzWKK_QBU_YvVEl1PBgRo/edit?usp=sharing,"Shreyas Srinivasa, Manolis",The Honeynet Project,golang,"security, iot, honeypots, Traffic Analysis","I plan to enhance the RIoTPot by adding new emulated protocols (HTTPS, SFTP, SNMP). I also plan to increase RIoTPot's ability to evade being detected by tools like Nmap by adding high interaction support. I will implement reverse proxies in the middleware to route the requests to corresponding dockers that contains libraries used by real-life IoT devices (such as Apache httpd). The protocols with high interaction support include SSH, TELNET, HTTPS and SFTP. My timeline for these improvements is as follows: by June, I plan to add low-interaction protocols. In July, I will implement proxy routing for container traffic. From July to August, I will integrate high-interaction protocols and write documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/vvOSjyxu
mitmproxy - transparent mode on Linux and OSx in Rust,Emanuele Micheletti,https://www-test.mitmproxy.org/posts/proxy-macos-applications/,"Maximilian Hils, Thomas Kriechbaumer",The Honeynet Project,"python, rust","linux, network, system programming, Proxy, mitmproxy","The problem to solve is the implementation of a truly transparent mode on mitmproxy both in OSx and Linux (Issue #1261 unsolved since 2016). I plan to adapt existing Rust API `start_os_proxy()` and `stop_os_proxy()`, that currently works only on Windows (trough packet_sources/windows.rs), to MacOS and Linux creating new crates `osx.rs` and `linux.rs` that will use properly osx-specific APIs. In addition, I will also adapt the existing `--mode osproxy[:pid or executable name] `command-line option to allow users to specify a PID or executable name for the process to be intercepted by mitmproxy. There are two possible approaches that can be taken: 1. The first is to use packet filter (pf) for macOS, initially trying to swallow all traffic coming from the same machine that is launching packet filter itself. The second step in this approach will be to use some gimmick to figure out which packets are actually coming from mitmproxy and filter them out to avoid loops, a possible solution for this could be to use nettop, launching it as a command directly from rust, the solution is not definitive and possible alternatives should be explored to understand the privilege issue as well. 2. A second approach is to use NEAppProxyProvider: an Apple proprietary framework that extends the functionality of the iOS and MacOS network stack. With NEAPP we can implement custom rules for filtering, routing, and modifying network traffic based on a variety of criteria, such as the app, the network protocol, the destination address, or the user identity. As it is a proprietary framework, we need to develop in Swift or objective-C and then transmit the information to the main mitmproxy stack. How other proxies or VPN actually work: - WireGuard: wireguard has a apple version written in Swift, the adopted approach is the second one, it uses Apple Network Interfaces [ source ] - Squid: the same problem is currently unsolved - TinyProxy: it uses POSIX and no https transparent proxy",https://summerofcode.withgoogle.com/programs/2023/projects/yI8cXbyg
HTTP Server Implementation,Emna Rekik,https://gist.github.com/Emna-Rekik/658bcd3efabc6961d48f800d58fe9161,"Robert Lubos, C. Friedt",The Linux Foundation,"json, qemu, rest api, kconfig, c programming, HTTP, Zephyr, POSIX APIs, ZTest Framework, CRiMe","embedded systems, http, rtos, zephyr","This project is proposed because of the need for a fully-integrated HTTP server in Zephyr that can replace the deprecated CivetWeb module. The proposed solution is to prototype a basic HTTP 2.0 server using POSIX APIs and then port it to Zephyr. The server will take advantage of Zephyr's existing building blocks, including the ZTest Framework, mbedTLS libraries, Kconfig ... The project's deliverables include a basic HTTP server, porting the server to Zephyr, and creating a Test Plan to demonstrate mandatory features such as REST API, TLS, and Compressed Resources in Memory (CRiMe). Additionally, we will demonstrate HTTP server functionality with one of Zephyr's supported boards and Qemu.",https://summerofcode.withgoogle.com/programs/2023/projects/2R4TPIET
GCC static analyzer plugin for CPython extension modules,Eric Feng,https://gist.github.com/efric/9faa9cb19fe829b97a54d5c7eabf5e72,David Malcolm,GNU Compiler Collection (GCC),"c++, gcc, CPYTHON","compilers, programming languages, Static analysis","One pertinent use case of the gcc-python plugin was to provide the infrastructure for cpychecker, a static analysis tool designed for CPython extension modules. The primary objective of cpychecker was to assist programmers in identifying common coding errors in their extensions, which, in turn, could lead to difficult-to-find bugs in their systems. However, the gcc-python-plugin has suffered from bitrot over the years, and as a result, cpychecker ceased functioning several GCC releases ago. The goal of this project is to port the functionalities of cpychecker to a -fanalyzer plugin, offering programmers a reliable tool for conducting static analysis of CPython extension modules once again in a more maintainable manner. The project will be divided into several logical components, such as reference count checking, format string checking, error handling checking, and verification of PyMethodDef tables. Accomplishing this task will involve building a -fanalyzer plugin and extending certain areas of the existing analyzer.",https://summerofcode.withgoogle.com/programs/2023/projects/EzIUWs5x
Prediction of High Energy Particle Kinematics via Masked Autoencoding,Eric Reinhardt,https://medium.com/@eric0reinhardt/gsoc-2023-with-ml4sci-reconstruction-and-classification-of-particle-collisions-with-masked-bab8b38958df,"Abdulhakim Alnuqaydan, Marco Knipfer, Colin Crovella",Machine Learning for Science (ML4SCI),"python, pytorch","machine learning, particle physics, High Energy Physics","In high energy physics, much research revolves around the study of particles produced by colliding protons at near the speed of light. The Higgs boson which is a heavy and highly unstable elementary particle is not present in nature but is generated in high energy collisions. Because it’s unstable and decays before reaching the edge of the detector, we study it by observing its decay products which tend to form conical jets and then reconstruct the Higgs bosons from these observations. One technique we might use to reconstruct these particles is to pass the kinematic variables (momentum, energy, etc.) to a transformer autoencoder while masking either subsets of kinematics or the kinematics for an entire particle. This could lead to improvements of reconstruction for more difficult to reconstruct particles such as neutrinos.",https://summerofcode.withgoogle.com/programs/2023/projects/SQ6YkFc3
Adding C++ Support to Clang's ExtractAPI,Erick Velez,https://docs.google.com/document/d/1ta5Fc0uOIUV7R7gMTTXALgql6rV8CrDon9u2IIHCT4E/edit?usp=sharing,Daniel Grumberg,LLVM Compiler Infrastructure,"c++, clang","compilers, Clang, compiler front end","Clang’s ExtractAPI extracts information from C and Objective-C codebases to describe public API symbols and the relationships between them. It is currently able to serialize these relationships into the Symbol Graph file format. The goal of this project is to extend ExtractAPI’s functionality to mapping C++ symbols. This will allow for the extraction of relationships in C++ code into an intermediate format (in this case, Symbol Graph), allowing for the analysis of APIs without users needing to conduct low-level operations. Users will be able to feed C++ header files to clang via the command line where a Symbol Graph JSON file will be produced containing the relationships of C++ symbols and other contextual details.",https://summerofcode.withgoogle.com/programs/2023/projects/uBg3dUrw
Development of a Cytoscape App for microbe-microbe association networks,Ermis Delopoulos,https://ermismd.github.io/MGG/,"Scooter, Haris Zafeiropoulos, Yihang Xin",National Resource for Network Biology (NRNB),java,"java, gui, Cytoscape App","Microbial associations play a fundamental part in deciphering underlying mechanisms of microbial communities. A series of algorithms have been developed to retrieve such associations from taxa abundance data, however the outcome is usually tool-dependent and a large number of the retrieved associations may be spurious. microbetag is a co-occurrence network annotator aiming at increasing/decreasing the confidence level of the associations of such a network. However, being a command line tool, microbetag’s output is hard to interpret; its true potential can be revealed only by visualizing its findings so researchers can combine the retrieved annotations with their expertise to make further conclusions. Cytoscape Apps support additional features, e.g. new layouts, connection with databases etc, on Cytoscape, a well-established open source software platform for visualizing such interaction networks. Goal of this project is to develop a Cytoscape App providing a graphical interface for the microbetag tool.",https://summerofcode.withgoogle.com/programs/2023/projects/7IKSInMx
Talawa Admin: Improved Event and Feedback Management,Eshaan Aggarwal,https://eshaanagg.netlify.app/blog/gsoc_2023/,"Dominic Mills, CyberWake",The Palisadoes Foundation,"react, nodejs, graphql, typescript","event management, Feedback Management","Currently, both of the projects, Talawa-API and Talawa-Admin, provide support for basic functionality related to events (like creation, updation, and deletion of events for an organisation). But this functionality still needs to be completed from a practical point of view. The system lacks some fundamental functionality required for event management (from both the organization's and the attendee's perspective). The purpose of this project includes the following:- 1. Update the API models in a scalable and performant manner to provide support for new event management functionalities that are client agnostic (thus can be consumed on both the Talawa Admin and Talawa Mobile App) 2. Create all the relevant UI for these functionalities in the Talawa Admin. 3. Add a new feedback portal to the Talawa API and Talawa Admin to track the quality of organized events.",https://summerofcode.withgoogle.com/programs/2023/projects/zv3N8psq
Async SFTP Client,Eshan Kelkar,https://galorithm.com/gsoc2023,Sahana Prasad,libssh,c,"network programming, I/O Handling","This project aims to create async SFTP client API's for libSSH. Currently sftp_write is the only way of uploading files over SFTP using libssh but sftp_write is a synchronous write. Providing an asynchronous api for upload will make the upload process much more faster. A high level API which will internally use the low level async API for uploads and downloads will also be created which will make uploads/downloads easier for the user and more efficient since the async API is used internally. The set of deliverables for this project will be : a low level async API for writing, a high level API for upload and download, tests for the created API's, benchmark code to analyse performance of the API's, documentation for the created API's.",https://summerofcode.withgoogle.com/programs/2023/projects/CdkiroFH
Integrate VLCMediaLibrary Kit on tvOS,Eshan_Singh,https://eshan.hashnode.dev/my-journey-in-enhancing-vlc-tvos?showSharer=true,Diogo,VideoLAN,"swift, UIKit, Objective C",iOS development,"The goal is to use integrate the VLCMediaLibrary on tvOS for managing all media files , to eliminate the need for separate classes for managing the media content on VLC.",https://summerofcode.withgoogle.com/programs/2023/projects/4ZMNXorA
Integration of Automated Model Testing and Parameter Fitting Tools for Neuroscience Applications.,Eslam Khaled Korany,https://gist.github.com/eslam69/1d0931a6eb3412201126ed6b7c589973,"Szabolcs Kali, Sára Sáray, Martin Blazsek, Máté Mohácsi",INCF,"python, qt, SciUnit, HippoUnit, Neuroptimus","neuroscience, optimization, Modelling, Model validation, Software Integration, Parameters fitting","Biologically detailed models are essential tools in neuroscience, and automated methods are frequently used to build and validate such models based on experimental data. The open-source parameter optimization software Neuroptimus was developed to enable easy application of advanced parameter optimization methods, such as evolutionary algorithms and swarm intelligence, to various problems in neuronal modeling. Neuroptimus includes a graphical user interface, and works on various platforms, including PCs and supercomputers. While Neuroptimus uses various built-in cost functions and the eFEL feature extraction library to compare model behavior to experimental data, it severely limits the range of neuronal behaviors that can be targeted by optimization. However, the popular model-testing framework SciUnit allows for the implementation of tests that quantitatively evaluate arbitrary model behaviors. Therefore, the goal of this project is to extend Neuroptimus to use HippoUnit, an open-source neuronal test suite based on SciUnit, to evaluate model performance during optimization. This project aims to develop a seamless integration between HippoUnit and Neuroptimus, enabling the construction of detailed biophysical models of hippocampal neurons. The new Neuroptimus-HippoUnit integration will allow the optimization of a broader range of neuronal behaviors, which can ultimately lead to improved biophysical models of hippocampal neurons. Deliverables: 1- Implementation of an interface between HippoUnit and the new version of Neuroptimus to enable the optimization of a broader range of neuronal behaviors. 2- Extend the current supported tests to include all HippoUnit tests. 3- Integrate the HippoUnit with the Neuroptimus’s GUI so that users can run optimizations directly from the interface.",https://summerofcode.withgoogle.com/programs/2023/projects/eWZCYKjT
Learning from Imbalanced Data with Julia,Essam Wisam,https://forem.julialang.org/essamwisam/class-imbalance-in-julia-3jek,Anthony Blaom,The Julia Language,julia,"machine learning, python, Class Imbalance",The objective of this project is to implement a class imbalance package in Julia with algorithms to correct for class imbalance. The package is expected to integrate well with other packages such as MLJ and to provide any useful resampling algorithms to handle the imbalance issue.,https://summerofcode.withgoogle.com/programs/2023/projects/izAL3OYY
Wikipedia Dump Extractor,Evan New-Schmidt,https://evan.new-schmidt.com/things/organic-maps-gsoc-2023/,Alexander Borsuk,Organic Maps,"python, c++, rust, mediawiki, gzip'd json","performance, geospatial, Multithreading","Currently Organic Maps stores Wikipedia article text by accessing the Wikipedia API. The crawling can be slow and time-consuming, and a full update requires downloading millions of pages. Conforming to Wikipedia's API client requirements and rate limitations was difficult and resulted in a ban of the crawling script. This project aims to rework the Wikipedia article downloading using a different method: using the public database dumps of Wikidata and Wikipedia articles. This will involve automating the downloading and processing of hundreds of gigabytes of compressed files while converting the article text to simplified HTML, all in a performant and robust manner.",https://summerofcode.withgoogle.com/programs/2023/projects/N8NQIphO
Improve Distributed Rendering & Task Execution under Flamenco.,Eveline Anderson,https://projects.blender.org/Evelinealy/Final_Report,Sybren Stüvel,Blender Foundation,"python, javascript, go, html, css","Web Interface, Job creation, Stability Improvement, RNA Overrides","Summary from Official Website description: Last year Flamenco had a major release. It is more popular than ever, but still missing certain key features. Now that the basics are there, with some guidance, it is relatively simple to add new functionality. Summary from my proposal: Around a year ago, Flamenco—a rendering-farm Blender addon—was released to improve the workflow for animation artists across the globe. It is extremely successful, but still has many key functionalities that can greatly improve it. The goal of this project is to build upon the foundation of Flamenco, such as designing a web interface for the manager configuration, introducing RNA overrides, and improving stability, to bring it to its full potential.",https://summerofcode.withgoogle.com/programs/2023/projects/qXHThOYm
Quantum transformer for High Energy Physics Analysis at the LHC,Eyup,https://medium.com/@eyupb.unlu/cd9ed594e4a2,"Emanuele Usai, Amey Bhatuse, Purva Chaudhari, KC Kong, Rui Zhang",Machine Learning for Science (ML4SCI),"python, pytorch, Pennylane","machine learning, Quantum Machine Learning, High Energy Physics","Transformer-based models are gaining more and more traction in many fields, including physics. However, they are particularly known to require enormous computational resources. Moreover, as the data and the complexity of models grow, so does the computational resources required to operate and train. Supplying this increasing demand might be unsustainable in future. Large Hadron Collider (LHC) data is a good example of this phenomenon in physics with the large amount of data it produces especially in the high luminosity phase of the LHC. Quantum machine learning might be a viable solution to this problem by decreasing the time complexity of the computation significantly. I propose implementing a proof of concept Quantum Visual Transformer model to classify a synthetic dataset of jets produced via Pythia8.",https://summerofcode.withgoogle.com/programs/2023/projects/ooYoBWbw
Motion Capture in WebXR: a search for the uniqueness in replaying live performances,Fanny,https://sat-mtl.gitlab.io/collaborations/google-summer-of-code/posts/2023-contributions/caciliefanny/motion-capture-in-webxr/,"Christian Frisson (SAT), Rochana, Manuel Bolduc, Christian Frisson",Society for Arts and Technology (SAT),"python, WebXR, Mediapipe Pose","web, graphics, multimedia, extended reality","Live performances and concerts promote a sense of uniqueness. It happens for two main reasons: the relationship between the artist and the public; and the relationship between the audience itself. It is a space in time where artists respond to the public as much as the public responds to the artists. Also, every person in the audience is surrounded by other people having similar feelings and sensations. Searching to create related energy and experience via live performances in Extended Reality, this proposal aims to develop a platform prototype to generate a fluid XR experience for users by reliving live performances through motion capture. The key technologies for this goal are: MediaPipe Pose, open source software for pose detection in a live streaming context, and WebXR for the development and hosting of virtual reality and augmented reality experiences on the web. Live performances have no analog due to their unique energy and feeling of shared experience. XR's experience with concerts and live performances does not necessarily wants to exist as a copy of performances in real-life, but as a proposal of different interactions. Therefore Extended Reality can create its paradigm in art and technology.",https://summerofcode.withgoogle.com/programs/2023/projects/ZjzzYxSd
JuliaHealth's Tools for Patient-Level Predictions: Strengthening Capacity and Innovation,Fareeda Abdelazeez,https://medium.com/@fareedaabdelazeez/google-summer-of-code-2023-strengthening-healthcare-with-juliahealth-7b8fde5af9ec,TheCedarPrince,The Julia Language,"mysql, postgresql, github, julia, MLJ, FunSQL, mimic","databases, machine learning, apis, data analysis, OMOP CDM, Cohorts","Working with the OMOP CDM (Observational Medical Outcomes Partnership Common Data Model) involves handling large datasets that require a set of tools for extracting the necessary data efficiently. The first part of the project focuses on improving JuliaHealth's infrastructure by increasing the range of tools available to users. This involves enabling connections to various databases, and working with observational health data. Our second goal is to leverage the capacity built in the previous phase to develop a comprehensive framework for patient-level prediction. This framework will predict patient cohort outcomes with given treatments and will be tested on the mimic iii data, and potentially on real aggregated and anonymized patient data.",https://summerofcode.withgoogle.com/programs/2023/projects/evbn3Ded
Better (de)serialization support for objects,Fares Atef,https://gist.github.com/FaresAtef1/b2b0b3ccebef8b60a0690f7ff2f291fc,"Josh Ventura, fundies",The ENIGMA Team,"json, c++","game engine, Serialization, Deserialization, Template Metaprogramming","The ENIGMA project uses a hierarchy of objects to represent entities. These objects are serialized and deserialized using (de)serialization routines implemented for them. However, the current implementation is not very clean as it checks the type of each argument against an if-else ladder, making it difficult to read and extend. This project aims to make the serialization framework easier to use and extend by changing the way the serialize, serialize_into and deserialize functions work to dispatch to supported types implicitly without the need for an if-else ladder. And the project also aims to implement support for additional data types like generic routines for map, vector and complex numbers. This would enable more easily serializing ENIGMA's internal state for use in sending state either across a network or into a file. Additionally, the project aims to introduce support for the JSON format within the serialization system, offering it as a new option alongside the existing bytes format. This addition enhances the readability and debugging capability of the serialized data.",https://summerofcode.withgoogle.com/programs/2023/projects/VLdX6L5x
Generate Example Dataset for PyTorch Geometric Based on Pathway Commons and Prototype,Favour James,https://github.com/cannin/gsoc_2023_pytorch_pathway_commons/blob/main/docs/_reports/Final%20Report%20of%20GSoC%202023.pdf,"AugustinL, Yoshitaka Inoue",National Resource for Network Biology (NRNB),"python, pytorch, gpu, Pytorch Geometric","machine learning, bioinformatics, deep learning, data integration, graph neural networks, Data Preprocessing","The main goal of this project is to create a PyTorch Geometric(PyG) dataset by integrating the cBioPortal and Pathway Commons datasets and provide a clear example code for this integration. The project will require working with different datasets from the cBioPortal and Pathway Commons. The proposed solution involves a three-stage process: retrieving and preprocessing data from the datasets, integrating the data, and developing and training Graph Neural Network(GNN) models on the integrated dataset. The main deliverables for this project will be: 1. Preprocessed and integrated example dataset for PyTorch Geometric using cBioPortal and Pathway Commons datasets. 2. Example code for combining cBioPortal and Pathway Commons datasets in PyTorch Geometric. 3. Developed and optimized GNN models for downstream tasks using the integrated dataset. Additionally, the project will produce a well-documented and well-structured codebase for data retrieval, preprocessing, integration, and GNN model development. The final deliverable will be the contributed PyTorch Geometric dataset to the library for potential use by other researchers.",https://summerofcode.withgoogle.com/programs/2023/projects/NBZn0Zm3
Introducing a implementation of distributed arrays and linear algebra routines for Dagger.jl,Felipe Tomé,https://discourse.julialang.org/t/daggers-darray-mpi-subpackage-roadmap/104218,"Julian Samaroo, Evelyne Ringoot",The Julia Language,"mpi, julia, BLAS, LAPACK","high performance computing, numerical linear algebra, Distributed algorithms","This proposal intends to implement a distributed array for the Dagger.jl package, loosely inspired on DistributedArrays.jl and improving on the current baseline implementation of the Dagger.jl distributed array object, possibly via a complete overhaul, including support for the MPI subpackage, as well as known factorization algorithms and schemes such as QR, LQ, LU with partial pivoting, and SVD. The basic array operations will take as a basis the Basic Linear Algebra Subprograms, using julia native implementations. The main products of this will be a basic but very functional and helpful set of distributed operations for high performance algebra and array manipulations in conjunction with the finished implementation for the MPI subpackage of Dagger.jl.",https://summerofcode.withgoogle.com/programs/2023/projects/JsXkj2fK
Support basic SensorThings API (STA) for istSOS,filippofinke,https://blog.filippofinke.ch/posts/final-report-gsoc/,"Maxi, danistrigaro",OSGeo (Open Source Geospatial Foundation),"python, javascript, html, docker, css, gis","web, REST API","istSOS currently supports the Sensor Observation Service (SOS) standard, but to enhance its interoperability, we propose implementing some of the basic APIs from the SensorThings API (STA) in a prototype version. This project aims to test new technologies that could be adopted in a future revised version of istSOS.",https://summerofcode.withgoogle.com/programs/2023/projects/wLDJ39zW
Future-proofing FFmpeg — VVC Decoder Improvements,Frank Plowman,https://frankplowman.com/posts/gsoc-23-writeup,"Nuo Mi, Anton Khirnov",FFmpeg,"c, x86 assembly","video, compression",Versatile video coding (VVC) is a recent standard for video compression. It is the newest in a line of standards which have proven extremely successful and dominate video coding today. FFmpeg is a project which develops a suite of multimedia libraries used by billions in applications including Google Chrome and VLC. This project improves on FFmpeg's implementation of a VVC decoder FFVVC in two ways: * Its conformance to the VVC specification is improved by implementing esoteric features. * Its performance on x86 systems is improved by the development of hand-written assembly optimisations.,https://summerofcode.withgoogle.com/programs/2023/projects/wGFG0Zvw
Using Deep Learning to Identify Features of Protein-Coding Genes,Friederike Biermann,https://github.com/Ensembl/gsoc-dl-protein-coding-genes,"Fergal Martin, Leanne Haggerty",Genome Assembly and Annotation,"python, tensorflow, CNN, Transformer","machine learning, bioinformatics, genetics","Accurate gene annotation in eukaryotes solely based on genomic data has been a significant obstacle in biology since the introduction of next-generation sequencing technologies and thus the rapid increase of available data. Traditional methods either rely on homology searches to map the open reading frames to previously identified protein-coding genes or utilize additional experimental data, e.g., transcriptomics data. The first approach produces potentially inaccurate results if the genome of interest is not at least somewhat related to an already annotated genome. The second approach is hindered because gathering transcriptomic data is labor-intensive and expensive. For that reason, there is a high demand for models that predict the location of protein-coding genes solely from inherent features of the DNA sequence of the gene. Although theoretically possible, methods that use, for instance, Hidden Markov models to detect protein-coding genes based on known gene features are often inaccurate. In this project, we will train a Deep Learning Transformer model to extract features of protein-coding genes to gain deeper insight into their exact properties that lead to translation. The whole workflow will include first training a Conditional Random Field model to recognize candidate gene regions and then using these as input for a more fine-grained Transformer - Convolutional Neural Network hybrid model. The final pipeline will be tested against a benchmark of gold standard annotations as well as various test sets to evaluate the influence of different parameters like genome sequence quality, protein length or gene structure complexity.",https://summerofcode.withgoogle.com/programs/2023/projects/buBy0L0w
[Mpi4py in DaCe] Add support for Mpi4py in DaCe,Fu-Chiang,https://hackmd.io/@SkwBoWWbTd6IQU2UaDPlvw/r1M_oSH16,Alexnick,Scalable Parallel Computing Laboratory,Python. Basic experience with MPI and performance measurements and statistics.,[Mpi4py in DaCe] Add support for Mpi4py in DaCe,"In this project, my job is to extend the existing Dace Distributed framework to support MPI4PY syntax. This will mainly involve extending the existing Dace parser to support MPI4PY syntax, as well as implementing MPI I/O and Comm World functionality. The entire implementation will be validated through a series of unit tests and mentor evaluations.",https://summerofcode.withgoogle.com/programs/2023/projects/mgWvuiH2
Adding UVC hardware timestamp support,Gabrielle George,https://www.gsocuvctimestamps2023.com/,"epaul, Vedant Paranjape, Kieran Bingham",libcamera,"c++, v4l2","Camera Capture, Linux Clock",Adding UVC hardware timestamp support to libcamera by replacing the timestamp sampled by the linux kernel when it completes a buffer. The goal would be to capture the device's hardware frame clock information in the UVC pipeline handler and convert this to the host PC's time. The conversion function will be based off of one used by V4L2 in the Linux kernel. The expected result is to report accurate timestamps for completed frames obtained directly from the device.,https://summerofcode.withgoogle.com/programs/2023/projects/V95FyCND
FURY: Update UI widget + Explore new UI Framework,ganimtron_10,https://gist.github.com/ganimtron-10/af9f058fffeaebbba7ff4844f712b721,"SERGE KOUDORO, Javier Guaje, Nasim Anousheh, Eleftherios Garyfallidis",Python Software Foundation,"python, Vtk","user interface, ui","The main objective of this project is to update the existing UI system without impacting the current functionality, while also creating tests for each new change to ensure reliability. The project will focus on several key areas including Layout Management, Creating Scrollbar as an individual element, Completing Tree UI implementation, Spin Box Implementation, and Improving the Border Implementation. Additionally, the project will include fixing multiple UI elements such as ComboBox, TabUI, Filedialog, and Tree UI. Furthermore, the project will involve exploring a new framework with the existing UI element, which will enable selecting them together. Overall, the project aims to enhance the UI system while ensuring that it remains stable and reliable.",https://summerofcode.withgoogle.com/programs/2023/projects/BqfBWfwS
Adding AR Image Markers and Migrating VR Library,Gaurav Puniya,https://medium.com/@gauravpny/project-report-for-gsoc-2023-f07329d3861c,"Aditya Rana, Andrés Colubri",Processing Foundation,"java, opengl, c++, Android NDK","vr, android, AR, JNI, Android NDK",This project aims at migrating the current VR library to Cardboard SDK from Google VR(deprecated since 2019) and adding Image Marker functionality to P-Android as it's an important feature of AR applications that's supported by Google ARCore.,https://summerofcode.withgoogle.com/programs/2023/projects/5DBKH7wz
Quasi Periodic Oscillation detection using Gaussian Processes,Gaurav17Joshi,https://gaurav17joshi.github.io/contrast/project-report/,"Matteo Bachetti, dhuppenkothen",OpenAstronomy,python,"astronomy, time series, Gaussian Process, Tinygp","Some of the most extreme and mysterious events in the universe like neutron star mergers, black hole accretions, and gamma-ray bursts are studied by the high energy radiations that they emit. Among all the brightness variations we can study in these sources, periodic and quasi-periodic oscillations are among the most interesting, because they can provide insights into the astrophysical processes in these objects. While the stingray package is a valuable tool for analyzing periodic data, its analysis of quasi-periodic data is limited by biases in frequency domain methods. To mitigate these limitations, a Gaussian process regression (a time domain method) can be used to model the time series for a kernel describing a QPO. Using Bayesian Inferencing, we can infer its parameters and assign them physical meaning related to the physics of the process and perform model selection between QPOs and alternative models. This can be used to reliably detect QPOs, and infer their physical properties. Such methods have already been implemented in recent papers (Huebner et al,2022), and the goal of this project will be to simplify their code and implement it in Stingray using the Tinygp library for the GP backend. It will also be accompanied by a tutorial and a demonstration on various datasets.",https://summerofcode.withgoogle.com/programs/2023/projects/SXhGaPQt
OWTF Typescript Migration and Web Interface Enhancement.,Gaurav884,https://docs.google.com/document/d/1TjXUXI2sF1VvtL1wZ_fkGAPZFpkZcpSmTAuQyS07Yfk/edit,"Mrigank Anand, Abraham Aranguren, Viyat",OWASP Foundation,"python, javascript, react, typescript, JEST, enzyme, redux.js",cybersecurity,"The proposal's objective is to complete the typescript migration of the OWTF, add new components to the front-end, fix errors in the authentication flow, develop new tests, fix the failing tests, and provide proper documentation for all the changes made in the project.",https://summerofcode.withgoogle.com/programs/2023/projects/onhHdvJ5
Upgrade the documentation system to git-based system,Gauri_Maheshwari,https://github.com/gauriimaheshwarii/gsoc-2023,"Kurt Kremitzki, Chris Hennes",FreeCAD,"python, c++, git, markdown","git, software migration","The project aims to migrate the FreeCAD documentation system to a file-based, versioned system based on Git and Markdown so that it supports multiple languages for users globally and allows switching between offline and online versions. The current system is at constant risk of losing data due to the MediaWiki software used to support it. The project involves community interaction to research solutions and then upgrade the entire system to new software. The completion of the project will result in a better documentation system for the FreeCAD software that is robust and supports version control. It will also allow the user to download, or pack, the entire FreeCAD documentation to be able to access it on a machine with no internet connection, which is the goal of switching from MediaWiki to a file-based solution.",https://summerofcode.withgoogle.com/programs/2023/projects/iPaw5Jd9
Equivariant Neural Networks for Dark Matter Morphology with Strong Gravitational Lensing,Geo Jolly,https://github.com/kingjuno/GSoC-23/,"Emanuele Usai, Michael Toomey, Anna Parul, Brendan Ames",Machine Learning for Science (ML4SCI),"python, pytorch","machine learning, deep learning, Gravitational Lensing, Dark Matter","Strong gravitational lensing is a promising probe of the substructure of dark matter to better understand its underlying nature. Deep learning methods have the potential to accurately identify images containing substructure and differentiate WIMP particle dark matter from other well-motivated models, including vortex substructure of dark matter condensates and superfluids. However, accurately identifying images containing substructure and differentiating between various dark matter models can be challenging. Deep learning methods, particularly equivariant neural networks, provide a promising approach to addressing these challenges. This project will focus on the further development of the DeepLense pipeline that combines state-of-the-art deep learning models with strong lensing simulations based on lenstronomy . The focus of this project is using equivariant neural networks for the classification and regression of dark matter particle candidates (e.g. CDM, WDM, axions, SIDM).",https://summerofcode.withgoogle.com/programs/2023/projects/QA2XXRFh
Scaling Formal Verification: Parallel Analysis of Functions,George Granberry,https://gitlab.com/sosy-lab/software/cpachecker/-/merge_requests/119,Matthias Kettl,Software and Computational Systems Lab at LMU Munich,"c, java, CPA-Checker","performance, formal methods, parallelism, SMT","Formal methods have been known to be useful for verifying critical software. However, one of the main factors keeping tools such as CPA-Checker from being more widely adopted in industry is the prohibitive amount of time it takes to verify complex programs. We wish to address this by making CPAChecker scalable via divide-and-conquer and parallelization. We want to come up with a mechanical approach for decomposing verification tasks into subtasks that can verified individually. As soon as one subtask finds a violation, we abort the rest and return the violation.",https://summerofcode.withgoogle.com/programs/2023/projects/lHNppaxZ
Adding a “capabilities database” to the FreeType auto-hinter,gerzytet,https://gitlab.freedesktop.org/freetype/freetype/-/tree/gsoc-craig-2023-final,Werner Lemberg,FreeType,"c, linux",Text Rendering,"It is easy to render fonts well on screens with high pixel density. However, straightforward algorithms run into problems when rendering with few pixels available. For example, fonts where the capital “O” is taller than the capital “T”, or vice versa, should have these characters rendered at the same height when few pixels are available to avoid bumpy-looking text. Many modern font formats contain “hints” in these cases, which tell the renderer how it should align each symbol in the font to the pixel grid to create the most legible and consistent rendering. However, not all fonts and font formats contain hints. In these cases, the auto-hinter can be enabled, which analyzes the shapes in the font to fix some common issues that would normally be fixed by manually added hints. This project aims to further improve this process by adding corrections for specific letters, such as “i”, where the dot can merge with the stem, and “ñ”, where the tilde can lose its shape and become flat. These changes would be described in a capabilities database with a format designed as part of the project.",https://summerofcode.withgoogle.com/programs/2023/projects/s3CapZKT
IUNS-3 5G NR: Improving the Usability of ns-3's 5G NR Module,ggrieco,https://www.nsnam.org/wiki/GSOC20235GUsabilityFinalReport,"Tom Henderson, Biljana Bojovic, Katerina Koutlia",The ns-3 Network Simulator Project,"json, c++, ns-3","network simulation, Usability, 5G NR, General Purpose Scenario","IUNS-3 5G NR is a GSoC '23 medium-size project proposal that offers a general purpose introductory scenario to dive into the 5G New Radio world, unlocking the ability for users, from university students to research scientists and engineers, to know the 5G architecture in detail and enable them to use the simulator for research and development.",https://summerofcode.withgoogle.com/programs/2023/projects/oeDFknbT
Kotlin Multiplatform Library Version of Flogger,Giancarlo Buenaflor,https://github.com/buenaflor/KFlogger,"Mark Mann, Lei Lei, Dustin Lam, Dmitrii Petukhov",Kotlin Foundation,"kotlin, Kotlin Multiplatform",Kotlin Multiplatform Library,"The project aims to create a Kotlin Multiplatform Library version of Flogger, which is a popular logging library for Java. The new library will work on multiple platforms including JVM/Android, Kotlin/Native (iOS), and Kotlin/JS. The goal is to provide a commonly-needed logging tool that works across various platforms, making it easier for developers to write better and more readable logging code. The project will involve designing and delivering a Kotlin Multiplatform library, with a greater priority on JVM/Android and Kotlin/Native (iOS) than other targets. Additionally, the project includes implementing integration with Logcat on Android, providing readable documentation with examples on how to use the library, and publishing the library on Maven Central.",https://summerofcode.withgoogle.com/programs/2023/projects/O3J16iTy
Optimizing MLIR’s Presburger library,gilsaia,https://github.com/gilsaia/GSoC-2023/tree/main,Kunwar Grover,LLVM Compiler Infrastructure,"llvm, c++, mlir","benchmarking, Presburger Library","MLIR’s Presburger Library, FPL, provides mathematical abstractions for polyhedral compilation and analysis. When many set operations are performed in sequence, the constraints can become very large, and the goal of the project is to find a balance between the additional time costs and the appropriate constraint system size. To achieve this, this project will implement a benchmark tool to measure the running time and constraint system size, and a series of heuristic simplifications to reduce the constraint system size. Ultimately, the benchmark tool will be used to choose the appropriate simplifications.",https://summerofcode.withgoogle.com/programs/2023/projects/AtKA6GoV
Scarpe on WASM,Giovanni Borgh,https://docs.google.com/document/d/e/2PACX-1vT98QScIvjO-J-VY97G6SYPDvKfv8KDA0ITIEXleEXWlPmHenwvTImzSuRQRIh4POhCWBN7-e6XGj8N/pub,"procmarco, Noah Gibbs, Nick Schwaderer",Ruby,"javascript, ruby, html, wasm","education, web, ruby, GUIs","The project primary objective would be bypassing the current usage of the webview library in Scarpe, feeding directly the HTML and Javascript code to the browser running Ruby and Scarpe directly through WebAssembly. Having done that, the project would focus on bulding an educational playground for writing GUIs through Ruby directly in browser.",https://summerofcode.withgoogle.com/programs/2023/projects/npIo3yA0
[ScaleBugs] ScaleBugs: Reproducible Scalability Bugs,Goodness Ay,https://docs.google.com/document/d/16CoooUcUrmb7V7f5lqAemy8Aio12A_Yb6dc-mHwjUEE/edit?usp=sharing,"Haryadi Gunawi, Cindy Rubio-González",UC OSPO,"python, java, docker, linux shell","distributed systems, debugging, reproducibility, scalability","Scalable systems lay essential foundations of the modern information industry. HPC data centers tend to have hundreds to thousands of nodes in their clusters. The use of “extreme-scale” distributed systems has given birth to a new type of bug: scalability bugs. As its name suggests, scalability bugs may be presented depending on the scale of a run, and thus, symptoms may only be observable in large-scale deployments, but not in small or median deployments. For example, Cassandra-6127 is a scalability bug detected in the popular distributed database Cassandra. The scalability bug causes unnecessary CPU usage, however, the symptom is not observed unless ~1000 nodes are deployed. This demonstrates the main challenge of studying scalability bugs: it is extremely challenging to reproduce without deploying the system at a large scale. The project goal is to build a dataset of reproducible scalability bugs. Achieving this will involve analyzing bug reports from popular distributed systems like (e.g., Cassandra, HDFS, Ignite, Kafka) and determining if the reported bug depends on the scale of the run, such as the number of nodes utilized, the size of files, and the number of requests. Identified bugs will be used to build a dataset of bug artifacts that contain the buggy and fixed versions of the scalability system, a runtime environment that ensures reproducibility, and a workload shell script that would trigger some system functionalities and demonstrate the symptoms of the bug under different configurations. For example, a successful reproduction should be able to show the performance drop along with an increasing number of nodes.",https://summerofcode.withgoogle.com/programs/2023/projects/pBo3OM0n
Quantum Graph Neural Networks for High Energy Physics Analysis at the LHC,Gopal Ramesh Dahale,https://github.com/ML4SCI/QMLHEP/pull/9,"Shravan25, Ruchi Chudasama, KC Kong, Alkaid Cheng",Machine Learning for Science (ML4SCI),"python, tensorflow, pytorch, PyG, Pennylane, Jraph, TensorCircuit","Quantum Machine Learning, Quantum GNNs, Classical GNNs",The LHC at CERN contains large detectors which are made up of numerous small detectors that capture the hundreds of particles produced during collisions. It’s one of the most difficult tasks in High Energy Physics (HEP) to determine whether the jet particles correspond to the signal or background. Graph Neural Networks (GNNs) have recently gained popularity and shown to exhibit higher AUC scores for jet tagging. Quantum Machine learning has shown interesting applications in HEP. I aim to explore Quantum Graph Neural Networks (QGNNs) for event classification. QGNNs can leverage the power of quantum computing to perform more efficient and accurate analyses of large datasets in HEP. I will evaluate the performance of our QGNN- based approach and compare it with traditional methods for event classification in HEP. This project has the potential to significantly advance our understanding of the fundamental particles and forces that govern our universe,https://summerofcode.withgoogle.com/programs/2023/projects/sRqbxQyq
Pathway Improvements in cBioPortal,Gorkem,https://docs.google.com/document/d/13myG9e-jts-kqBThMl7k3sJl58Y5jx_LCxn6NJNJ-t0/edit?usp=sharing,"Onur Sumer, Ugur Dogrusoz",cBioPortal for Cancer Genomics,"javascript, java, react, html, css, Cytoscape",web,"The project aims to enhance the functionality and usability of the PathwayMapper tool in cBioPortal. The project will have two tasks: The first task will focus on alternative ranking schemes and resolving outstanding issues/bugs related to PathwayMapper in cBioPortal. The second task will focus on improving the PathwayMapper editor by revisiting its architecture, integrating expand-collapse and hide-show operations, incorporating filtering and highlighting capabilities, upgrading third-party libraries, and resolving outstanding issues/bugs. The sub-tasks outlined in the proposal will be completed through a combination of research, testing, and development work.",https://summerofcode.withgoogle.com/programs/2023/projects/s7TIxlWq
Create a New “System” panel in GNOME Settings,Gotam Gorabh,https://gotam672.github.io/FireFlyBlogs/gsoc2023-final-report/,Felipe Borges,GNOME Foundation,"c, gtk, xml, gobject","gui, Settings, Panels","Create a new system panel to provide users with a unified interface for managing various settings. we can achieve it by merging Date & Time, Users, Region & Language, and About panels, and Implementing a Remote Desktop page into the system panel. It will provide a more streamlined and user-friendly experience for GNOME users.",https://summerofcode.withgoogle.com/programs/2023/projects/2Pu11u94
Complex network library on top of PharoAI graph library,Goutham Denthaje,https://gist.github.com/dkgoutham/f5c0364ceaa241a26774ded3a34ce54f,"Sebastian Jordan, Gordana Rakic",Pharo Consortium,"smalltalk, pharo",Complex Networks,"The study of complex networks involves analyzing the structure and dynamics of the networks and their emergent properties, such as resilience, robustness, and efficiency. The significance of complex networks in real life demands us to have tools to analyze the properties and dynamics of the network. Through this project, I would like to introduce a complex network library on top of the existing PharoAI graph library by implementing various measures, metrics, and algorithms for fundamental network quantities.",https://summerofcode.withgoogle.com/programs/2023/projects/UFWGDIYi
NURBS Editing Support in BRL-CAD,Gregory Li,https://brlcad.org/wiki/User:GregoryLi/GSoC2023/DevLog,"Daniel Rossberg, Amanjot Singh",BRL-CAD,"c++, cad",graphics,"NURBS is a basic function for BRL-CAD and BRL-CAD has support for some functions based on brep using openNURBS library. Beyond basic operations such as rotation and translation, the BRL-CAD core has no ability to edit them. This project would implement support for creating and editing geometry and topology in the BRL-CAD core, thus creating the prerequisites to handle them with higher level (i.e. GUI) tools.",https://summerofcode.withgoogle.com/programs/2023/projects/7PHbj8dM
Better tools to interpret complex Bambi regression models,GStechschulte,https://gstechschulte.github.io/cached-blog/posts/2023-08-18-gsoc-final-report.html,"Osvaldo, Tomas Capretto",NumFOCUS,python,"visualization, machine learning, Probabilistic Programming, Bayesian Statistics, Interpretable machine learning","Bayesian modeling has increased significantly in academia and industry over the past years thanks to the development of high quality and user friendly open source probabilistic programming languages (PPL) in Python and R. Of these is Bambi, a Python library built on top of the PyMC PPL, that makes it easy to specify complex generalized linear multilevel models using a formula notation similar to those found in R. However, as the model building portion of the Bayesian workflow becomes easier, the interpretation of these models has not. Currently, to aid in model interpretability, Bambi only supports conditional adjusted predictions plots. The objective is to take inspiration from the existing Bambi tooling and R package marginaleffects, to extend upon existing plotting functionality and to provide additional plotting functions such as conditional comparisons and conditional marginal effects to allow Bambi modelers to extract insights and interpret their models in a more automatic and effective manner.",https://summerofcode.withgoogle.com/programs/2023/projects/MpE5Sl2V
Dubbo GSoC 2023 - Go Observability Improvement,Guan Wang,https://gist.github.com/ev1lQuark/7cb8c9fb32bc36fd73b70f0a2037656b,"Albumen Kevin, Jun, zhaoyunxing, HaoGuo, LiujieQin",Apache Software Foundation,"prometheus, go, OpenTelemetry","microservices, observability, RPC","I am proposing an improvement to the observability capabilities of Apache Dubbo-go, a Dubbo implementation written in Golang used to solve communication and governance problems under the microservice architecture. The current implementation of the observability feature is not comprehensive enough and not aligned with Dubbo-java's implementation. My proposal consists of two major improvements, one for metrics and another for tracing. For metrics, the proposed improvements include adding metric instrumentation for the consumer side of RPC calls, as well as for the registry, configuration, metadata centers, and RPC exception handling. For tracing, the proposed improvements include enhancing the configuration loading and component initialization for tracing, adding support for the B3 standard, aligning the configuration with Dubbo-java, and adding support for other observability backends. The deliverables include feature implementation, tests, samples, and documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/FC5ucrIH
Support exponential sampling from the space of steady states of a metabolic network,Guillermo Martin,https://github.com/GeomScale/dingo/commit/a1724b07217248d51e4b3e799a82c039b667c91e,"Elias Tsigaridas, Apostolos Chalkis",GeomScale,"python, c++","Markov Chain Monte Carlo, Metabolic Networks","My proposal is to extend the Python package dingo with two Markov Chain Monte Carlo sampling methods, which will enable exponential sampling from the set of flux vectors for constraint-based metabolic modelling. The sampling methods - NUTS Reflective Hamiltonian Monte Carlo, Reflective Exact HMC, and Riemannian Hamiltonian Monte Carlo - have already been implemented in C++ and integrated into the volesti codebase. The extended C++ bindings and Python wrappers will enable access to these methods through dingo. This will involve running experiments on benchmark metabolic networks to compare the results obtained from the new random walks and the existing Multiphase Monte Carlo Sampling method based on Billiard walk. The experiments will generate new biological insights by providing an exponential sampling of flux vectors, which will allow for an unbiased characterization of the metabolic capabilities of biochemical networks. The final deliverables of the project will be the extended dingo package, the results of the experiments, and a brief report discussing the findings.",https://summerofcode.withgoogle.com/programs/2023/projects/FHAnvNUp
Apache SkyWalking - Python Agent Performance Enhancement Plan,Guohan Ling,https://github.com/apache/skywalking-python/pull/316,"Zhenxu Ke, Superskyyy",Apache Software Foundation,"python, asyncio","cloud, observability","Currently, SkyWalking Python agent is implemented with the Threading module to provide data reporters. Yet with the growth of the Python agent, it is now fully capable and requires more resources than when only tracing was supported. The goal of this proposal is to refactor both the data reporters and communication protocol client parts using Python asyncio to improve performance and provide reliable test results and documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/M7qsJ2mB
Implement backlog search in Polari IRC client,Gurmannat Sohal,https://gitlab.gnome.org/GNOME/polari/-/merge_requests/273,"Carlos Garnacho, Florian Müllner",GNOME Foundation,"javascript, gtk, sparql",web,"This project aims to implement backlog search capabilities for the Polari IRC client. The Polari IRC client’s logging infrastructure has ported from Telepathy Logger to Tracker, providing users with more powerful and flexible search capabilities. Using Tracker to store and access chat logs will also make it easier for developers to maintain and extend the Polari IRC client in the future. Searching in old conversations is a valued tool in free software IM channels; this is expected to enhance productivity when using IRC.",https://summerofcode.withgoogle.com/programs/2023/projects/qkIYWKmU
Jaeger: Make ClickHouse a core storage backend,Ha Anh Vu,https://docs.google.com/document/d/18OlFF7u0C9Fn25If_M6gEWHghJ1GNtWIL9I1vUrq9HQ/edit?usp=sharing,Yuri Shkuro,CNCF,"prometheus, golang, sql, clickhouse, OpenTelemetry, Jaeger","database, tracing, observability","This project aims at leveraging the current community jaeger-clickhouse storage plugin and making ClickHouse one of the core storage backend for Jaeger, besides Cassandra and ElasticSearch. It starts with doing performance benchmarking on different design choices and making design decisions, then continues with implementing those design decisions.",https://summerofcode.withgoogle.com/programs/2023/projects/rydbL7aP
GitHub Actions for KubeArmor,Haiyu Zuo,https://github.com/zhy76/GSoC-2023-CNCF-Report,"daemon1024, Ankur Kothiwal, Anurag",CNCF,"shell, golang, docker, kubernetes, GitHub Action","cloud, eBPF, KubeArmor","Our goal is to create a Github Action from KubeArmor, which will be used by other Github projects. This Github Action, using KubeArmor, will be used to identify changes in the application posture. For example, if a project creates v0.1, and then a release v0.2 is made, the Github Action should provide us with a view of all the changes that occurred in the application from v0.1 to v0.2, such as what new processes are being spawned and what new file accesses are being made.",https://summerofcode.withgoogle.com/programs/2023/projects/0EWL96Fd
PyAfipWs windows automation and packaging,Hanslett Junior,https://github.com/HanslettTheDev/pyafipws/wiki/GSOC-2023:-Final-Summary,"reingart, Sando, Federico Zuccolo",Python Software Foundation,"python, flask, GitHub Actions, pyinstaller","web, automation, packaging, desktop application, unit testing","PyAfipWs is a vibrant community building unique interfaces, tools, and apps for Argentina's gov't. web services (soap, com/dll simil-ocx, pdf, dbf, xml, json, etc.). Currently, they have support using GitHub actions to automatically build installations when a pull request gets merged with the main branch. But it needs improvements in building a one-click NSIS(Nullsoft Scriptable Install System) Installer when a pull request merges. In addition, I’ll work on improving the unit test coverage and packaging of the module to PyPi. And lastly, If I manage my time well, I’ll happily provide a web service for testing.",https://summerofcode.withgoogle.com/programs/2023/projects/IgeoWYQn
Development of Generalizable SATIE Mappers that Optimized Audio Spatialization Flexibility,Haokun Song,https://sat-mtl.gitlab.io/collaborations/google-summer-of-code/posts/2023-contributions/kuk1song-development-of-generalizable-satie-mappers/work-product-kuk1song/,"Edu Meneses, MichaSeta",Society for Arts and Technology (SAT),"supercollider, Open Sound Control (OSC)","SATIE, Audio Spatialization, Vector Base Amplitude Panning (VBAP), Digital Art","SATIE(Spatial Audio Toolkit for Immersive Environments) can be used for audio spatialization. It is an audio spatialization engine programmed in SuperCollider that can render dense audio scenes to large multi-channel loudspeaker systems in real time. This lower-level audio rendering process maintains a dynamic DSP graph created and controlled via OSC messages from the external process. SATIE can be used not only for sound object control (location, propagation, etc.) but it can also be used for Haptic Floor dedicated to large immersive spaces. In this project, however, we focus on a function of SATIE is that implementing geometry understanding at a spatializer level. In this case, we usually apply the current version of SATIE mappers plugin to perform this function. A mapper plugin does not process audio, it can be used for provide for non-generic control and geometric computation of lower-level spatialization parameters. However, it still has limitations that need to be programmed for each use case. In order to perfect it and improve its efficiency, we need to design and implement the generalizable SATIE mappers that could get all loaded spatializers and set them at a relative distance concerning each other. In other words, it is necessary to make each different spatializer in different positions recognize the relative position of each other. The proposed mappers will be designed to overcome these limitations and will be tested with different spatializer configurations. This project will provide SATIE with a powerful and flexible tool that will enable users to create rich and diverse sound spatial effects in different scenarios.",https://summerofcode.withgoogle.com/programs/2023/projects/JoEdoUzG
pgmoneta: Native Backup,Haoran Zhang,https://github.com/pgmoneta/pgmoneta/discussions/120,"Jesper Pedersen, Mariam Fahmy Sobhy",PostgreSQL,"c, postgresql",Database systems,"Pgmoneta is a backup/restore solution for PostgreSQL. It can be used to backup one or multiple databases. Currently pgmoneta achieves that by calling the command pg_basebackup. This project aims to replace the usage of this command with a native backup solution. To achieve this, the project will implement the Streaming Replication Protocal to receive the base backup, as well as the WAL logs generated during this period.",https://summerofcode.withgoogle.com/programs/2023/projects/PzRME3N9
DFlow: textual DSL for rapid Virtual Assistant development,Haralabos Metaxas,https://github.com/harabalos/dFlow/blob/main/gsoc.md,malamasn,Open Technologies Alliance - GFOSS,"python, openapi","natural language processing, software development, API Integration","DFlow is a tool designed to simplify the process of creating conversational models for virtual assistants. It aims to solve the problem of manual intent example creation in virtual assistant development. VAs require a set of examples of user intents to understand and respond to user queries correctly. However, manually creating these examples can be time consuming and vulnerable to errors, so the project has two objectives: 1. Develop a M2M transformation tool that can automatically generate intent examples from OpenAPI descriptions. 2. Automate the creation of intent examples from OpenAPI descriptions directly in the dflow platform. By achieving these objectives, dflow can make the VA development process much easier, saving time and effort for developers. The deliverables of this project include a functional M2M transformation tool and an automated intent example creation feature in the dflow platform.",https://summerofcode.withgoogle.com/programs/2023/projects/bqFdm4xQ
Improve the UI and Visual design of Zulip,Hardik_Dharmani,https://gist.github.com/Ddharmani3/c7c859a4366aec5777f64a81629f609a,"amanagr, Ryan Rehman",Zulip,"javascript, html, css, typescript","ui/ux, Frontend Development, Web Developmet","This GSoC project aims to significantly enhance the user experience of Zulip, an open-source team chat app, by implementing several features that will improve the user interface and usability of the application. The project will specifically focus on redesigning crucial areas of the application, including the top bar, sidebars, Compose box, and Topics, to make them more intuitive, user-friendly, and visually appealing.",https://summerofcode.withgoogle.com/programs/2023/projects/lZawZlZv
Social Street Smart,Harish Dendukuri,https://gist.github.com/harish2773/12df5134b39593966845ceab8860eb37,"Bruno, MiHarsh, Divyanshu_Singh, Akshay Mishra",AOSSIE,"python, javascript, machine learning, deep learning, natural language processing","machine learning, natural language processing, deep learning, Chrome Extensions","The objective of the project is to develop a Chrome extension with the purpose of identifying fraudulent information, thereby enhancing online safety and fostering greater productivity for internet users. The project entails a series of stages, primarily focused on the utilization of Natural Language Processing methodologies. During this season, a context detection functionality will be integrated, leveraging the capabilities of the GPT-3 API to provide users with comprehensive insights into news articles, empowering them to make well-informed decisions. The final output will be the updated web service and extension, which will be ready for publishing. The project also aims to enhance the SSL validator and Security Header to ensure maximum security. To achieve this, the codebase will be migrated from Manifest Version 2 to Manifest Version 3, and the model must be integrated into the Chrome extension. The final product will provide users with a reliable tool to identify fake news and ensure that they receive accurate information while browsing the internet.",https://summerofcode.withgoogle.com/programs/2023/projects/YOXAI21H
Increase Director 4 Compatibility by adding Full Support for Total Distortion & Journey Man Project,Harishankar Kumar,https://blogs.scummvm.org/hsk/2023/08/22/gsoc-23-its-a-wrap/,Eugene Sandulenko,ScummVM,"c++, Lingo",games,"The proposal outlines a plan to increase compatibility for two classic games, ""Total Distortion"" and ""The Journeyman Project,"" on the ScummVM platform. The project aims to fix bugs, thoroughly test the games, and ensure they are production-ready by the end of the timeline. The project's benefits include increased access to classic games, increased community engagement, improved stability of the Director engine, and increased interest in the engine. The deliverables include identifying and fixing bugs, prioritizing issues, regression testing, and rigorous testing for official support!",https://summerofcode.withgoogle.com/programs/2023/projects/vvsx36fu
Implementation of the Sequence collection specification using the EVA contig alias backend,Haroune Hassine,https://gist.github.com/waterflow80/89f31a9e2bdf855715d8c35391e897d3,"TImothe Cezard, April Shen",Global Alliance for Genomics and Health,"java, postgres, spring-boot","web, genomics, bioinformatics",This project aims at implementing the Sequence Collection specification designed by the Global Alliance for Genomics and Health (GA4GH). The main goals of this project is to make a standardized way to refer to sequence collections as well as providing mechanisms to compare different sequence collections.,https://summerofcode.withgoogle.com/programs/2023/projects/YyUIz8kG
Implementation of a Common Python Framework for OpenFASoC Generators,Harsh Khandeparkar,https://gist.github.com/harshkhandeparkar/bc1dfdcedcf70978414ec434d5356504,msaligane,CHIPS Alliance,"python, verilog, spice","Open Silicon, OpenFASOC","OpenFASoC is a project focused on creating fully automated user specifications to GDS generation flow using open-source tools. OpenFASoC uses tools such as OpenROAD, Yosys, Magic, and Netgen to fully autonomously choose the best parameters from the user specification and generate and simulate circuit blocks that could be used in SoCs. OpenFASoC was inspired by FASoC, which was built on proprietary tools. This project aims to replace the design-dependent Verilog generation and simulation runners with a common Python module that would be used across all generators with a consistent and simple Mako-based templating syntax for both Verilog and SPICE templates.",https://summerofcode.withgoogle.com/programs/2023/projects/SNpK5h0F
SoftWare Heritage SPDX generation : Generate SPDX documents from Software Heritage Identifiers.,Harsh Vardhan Mahawar,https://github.com/HarshvMahawar/GSoC-23-SPDX-SWH/blob/main/README.md,David Douard,SPDX,python,"compliance, licensing, data, vulnerabilities","The SoftWare Heritage provides each part of the archive (be it any single file, directory or collection of lines of code) or archive itself a stable identifier and these identifiers are called SoftWare Heritage persistent IDentifiers (SWHIDs) which acts as a reference to retrieve them through the Command-line interface(CLI) or Web-API of SWH. Problem statement is that the license and copyright information (license, author, package version etc.) of the project is stored in various different files and there is no single file representing all this information. Therefore developing a tool which can give the Software bill of materials (SBOM) of any referenced file/directory in SPDX format is proposed. Approach is to develop a package to do this task by first parsing the metadata achieved from SWHIDs and forming an logic/algorithm for taking the necessary fields according to spdx format from retrieved data to generate valid spdx-document.",https://summerofcode.withgoogle.com/programs/2023/projects/72OrdevO
GitLab Plugin Modernization,harsh-ps-2003,https://www.jenkins.io/blog/2023/08/24/gitlab-plugin-modernization-report/,"Kris Stern, Mark Waite, Freyam Mehta",Jenkins,"java, docker, rest api, Maven, GitLab, JUnit5","devops, CI/CD","For a long time, the Jenkins community has suffered due to the old RESTEasy library being used in the GitLab Plugin. Thus this project aims to replace its use with a modern GitLab4J-API library via GitLab API Jenkins Library Plugin and clean up the codebase.",https://summerofcode.withgoogle.com/programs/2023/projects/j5lsgAAs
Qaul Matrix Bridge,Harshil Jani,https://gist.github.com/Harshil-Jani/281ab3c38b5786a3b8b4a0ab6b7086c5,"MathJud, Saces",freifunk,"go, rust, protobuf","communication, Matrix, peer-to-peer, Libqaul","Qaul is an Internet independent wireless mesh communication app. With qaul, you can communicate directly from one device to another. The aim of this project is to create a matrix bridge between Matrix and qaul which can further help us to broadcast messages over many mediums of communication which are supported by Matrix. Main aim is to implement the relay bridge and double puppeting.",https://summerofcode.withgoogle.com/programs/2023/projects/z3BpcR6Z
Implementing an Audio Overlay Filter,Harshit Karwal,https://gist.github.com/HarshK23/703946316d98f5f3bf4e0442f956bd7d,"Thilo Borgmann, Paul B Mahol",FFmpeg,"c, git","audio, media",The Audio Overlay Filter aims to provide the functionality of replacing specified sections of an audio stream with other input audio streams. I will be designing and implementing the filter along with the necessary documentation for it to become a part of FFmpeg's libavfilter library.,https://summerofcode.withgoogle.com/programs/2023/projects/kbZJCtZK
Enabling HTTP/3 support in Wget2,Harshmohan Kulkarni,https://gitlab.com/gnuwget/wget2/-/merge_requests/527,"Daiki Ueno, Ander, fkrenzel",GnuTLS,"c programming, HTTP/3, GnuTLS, QUIC Protocol","networking, C Programming","This project will upgrade the popular command-line tool Wget2 to support the latest HTTP/3 protocol. Due to this, the users will get the advantage of performance improvements, including reduced latency, better handling of packet loss, and fast and efficient file download. The deliverables of the project will include a modified Wget2 codebase which will integrate with the nghttp3 and ngtcp2 libraries for QUIC support and GnuTLS for TLS encryption. It will also test and verify that the HTTP/3 implementation is correct and performs as expected. This project will benefit the open-source community by making it easier for users to adopt the latest protocols and improve their web browsing experience.",https://summerofcode.withgoogle.com/programs/2023/projects/TQBKKYlM
Add virtio-net Control Virtqueue state restore support,Hawkins Jiawei,https://github.com/JiaweiHawk/gsoc2023,Eperezma,QEMU,c,"vDPA, CVQ commands","Virtio-net device uses Control Virtqueue(CVQ) for changing device parameters. For some devices, such as vDPA, its CVQ is passed from Guest’s driver directly to Host driver, which makes it difficult for QEMU to track the status of these devices. To solve this problem, QEMU introduces Shadow Virtqueue(SVQ) for vdpa device, which shadows the CVQ via QEMU instead of being assigned directly to Guest. During QEMU Live migration, to restore the vdpa device in the destination VM to the state in the source VM, SVQ can use CVQ’s interface and send the state as regular CVQ commands. Due to some CVQ commands for vDPA are missing at present, this project aims to achieve support for a subset of CVQ commands, including VIRTIO_NET_CTRL_RX family commands, VIRTIO_NET_CTRL_GUEST_OFFLOADS_SET command, VIRTIO_NET_CTRL_VLAN_ADD command, VIRTIO_NET_CTRL_MQ_HASH_CONFIG command and VIRTIO_NET_CTRL_MQ_RSS_CONFIG command for vDPA.",https://summerofcode.withgoogle.com/programs/2023/projects/zptoHp3v
Porting the CRAB engine to SCUMMVM.,hax0kartik,https://blogs.scummvm.org/hax0kartik/2023/08/26/gsoc-summary-and-final-report/,"Strangerke, Eugene Sandulenko",ScummVM,"c++, SDL2","game, graphics, Game-Engine","The SCUMMVM project with its hundreds of engines can run a huge library of games. It welcomes the addition of new engines to further increase the number of games it supports. This project aims to integrate the CRAB engine in SCUMMVM. The CRAB engine was developed by Pyrodactyl Games and was used in several of the games which the studio released. Most notably, this engine was used in the game called Unrest, a story-driven adventure RPG set in ancient India that adapts to death, failure, and the choices the player makes.",https://summerofcode.withgoogle.com/programs/2023/projects/0o0ja1qw
Modernize Data Fetching API with TanStack Query,Hemant Chaudhary,https://community.plone.org/t/developed-a-rest-api-client-to-query-plone-6-backend-gsoc23/17819/1,Víctor Fernández de Alba,Plone Foundation,"react, TanStack Query, SSR","API Client, Data Fetch layer","The objective of this proposal is to implement a new data fetch layer for frontend in Plone CMS. I intend to implement a library “@plone/client” that will work as a client for “plone.restapi”, using Tanstack Query. This client will enable Plone to move away from the “AsyncConnect” data fetch layer that is based on Redux. Then Redux can be used as the application-level data store only. TanStack Query brings many benefits with it, like caching support, de-duplication of queries, cancellation, refetch, easy-to-use hooks, SSR support, and more. A modern API client should use these features fully. The primary goal of this client is to be robust, yet flexible enough to support all use cases, and be easily extensible.",https://summerofcode.withgoogle.com/programs/2023/projects/f3OeXroQ
Improving Zulip's Permissions with User Groups,Hemant Umre,https://gist.github.com/HemantUmre12/32d5cec77ee681011c824fe37d678d64,"Purushottam Tiwari, Sahil Batra",Zulip,"python, javascript, django, css","web, ui, ux, migration, New features, permissions","My goal during the GSoC period would be to- ➔ Develop a framework and discuss a strategy for migrating existing realm and stream settings to user groups in reviewable chunks. ➔ Add high-priority new features and permissions at the organizational, stream, and group levels. ➔ Contribute to the development of new features and bug fixes in the user group management UI.",https://summerofcode.withgoogle.com/programs/2023/projects/xTVOMePO
AFL-style UI: Add AFL-style UI to the TUI monitor,hengzh,https://gist.github.com/ToSeven/141706d8eb1ef8da588146edb45118a9,"Marc Heuse, domenukk",AFLplusplus,rust,fuzzing,"LibAFL, a library written by Rust, helps people develop a fuzzer tailored to specific needs, but due to the lack of the running status information of LibAFL, we are difficult to grasp some key metrics in a fuzzing campaign. so I propose adding AFL-style UI to the TUI monitor. LibAFL will have an AFL-style UI encompassing some key status metrics such as the status bar, process timing, and so on.",https://summerofcode.withgoogle.com/programs/2023/projects/opfPA5Ly
Next Generation Desktop Apps on Tauri,Henit Chobisa,https://github.com/RocketChat/Tauri.Desktop.App,Jean Brito,rocket.chat,"typescript, react.js, Tauri",Desktop Application Development,"This project proposes to explore the potential of Tauri as a replacement for Electron in the Rocket.Chat Desktop App. However, Tauri is currently not mature enough to be used as a replacement for Electron. Therefore, this project aims to test the current capabilities of Tauri by comparing it to the existing Electron-based app and analyzing its limitations. The project will involve building a prototype of the [Rocket.Chat](http://Rocket.Chat) Desktop App using Tauri, implementing all the current features that the Rocket.Chat Desktop App currently has such as notifications, download manager, auto updater, settings manager, trayicon etc and comparing its performance to that of the Electron-based app.",https://summerofcode.withgoogle.com/programs/2023/projects/xmNdj8Sk
Enhance the kotlinx-benchmark library API and user experience,HenokW,https://gist.github.com/wldeh/cf92dcd0550b640145732e55d883fe57,Abduqodiri Qurbonzoda,Kotlin Foundation,"kotlin, Gradle Internals","documentation, performance, benchmarking, user experience, Integration Tests","This proposal focuses on enhancing the kotlinx-benchmark library API and user experience, fostering community growth and collaboration in Kotlin multiplatform development. The kotlinx-benchmark library is an open-source solution for benchmarking Kotlin code across multiple platforms. Although it provides a foundational structure, it currently lacks several essential quality-of-life features that would streamline its usage. This project aims to address these limitations by introducing fine-grained benchmark configuration options, ensuring feature parity between JVM and Kotlin/Native benchmarking, developing a command-line API, and integrating modern Gradle support. Furthermore, the project will enhance the library's documentation, integration tests, and examples to provide a comprehensive user experience. The anticipated outcomes of this project encompass: - Comprehensive documentation with practical usage examples - A user-friendly API that simplifies the benchmarking process - Versatile options for benchmarking Kotlin/JVM code across various platforms To successfully execute this project, proficiency in Kotlin and an understanding of Gradle internals are essential. By undertaking this project for Google Summer of Code, I aim to contribute significantly to the Kotlin ecosystem and promote a thriving open-source community centered around multiplatform development.",https://summerofcode.withgoogle.com/programs/2023/projects/nvBREuSR
Dynamic wrench application through the GUI,Henrique Barros Oliveira,https://community.gazebosim.org/t/gsoc-2023-dynamic-wrench-application-through-the-gui/2227,"Addisu Taddese, Dharini Dutia",Open Robotics,"linux, c++","robotics, simulation","Currently in Gazebo, it is complicated for the user to exert external forces and torques to objects during the simulation. In this project, I will develop tools to allow the user to apply wrenches to objects directly through the GUI. Firstly, I will develop a GUI plugin that allows the user to apply precise forces and torques, such as the one present in Gazebo Classic. Then, I will implement a system that allows the user to exert forces and torques by dragging objects in the scene with the mouse cursor. This goes beyond the kinematic translation and rotation tools currently available, as it will interact with the physics of the models, providing a more convenient interface for the user.",https://summerofcode.withgoogle.com/programs/2023/projects/pGR7C6Xq
Keploy Typescript/Javascript SDK,Hermione Dadheech,https://gist.github.com/Hermione2408/5ab360ca77c28ef6a38ad5a45316b755,"NehaGupta, Shubham Jain, re-Tick, Pranshu, charanK, Gourav Kumar, Sarthak Shyngle",Keploy,"javascript, mongodb, redis, elasticsearch, typescript, Cloud Storage, Httpclients, Sequelize","rest apis, unit testing, SDK","My goal is to enhance the Keploy Typescript SDK's versatility and accommodate a wider range of developers and use cases. I aim to make it more flexible, allowing for easier future integration of additional technologies/databases by creating reusable code blocks. Major deliverables: 1. Add support for Httpclients in TypeScript 2. Add support for popular SQL databases using Sequelize 3. Add support for MongoDB database 4. Add support for cloud storage services 5. Add support for Redis and Elasticsearch 6. Sample Project: Include a sample application that will contain all the above integrations in the Sample-Typescript repo for seamless testing of each implementation.",https://summerofcode.withgoogle.com/programs/2023/projects/ESka3AAp
Building an Intelligent Search System for Documenter.jl,Hetarth Shah,https://hetarth02.hashnode.dev/google-summer-of-code-2023-julia,Morten Piibeleht,The Julia Language,"javascript, html, julia, css, SCSS","web development, documentation generation",The goal of this project is to improve the user experience of search functionality provided by Documenter.jl by building an intelligent search system that will enable users to easily and quickly find the information they need. The system will use various pre-processing techniques and search algorithms to provide accurate search results and suggestions for related content.,https://summerofcode.withgoogle.com/programs/2023/projects/PvLbxUqE
Add Vectorization to par_unseq Implementations of Parallel Algorithms,HHN,https://johan511.github.io/GSOC-2023/,"Srinivas Yadav, Hartmut Kaiser, Shreyas",Ste||ar group,"python, c++","parallel algorithms, vectorization",HPX parallel algorithms currently don't support the par_unseq execution policy. This project is centered around the idea to implement this execution policy for at least some of the existing algorithms (such as for_each and similar).,https://summerofcode.withgoogle.com/programs/2023/projects/oMdz5jfO
Belle II Event Display with Phoenix,Hieu Le Cong Minh,https://gist.github.com/HieuLCM/c69359336d4fe6138cecd872bd5f5540,"Thomas Kuhr, Giacomo De Pietro",CERN-HSF,"c++, angular, typescript, Phoenix","visualization, web","The proposed project aims to improve the accessibility and user experience of Belle II by developing a web application for event display. Currently, the event display for Belle II relies on ROOT TEve, which requires the installation of the full Belle II software on the local machine, making it difficult for users to access the information they need. To resolve this issue, the proposed solution is to develop a web application that utilizes the Phoenix-based event display for Belle II, enabling users to view the detector geometry, recorded signals, and reconstructed objects on a web browser. The project's deliverables include the development of a working web application, thorough testing, and documentation for both users and developers. The successful implementation of this project is expected to enhance the usability and accessibility of Belle II results, thus contributing to the advancement of particle physics research.",https://summerofcode.withgoogle.com/programs/2023/projects/2WYpamvj
3.1 D-GNNs: developing DevoGraph for computational developmental biology - Himanshu,Himanshu Chougule,https://gist.github.com/himanshu-02/a0b49ea7a2fe9a81f0ef84974a0be346,"Jesse Parent, Bradly Alicea, Jiahang Li, Mayukh Deb",INCF,"python, pytorch","graph neural networks, Segmentation, Deep learning, Computationa Biology","This project is about using Graph Neural Networks(GNNs) as a method to discover underlying connectivity to characterize a growing network that undergoes shape as well as size transformations for C. elegans. There are three parts to this project, all of which aim to integrate previous work on embryo networks, developmental connectomes and embryo differentiation. Refining a means to segment raw data and incorporate it into the DevoGraph pipeline. Refining the method for deriving graph embeddings. Better integration of DevoGraph as a network structure discovery module of DevoLearn",https://summerofcode.withgoogle.com/programs/2023/projects/dE4pNOI1
A Methodology To Categorize Exam Series,Himanshu Kumar1,https://github.com/sharmalab/escMR,"PUNEET SHARMA, Tony Pan","Department of Biomedical Informatics, Emory University","python, scikit-learn","machine learning, mri, DICOM","DICOM is the global standard for managing and exchanging medical images and data but lacks a consistent series-naming scheme. I will use machine learning for the identification and classification task, and the detailed approach is mentioned in the proposal document. I will add a new module to run on DICOM images of the MRI modality. This module will execute on DICOM images acquired in real-time or on-demand by Niffler. It will identify and categorize the MRI series (orientation, weighting) into different brain sequences, which will help identify repeated or missing series in an MRI study. Additionally, it will check whether the sequence parameters meet standard thresholds. Lastly, a confidence score will be given.",https://summerofcode.withgoogle.com/programs/2023/projects/oC59dZpT
Floating Text Widget / UI improvements,Hirnaymay Bhaskar,https://musescore.org/en/node/355441,Casper Jeukendrup,MuseScore,"c++, qt, qml",software development,"The main objective of this project is to develop a functioning text pop-up feature in Musescore. This pop-up will act as a framework for various text-related features that will be added in the future. It can be accessed by selecting a section of text in the score, providing users with access to basic text properties such as font, font color, font size, line spacing, and text spacing. In addition to the text pop-up feature, UI improvements in Musescore will be implemented to enhance the overall user experience. These improvements will focus on optimizing the layout and improving usability. If time permits, spell-checking, automatic hyphenation, and verse extraction capabilities will be worked on as a part of this project.",https://summerofcode.withgoogle.com/programs/2023/projects/OifrwbNC
Data Privacy Policy Definition and Function Verification for Teaclave,Hiroki Chen,https://github.com/apache/incubator-teaclave,"Mingshen Sun, ya0guang",Apache Software Foundation,"rust, SGX, Trusted Execution Environment","security, cloud","Teaclave currently lacks a mechanism for data providers to enforce policies on the data they upload, and also it cannot verify that the behavior of the uploaded function conforms to the expected rules. These two gaps leave the system vulnerable to exploitation by malicious actors. To solve the problem, verification should be exerted on the uploaded function so that its behavior that it strictly conforms to a prescribed policy. The standard formal verifier can be adopted (e.g., Prusti, Creusot) to formally verify the function's behavior. A set of deliverables as follows can be anticipated in the coming future. Milestones: Basic policies (e.g., addition, subtraction) of the data can be verified by Teaclave; Complex policies can be verified. Components: Verifier for the function code; Policy language adapters (adapt policy language to verifier); Policy language parser; Function source code converter (append policies to the functions). Documentation: The internal working mechanism of the verification; How to write policies for the data.",https://summerofcode.withgoogle.com/programs/2023/projects/jnoHeq00
Unified Measurement Facility,hlorus,https://gist.github.com/hlorus/6722b7487249e3e747f3b9d2a7fad6e0,"wandererfan, Chris Hennes",FreeCAD,"python, c++","cad, ui/ux","FreeCAD currently has several ways of measuring objects, causing confusion for users and making the learning curve steeper. The proposed project aims to implement a generic measurement command that can be extended by workbenches, refactor and port existing commands to use the new system, and polish existing measuring commands for a consistent user experience. Optional deliverables include adding additional measurement modes and settings and communicating with developers of external workbenches to port them to the new system. Benefits: A single method of measuring objects would smooth the workflow and reduce learning time. The user will always be able to invoke one global measure command regardless of the active workbench.",https://summerofcode.withgoogle.com/programs/2023/projects/w0LSLLQE
Approximated (Discrete) Centroidal Voronoi Diagrams,Hossam Mohamed Saeed,https://github.com/CGAL/cgal/issues/7852,"sloriot, Sébastien Valette",CGAL Project,"c++, qt5, boost, Doxygen",geometry processing,"This project introduces a new simplification (and remeshing) framework to CGAL. Based on the Approximated Centroidal Voronoi Diagrams (ACVD) project which proposes a robust and efficient approach. The implementation will be incremental. Starting from the simple uniform simplification algorithm, then more complex metrics (anisotropic, quadric-based) are planned to be implemented. Finally, a topology correction guarantee step is added based on. The implementation will be under CGAL’s Polygon Mesh Processing package. It is planned to write complete documentation and implement tests and visualizations as well.",https://summerofcode.withgoogle.com/programs/2023/projects/VrwwMSuN
Improve Security Auditing in Uyuni by Incorporating OVAL Data,Houssem Nasri,https://gist.github.com/HoussemNasri/023088c1831b534e5acca5195e35d5f3,"Abid Mehmood, Pascal Arlt",openSUSE Project,"python, postgresql, java, react, xml","security, linux, OVAL","In today's world, security is a major concern for any organization. With the increasing number of vulnerabilities and attacks, it is important to have a reliable security auditing tool in place. Uyuni is a popular open-source infrastructure management solution. While security auditing was always supported in Uyuni, it had its limitations. By incorporating OVAL data, Uyuni could enhance its security auditing capabilities and provide a more comprehensive solution. Currently, Uyuni uses channel data for CVE audits, which provide limited information about potential vulnerabilities. Integrating OVAL data into Uyuni's auditing process will enable it to perform a more comprehensive assessment of the system's security.",https://summerofcode.withgoogle.com/programs/2023/projects/laqWGv1Q
Windows Support for Dino,hrxi,https://hrxi.github.io/gsoc/blog/gsoc-2023-conclusion,"Marvin W., fiaxh_",XMPP Standards Foundation,"vala, xmpp, gobject, windows, meson, sasl","operating system compatibility, keyring","This project aims to add Windows support to the previously Linux-only XMPP client Dino. Since Windows is installed on approximately 75% of all desktop/notebooks, this would greatly expand the possible audience of this XMPP client. Dino aims to be a simple-to-use XMPP client, as such, it makes sense to make onboarding easier by running on common platforms. Additionally, this project aims to add support for saving passwords in keyrings and adding support for SASL SCRAM, making passwords more secure in case the keyrings are.",https://summerofcode.withgoogle.com/programs/2023/projects/ygGSIiHc
GPU Acceleration for PDE Discretization in Trixi.jl using CUDA,Huiyu Xie,https://gist.github.com/huiyuxie/44b561f9f854aada98fdb37036081454,"Hendrik Ranocha, Michael Schlottke-Lakemper",The Julia Language,"cuda, julia, Trixi.jl","gpu computing, Numerical Analysis, PDE","GPU computing provides substantial performance gains over CPU-based methods for computationally demanding tasks. Trixi.jl, a Julia numerical simulation framework for hyperbolic conservation laws, currently lacks native GPU support. This project aims to accelerate PDE discretization in Trixi.jl using GPUs via CUDA. Key subtasks include developing a simple 1D CPU code, extending it to 2D and 3D, porting it to GPUs, prototyping GPU implementations of existing Trixi.jl kernels, optimizing data transfer, and expanding GPU support for more complex methods and GPU types. The final deliverable will offer high-performance PDE solvers on GPUs, showcasing the benefits of GPU acceleration in Trixi.jl.",https://summerofcode.withgoogle.com/programs/2023/projects/upstR7K2
Better Faust on the Web,Ian Clester,https://ijc8.me/2023/08/27/gsoc-faust/,"sletz, Jason Freeman",GRAME,"javascript, c++, typescript, webassembly, Faust, Web Audio","web, music, audio, compiler, digital signal processing, Collaborative Repository","Faust is a functional programming language that enables people to express sound synthesis and audio processing algorithms concisely, efficiently, and portably. It is known for targeting a wide variety of environments: Faust code compiles to C, C++, LLVM IR and more, and for many different audio APIs and environments. In recent years, following the development of asm.js, Emscripten, Audio Worklets, and WebAssembly, the web has become an increasingly viable platform for DSP and audio programming. Prior work has enabled the generation of Audio Worklets (and older Script Processor Nodes) from Faust code. Furthermore, Faust has web-based tools such as an editor, IDE, and playground that allow people to easily try the language and hear the results without installing a compiler toolchain. I propose to improve Faust's support for the web platform by 1) updating and extending the Faust web tools and 2) building on Faust's ability to target WebAssembly in order to make Faust documentation more usable and to make it easier to find and share Faust code on the web.",https://summerofcode.withgoogle.com/programs/2023/projects/L6oI4LhW
Improved Realtime Control with MoveIt Servo [MoveIt 2],ibrahiminfinite,https://gist.github.com/ibrahiminfinite/0f60fcf0717ca87263c72c0fcf6bd3ff,"Sebastian Castro, AndyZe",MoveIt,c++,"robotics, motion planning","The current MoveIt Servo has enabled users to utilize reactive control. However, in its current implementation MoveIt Servo only provides a ROS interface to users. While the ROS interface is very versatile, it can also be a bottleneck for users who need harder real-time performance guarantees. There are also many aspects of the software design of the package itself that can be improved. This project proposes to re-implement MoveIt Servo with the following: - Improved readability - Extensibility - Performance - Support for end-effector pose as input. - Improved C++ Interface support",https://summerofcode.withgoogle.com/programs/2023/projects/WgY2PZu9
Improving the Text Tool,Idriss Fekir,https://gitlab.gnome.org/GNOME/gimp/-/merge_requests?scope=all&state=all&author_username=user062&label_name=9.%20GSoC&deployed_before=2.99.18,"Jehan, demib0y",GNU Image Manipulation Program,"c, gtk, Pango","fonts, gui, Text","GIMP is a high end photo editor, but its text tool is rudimentary. A lot could be done to improve it, UI/UX-wise and feature-wise. I plan on improving OpenType features, mainly support for alternate glyphs, and also some other improvments.",https://summerofcode.withgoogle.com/programs/2023/projects/l07oaC3k
Implement group chats in Moxxy,Ikjot Singh Dhody,https://moxxy.org/posts/2023-08-20-Moxxy-MUC-GSoC-Final-Report.html,PapaTutuWawa,XMPP Standards Foundation,"xmpp, flutter","instant messaging, app development, Computer Networks","Group chats are an integral component of instant messaging clients used in everyday communication. However, Moxxy, currently lacks support for group chats. Hence, the objective of this project is to incorporate basic group chat functionality into Moxxy by integrating MUC support (XEP-0045) into the underlying Moxxmpp library. The proposed solution aims to be highly extensible, allowing for easy integration of future feature additions. The deliverables of this project include the addition of XEP-0045 support to Moxxmpp, along with basic MUC features such as joining and leaving rooms, sending messages, and changing nicknames, among others. By implementing these features, users of Moxxy will be able to enjoy group chat functionality, which is essential for effective communication.",https://summerofcode.withgoogle.com/programs/2023/projects/UK3oE0f9
Implement calendar availability,InfiniteVerma,https://community.kde.org/GSoc/2023/StatusReports/AnantVerma,"Carl Schwan, Claudio Cambra",KDE Community,"c++, qml","end user applications, Calendar","This feature implements RFC 7953 in the Kalendar app. This adds the ability for a user to provide their availability in a shared calendar. When a user wants to schedule a meeting, with this feature in place, they will be suggested better intervals by taking the availability of the attendees into consideration. This updates KCalendarCore and the Kalendar projects (for the most part) of the KDE ecosystem.",https://summerofcode.withgoogle.com/programs/2023/projects/5NO7f2Yn
Add Apache Skywalking Terraform Module,infracop,https://github.com/apache/skywalking-terraform,"Zhenxu Ke, Superskyyy, Puguang Yang",Apache Software Foundation,"aws, terraform, shell scripting, Linux administration","cloud, devops, Deployment","Goal: ○ To add a Terraform module for SkyWalking deployment to facilitate users in conveniently spinning up a cluster for demonstration or testing. ○ To allow users to customize the Terraform provider according to their needs, making it feasible for them to use it in their production environment. ○ To mainly focus on the support for AWS in the Terraform module for SkyWalking deployment. ○ To provide a hassle-free solution to users where they only need to provide their access key/secret key, and the Terraform provider does the rest of the work, which includes creating VMs, creating database/OpenSearch or RDS, downloading SkyWalking tars, configuring the SkyWalking, and starting the SkyWalking components (OAP/UI), creating public IPs/domain name, etc.",https://summerofcode.withgoogle.com/programs/2023/projects/ZR71GtF1
Optimize omegaUp.com for Mobile and Accounts for Children,Ingrid Margarita,https://drive.google.com/drive/folders/1IX11Ob922nXam5M8YUjj4P6YVcYLDDlr?usp=drive_link,"Hugo Dueñas, Carlos Abel",omegaUp,"bootstrap, typescript, vue.js, SASS","web, frontend, Integration testing, Responsive Design, End-To-End Testing","omegaUp does not have a user-friendly interface for users who access the platform from their mobile devices, making it difficult for many students to learn from the courses, solve problems, and participate in the contests offered by the platform. It also makes it difficult for teachers to create resources (courses, problems, contests) and track their progress. This project focuses on optimizing the different views of the platform for small-sized devices (mobiles), fixing bugs, and improving the user experience so that more students can consume the content provided on the page and also participate in ongoing contests, and at the same time, more teachers can create more content. Currently, students under 13 years old cannot use omegaUp. We need to meet a series of regulations in order to be able to offer our service to people under 13. To achieve that goal, we will introduce a special type of restricted account for children that allows them to consume curated content and be invited to courses and contests by their school teachers. In this project, we will implement the best practices in matters of data privacy and personal data protection, with special specifications for users under 13 years of age. The functionalities are derived from the Children's Online Privacy Protection Rule (COPPA), California Consumer Privacy Act (CCPA), and GDPR, and are based on the implementation of other similar organizations such as Khan Academy.",https://summerofcode.withgoogle.com/programs/2023/projects/aGgLLKX6
Develop a drag-and-drop GUI for deep learning experimentation,Ioannis Valasakis,https://github.com/wizofe/gsoc23-emory,"Özgür Kara, Babak Mahmoudi","Department of Biomedical Informatics, Emory University","python, pytorch, pyqt","deep learning, GUI Programming","The aim is to develop a desktop application (GUI) that allows users to run their Deep Learning experiments that is integrated with PyTorch library via drag&drop environment. The users should be able to construct a pipeline visually, without dealing with the code, and apply the selected/designed deep learning models to the data easily.",https://summerofcode.withgoogle.com/programs/2023/projects/AWlAnAvo
Replicating Auditory Steady-State Response (ASSR) in an auditory cortex model. Project idea 9.1,Irene Bernardi,https://docs.google.com/document/d/1o1imsAHI2j4T9fcsCCfGbf7yZ4O572XQ73O3MPHVu1w/edit,"valery_bragin, James Chen",INCF,"python, NEURON, NETPYNE","Open source development, schizophrenia, cortical modelling, neural entrainment","ASSR refers to the cortical entrainment to frequency and phase of an auditory signal that is presented in a fixed “train of clicks”, in a gamma range rhythm (40 Hz). A hallmark of schizophrenia is a reduction in ASSR; this project aims at reproducing this phenomenon using an auditory cortex (A1) model with thalamocortical connectivity. The latter simulates a cortical column with a depth of 2000 μm and 200 μm diameter, containing over 12k neurons and 30M synapses. Specifically, we aim at reproducing results from an experiment looking at the effects of increased CB1 receptor availability and GABA receptor deficits, as these have been linked to the EEG abnormalities that characterize schizophrenia. We will start by running batch simulation tasks to pull out connectivity rules from the A1 model, modifying GABA and CB1 Receptors. This step will be run on a scaled version of the A1, so that I will be able to use a personal computer, but I may employ cloud resources as well.Then, we will analyze parameter sweeps for local field potentials, using the LFPy toolbox. Afterwards, we will move to parameter optimization of the A1 model so that it reproduces the ASSR, using the Optuna HPO toolkit. Our ultimate goal is to reproduce the ASSR phenomenon in the A1 model. For every step of the process, documentation will be made available on a deployed site.",https://summerofcode.withgoogle.com/programs/2023/projects/BYIomgGz
Postgres Extension Tutorial / Quick Start,Ishaan Adarsh,https://gist.github.com/IshaanAdarsh/ae96669cb30806a23899cbf124f28554,"David Wheeler, Jimmy Angelakos",PostgreSQL,"c, python, postgresql, sql, markdown, Makefile, PL/pgSQL, PL/Python, PGXS, SGML","web, database, documentation, PostgreSQL Extension Ecosystem","This project aims to create a comprehensive and easy-to-follow tutorial on how to write a Postgres extension, addressing the current lack of clear documentation on the topic. The tutorial will assume only knowledge of Postgres and the target language, and will cover topics such as writing a Makefile, using PGXS and PGXN, explaining Procedural and External languages, writing regression tests, and extension release management. In addition, I have included a dedicated section that intricately guides the process of extending PostgreSQL through the incorporation of Functions, Data Types, and Operators. The tutorial will be a quick start guide with clear examples, making it easy for new contributors to understand and follow along. The deliverables of this project will be the tutorial itself, along with any necessary code examples and documentation updates. This project will be valuable for the Postgres community by making it easier for new contributors to get involved and contribute to the extension ecosystem.",https://summerofcode.withgoogle.com/programs/2023/projects/vxDUiu3f
Xbitinfo: Distinguishing real and artificial information,Ishaan Jain,https://medium.com/@ishaan454/gsoc23-final-project-report-c1e17346dc0f,"Hauke Schulz, Milan Klöwer, Aaron Spring",Python Software Foundation,"python, shell, dask, Juila","machine learning, statistics, informatics","This proposal aims to develop an information theoretic approach to filter out artificial information from real information in geospatial datasets. The project will use the bitinformation framework to distinguish between real and false information, where real information is defined as the mutual information between adjacent bits. The proposed algorithm will filter out artificial information, which is a consequence of prior compression, from real information, which reflects the underlying signal. The project will involve a theoretical review, test case generation, algorithm development, evaluation, and integration into xbitinfo, a software package that implements the bitinformation framework. The resulting artificial information filter will provide a valuable tool for users who may not have access to high-precision/uncompressed data, and it will enhance the accuracy and reliability of geospatial data analysis. As a participant in the Google Summer of Code, I am excited about the opportunity to work on this project and contribute to the development of an open-source software tool that will benefit the scientific community.",https://summerofcode.withgoogle.com/programs/2023/projects/57VWtk9x
GitHub OpenAPI Search,Ishaan Shah,https://github.com/postman-open-technologies/openapi-github-search,"Gaurav Rakheja, Ali Mustufa, Anshul Jain",Postman,"python, web, RESTAPI",WebScraping,"The goal of this project is to provide a robust yet easy way to search Github for Swagger and OpenAPI definitions. Understanding that there is a lot of noise available, that we only care about OpenAPIs that validate, and that the Github API has rate limits that require you to automate the crawling over time. Providing a robust open-source solution that will crawl public Github repositories for machine-readable API definitions. The project will consist of developing an open-source API that allows you to pass in search parameters and then utilize the GitHub API to perform the search, helping simplify the search interface, make rate limits visible as part of the response, and handle conducting a search in an asynchronous way, allowing the user to make a call to initiate, but then separate calls to receive results over time as results come in, helping show outcomes over time",https://summerofcode.withgoogle.com/programs/2023/projects/5z4bzIFy
Extending Continuum mechanics module: Introducing classes for Cables and Improving the Truss class,Ishan Pandhare,https://tinyurl.com/gsoc23IshanP,"Prakhar Saxena, Advait Pote",SymPy,python,"physics, symbolic mathematics","The project aims at Extending the continuum mechanics module. The primary aim of the project is : 1) Improving methods for Truss class - The project will aim to improve Truss class by optimizing its methods and adding some new functionalities. 2) Introducing Cables class - Cable, another important structure in continuum mechanics, will be implemented in this project as a class. This would extend the module and add to the list of structures which already include truss and beams.",https://summerofcode.withgoogle.com/programs/2023/projects/ESmmn5ye
Implement hpx::relocate (P1144),Isidoros,https://isidorostsa.github.io/gsoc2023/,"Giannis Gonidelis, Hartmut Kaiser",Ste||ar group,c++,Memory Optimization,"Modern C++ specifications and the HPX library offer a rich set of algorithms to ensure efficient resource utilization. Nevertheless, there is still room for improvement in data movement operations. Proposal P1144 introduces std::relocate, a feature designed to optimize data relocation by making it safer, faster, and greatly simpler. Essentially, std::relocate utilizes a single memcpy operation to move objects while avoiding unnecessary move-constructor and destructor calls. This improvement impacts key primitives like swap and vector.reserve, subsequently leading to speedup in higher-level algorithms such as rotate and sort. The goal of this proposal is to implement relocation in HPX.",https://summerofcode.withgoogle.com/programs/2023/projects/aAeBdZ1F
Import-Export Instances on KVM,itsayushpandey,https://github.com/itsayushpandey/GSoC2023,"Nicolas Vazquez, Alexandre Mattioli",Apache Software Foundation,"python, mysql, javascript, java, vue","virtualization, cloud",The project adds support for importing and exporting virtual machines (VMs) from KVM Hypervisor into the CloudStack. It helps administrators better manage resources and transfer VMs if needed. The CloudStack currently supports this functionality only on VMWare and support on KVM (as one of the most popular open source hypervisor) can tremendously help many other users of CloudStack. In terms of deliverables the following can be expected at the minimum: 1. Implement/extend listUnmanagedInstances API: Lists unmanaged virtual machines (not existing in CloudStack but existing on the hypervisor side) 2. Implement/extend importUnmanagedInstance: Import an unmanaged VM into CloudStack (this implies populating the database with the corresponding data) 3. Implement/extend unmanageVirtualMachine: Make CloudStack forget a VM but do not remove it on the hypervisor side 4. UI Changes to facilitate above API use through the web portal 5. Integration tests and documentations for ease of use,https://summerofcode.withgoogle.com/programs/2023/projects/f0gpheQM
Integration of GNU Anastasis with the GNU Taler Android wallet,Iván Ávalos,https://git.taler.net/taler-android.git,"Christian Grothoff, Florian Dold",GNU Project,"kotlin, typescript, Android SDK","security, cryptography, Usability","GNU Anastasis is a distributed and password-less key backup and recovery system. It allows users to safely backup keys by giving shares to various independent escrow providers, and recover the secret by passing user-selected authentication challenges at a sufficiently large subset of these providers. GNU Taler is a digital payments system that uses cryptography to provide a certain degree of anonymity when paying things online. Some of the private keys that GNU Taler uses to represent money must be stored locally in the wallets, and thus, it is important to provide users with a way to ensure availability and confidentiality of these keys to avoid financial loss. This proposal consists on the integration of GNU Anastasis in the Android wallet app of GNU Taler in order to allow users to make secure and decentralized backups of their digital wallets, and to recover the wallet data without relying on the user to safeguard their key material. GNU Anastasis' client logic is already available in TypeScript, just like the cryptographic core of the GNU Taler wallet. Thus, to make this work, we need to link the GNU Anastasis client logic into the GNU Taler wallet and then systematically expose its functionality to the user interface implemented in Kotlin. Ideally, the resulting code should be re-usable outside of the GNU Taler wallet, for example as a stand-alone Android app to backup other key material or as re-usable Android dialogs that can be integrated with other Android apps in need for key backup and recovery functionality.",https://summerofcode.withgoogle.com/programs/2023/projects/wV0LSczA
Pharo-to-C VM Transpiler,Ivan Jawerbaum,https://ivojawer.hashnode.dev/series/gsoc,"PalumboN, Guille Polito, Pablo Tesone",Pharo Consortium,"c, pharo","virtual machines, IDEs, Transpilers","The Pharo VM project is a continuation of the opensmalltalk-vm (or Cog VM) project which is the virtual machine underneath Pharo, this project will be centered around the Pharo-to-C transpiler, also called Slang. In this project my primary target is to improve the development experience for the Pharo VM and to accomplish this I will be implementing: Type feedback improvements, type guided translations, incremental building of the AST and integration of the C model to the IDE.",https://summerofcode.withgoogle.com/programs/2023/projects/5IG4ZU48
Curvature Adaptive Remeshing,Ivan Paden,https://github.com/CGAL/cgal/issues/7736,"sloriot, Jane Tournois",CGAL Project,c++,"computational geometry, Polygon Mesh Processing","The goal of the proposed project is to extend the existing remeshing functionality in the polygon mesh processing (PMP) package with the adaptive remeshing based on the work by Dunyach et al. (2013). The existing implementation isotropically remshes surfaces in three steps: first, edge splitting or collapsing depending on their length relative to the target edge length; second, edge flipping to improve vertex valence; third, tangential relaxation to improve the vertex distribution. The planned extension with the adaptive remeshing involves expanding the edge splitting and collapsing rules, and introducing a new formulation of the tangential relaxation; in addition, feature edges must be addressed. Apart from implementing those three necessary functionalities in CGAL, the contribution to the project would include creating tests, examples, and documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/HE8oFb28
Update OpenROAD Documentation and Tutorials,Jack Luar,https://docs.google.com/document/d/1m-IMRiGGdPluaSobX7j1jUtzfKBNwdUu4bFIfBq75XA/edit?usp=sharing,"Indira Iyer Almeida, Vitor, Indira Almeida",UC OSPO,"python, linux, bash, tcl, VLSI",Open-source EDA,"This project aims to review and update missing documentation and tutorials in OpenROAD-flow-scripts. A key focus will be on increasing ease-of-setup by updating documentation, setup scripts and docker-based commands. Next, we will also update documentation for the following OpenROAD components: Makefile flow variable, distributed detailed routing, Hier-RTLMP, Autotuner. If time permits, cloud enablement will be implemented, alongside notebook-based packaging to further increase ease of adoption.",https://summerofcode.withgoogle.com/programs/2023/projects/PO7wgKkw
Adding Probes to Plugin Health Score,Jagruti Tiwari,https://gist.github.com/Jagrutiti/c8490d38bf382fea9b87e5408668e8cb,"Mostafa Ashraf Mohamed, Dheeraj Singh Jodha, Adrien Lecharpentier",Jenkins,"postgresql, java","Data extraction from GitHub, Data analysis applied to data representation","Project Abstract The project proposes to add new probes to the Plugin Health Score tool. Originally started in 2022 as a part of a GSoC project, this tool determines the health score of a plugin. Probes are the heart of the tool. To extend the work started last year, I propose adding new probes to make the tool more valuable and feature-complete. Project Description Jenkins is an almost two-decade-old open-source project with over 1000 repositories. Plugins bridge the gap between Jenkins and different environments. A project as mature and large-scale as Jenkins requires active involvement from active maintainers. In general, probes serve two purposes within the context of this toolset: To collect the data to compute the score of the plugin systematically. Based on the computed score, the health of the plugin can be determined. Based on the score future contributors, maintainers, and adopters decide which plugin(s) they want to invest their time in. Project Deliverables Designing of the probes Identify the key features and functionality of the plugins. Define the metrics that would contribute to the Plugin Health Score. The more probe criteria the plugin meets, the higher the health score of the plugin. Deciding the probe’s interaction with other probes Determining how the probe would contribute to the score. Adding unit test cases for each probe and scoring implementation. If time permits, I will add integration test cases too. The final delivery would be 10 new probes to the Plugin Health Scoring System. These probes will contribute to calculating the overall health of a plugin. By the time the project ends, the tool will approximately have 24 probes in all (10 new + 14 existing probes) Proposed Implementation Plan - Build each probe, implement it, score it and write its test cases. - Define interaction of probes with each other. - Define execution order of each probe. Stretch Goals - Adding metrics probe - Writing integration test cases",https://summerofcode.withgoogle.com/programs/2023/projects/GtfMGrXa
Migrate Pitivi from GTK3 to GTK4,Jainil Patel,https://jainl28patel.github.io/posts/Pitivi_Gsoc_finalReport/,"Alex Băluț, Yatin",Pitivi,"python, GTK4, gtk3","ui, video editing","My proposal aims toward migrating Pitivi from GTK3 to GTK4. Pitivi’s UI is in GTK, an open-source, cross-platform widget toolkit. Currently, Pitivi uses GTK 3.0 but the current new and stable version of GTK is GTK 4.0, at some point in time GTK3.0 will be deprecated and hence it is necessary to migrate Pitivi to GTK 4.0. The ultimate goal of my project will be to continue migrating Pitivi’s codebase to GTK 4.0 runtime and then migrate the app to GTK 4.0. It also includes fixing any critical and non-critical bugs that appear during migration to ensure the smooth functioning of Pitivi.",https://summerofcode.withgoogle.com/programs/2023/projects/vls0nZN7
Implement JS filesystem bridge layer for Emscripten,James Hu,https://docs.google.com/document/d/1Prn9B6x_cW7JRA79R6J1OhfyW7crHCAtgmpqEMBl3N4/edit,"Sreeja Kamishetty, Alon Zakai, Thomas Lively",Chromium,"javascript, c++","compilers, web, filesystem","Emscripten is an open-source tool used to translate C/C++ code to WebAssembly, allowing web apps to run with near-native performance. WebAssembly is especially popular for web games and other performance-oriented applications. As of March 2023, Emscripten uses an emulated file system written in JavaScript to support C/C++ file system operations in compiled WebAssembly code. Currently, the mentors are working on WasmFS, an emulated file system built in C++/WebAssembly, for Emscripten. However, WasmFS lacks the JavaScript required to connect the existing JS API to the new C++/WebAssembly file system operations. The central goal of this project is to build a new JavaScript library modeled after Emscripten’s existing file system library that will call WasmFS functions instead of JavaScript routines. This approach aims to speed up filesystem operations and lay the foundation to add multithreading in the future. That being said, this project does not aim to redesign the filesystem implementation for Emscripten. This project also will not add new functionality to the Emscripten file system. Finally, this project will not attempt to add full multithreading functionality yet.",https://summerofcode.withgoogle.com/programs/2023/projects/4q0L2ZMW
Feed Section in Android App,Jasjeet Singh,https://blog.metabrainz.org/2023/08/27/gsoc-2023-feed-section-in-listenbrainz-android/,Akshat Tiwari,MetaBrainz Foundation Inc,"android, kotlin, flask, Jetpack Compose, Android Jetpack",android,"ListenBrainz's website is an amazing platform that inculcates the idea of having a social media app revolving around music. The Feed-Section is one of the core functionalities of this idea, and the ListenBrainz Android app lacks it. Using TDD (test-driven development), Material3, and modern Jetpack libraries in conjunction with the MVVM architecture, this project aims to integrate Feed-Section into the Android app.",https://summerofcode.withgoogle.com/programs/2023/projects/CtVn2Vu8
Automatically Compute Moments of Inertia for SDFormat Links,Jasmeet Singh,https://github.com/jasmeet0915/GSoC23-OpenRobotics,"Addisu Taddese, Dharini Dutia",Open Robotics,"c, gazebo, c++, Simulation","robotics, simulation, physics","Physically plausible inertial parameters like the mass, center of mass, moments of inertia etc. are required for an accurate simulation. Since parameters like moments of inertia are difficult to visualize, a user may tend to enter wrong values leading to incorrect simulation. Therefore, having the calculation of moments of inertia integrated into Gazebo itself would make the workflow much more smooth. The plan is to use existing mesh processing libraries to automatically calculate moments of inertia from link collision meshes and introduce an attribute to SDFormat for the tag that enables the feature.",https://summerofcode.withgoogle.com/programs/2023/projects/KCQn6Rm8
Identifying the Physical Process of Planet Formation (EXXA),Jason Terry,https://github.com/ML4SCI/EXXA/tree/5120b8c29af5c0fa87288afa17d61ab1f7152d9c/ANOMALY_DETECTION/EXXA_Final_JTerry,"Emanuele Usai, Shravan25",Machine Learning for Science (ML4SCI),"c, python, fortran, hpc","machine learning, vision, astronomy, astrophysics, Hydrodynamics","Planets form in complex, dynamic environments. The physics behind the process is not well-understood, and the limited high-quality observational data is difficult to interpret. Using high-fidelity hydrodynamical simulations of protoplanetary disk evolution under a variety of physical and observational conditions, machine learning models will be trained that can identify and quantify the physical processes that influence the protoplanetary disk. This will speed up and improve the analysis of observations, furthering our understanding of the environments and processes that are responsible for planets.",https://summerofcode.withgoogle.com/programs/2023/projects/MYYJDFU9
lilypond - Fix Beaming Patterns/Beam Subdivisions and Tuplets,Jason Yip,https://gitlab.com/lilypond/lilypond/-/merge_requests/2080,Carl Sorensen,GNU Project,"c++, scheme","mathematics, graphics, Music Theory","Many bug reports from almost 10 years ago to even recent times report that GNU Lilypond has been unable to correctly render note subdivision beams and tuple subdivisions, more evidently in some cases of complex rhythm and meter. After comprehensive assessment and analysis of these issues by the developers, the developers have determined that the current code responsible for those capabilities should be rewritten and refactored. The reason that note subdivision and beaming can be difficult to implement is that music theory heavily relies on powers of 2 and their reciprocals. It's very convenient to composers, instrument players and developers too. That convenience doesn't address the problems rhythmic complexity can pose. Concepts such as compound time signatures, tuplets (group of notes that are not bounded by the powers of 2) and manually setting relevant Lilypond attributes. My project proposes a new way of representing the concept of music theory beams and groupings with different object attributes. My project proposes to fix this Lilypond issue by rewriting `lily/beaming-pattern.cc` (the C++ source file mostly responsible for this issue's logic) and fixing/refactoring relevant C++/Scheme source files. I plan to first refactor such source files to fix regular note automatic subdivision and beaming, then fix tuplet subdivision in later weeks. Heavy code modifications will include updating documentation, adding regression tests, and formatting Lilypond's `convert-ly` rules corresponding to the above two issues. Once the issue of beaming subdivisions is fixed, developers and even anyone wishing to compose rhythmically-complex scores should not have to worry about this obstacle.",https://summerofcode.withgoogle.com/programs/2023/projects/XcjddXhU
"Dashboard Web Components (React, Vue etc) for Workflow and Task Runs",Javed Habib,https://gist.github.com/JaeAeich/56463bffaae8d20e98a3e65d10a3abe0,"Salihu, Anurag Gupta, Alex Kanitz, Liam Beckman, Venkat Malladi, patmagee",Global Alliance for Genomics and Health,"html, css, typescript",web,"The objective of this project is to create adaptable web components using UI frameworks like Microsoft's Fast. This will involve expanding the existing component suite and implementing design tokens to create a user-friendly interface for the GA4GH Workflow Execution Service (WES) and Task Execution Service (TES) APIs. The ultimate goal is to integrate these components into the Krini web portal, providing an intuitive and responsive interface to facilitate complex genomic and biomedical computations.",https://summerofcode.withgoogle.com/programs/2023/projects/UEuLvYby
Creating Pure-Python Fallback Dependencies,Jay Kumar,https://anomaly.hashnode.dev/google-summer-of-code-2023-aboutcode,"Philippe Ombredanne, ayansinhamahapatra, Jonathan Yang",AboutCode,python,data structures,"Currently sctk uses pyahocorasick intbitset for license detection & lxml for creating cyclonedx-xml output formats. All three of them are currently implemented as a extension of python using c or cython these libraries are important for the performance of scancode, but they need to be compiled and installed in a specific way, which may not be possible on all computers. This can make scancode less portable or difficult to use for some users who do not have the necessary tools or libraries installed on their machines. Therefore to address this issue the proposal is to create fallback dependencies, that are written in python and can be used by scancode when the required c libraries are not available making it easier to install and use on a wider range of machines",https://summerofcode.withgoogle.com/programs/2023/projects/kw8FGmuk
Improving Site Performance and Implementing Subject Tags,Jayden Teoh Jing Xiang,https://blog.openlibrary.org/2023/08/25/google-summer-of-code-2023-supercharging-subject-pages,Mek Karpeles,Internet Archive,"python, postgresql, javascript, html, css, jquery, sentry, Infogami","Performance Optimisation, Subject Classification","The objective of this proposal is to enhance the user experiences for readers of Open Library through a two-prong approach. The first prong, Improving Site Performance, addresses the poor site performance that negatively affects our patrons’ experience. This prong takes a metric-based approach to identify the key bottlenecks of performance using various performance measurement tools. This metric-based approach allows us to identify the areas for performance optimisation and quantify the effects of our changes. The second prong, Implementing Subject Tags, seeks to offer a more resourceful alternative to the Subject tags that are currently implemented for books in Open Library. The current Subject tags, which are implemented as a list of strings, are limited in extensibility and scalability, and are not an efficient tool in categorising and providing information about books. Subject Tags will be implemented as first-class objects, allowing for metadata to be included within tags. The metadata will provide relationships and hierarchy between subjects, internationalisation (i18n) information, additional description about tags and many other extensible information fields. Upon the success of this implementation, its utility will catalyse improvement within numerous avenues in the Open Library system which includes the search engine, Subject page interface, content advisory and many more. These two prongs work together to improve the overall patron experience, making the site more enjoyable to use and enriching the information about books.",https://summerofcode.withgoogle.com/programs/2023/projects/9Tzc7AuO
Update Atheros Wi-Fi driver(s) for new Wi-Fi stack,Jeandre Kruger,https://jeandrek.github.io/gsoc-blog/,Martin Husemann,The NetBSD Foundation,"c, Wi-Fi","drivers, Wi-Fi","The NetBSD Project has been working to adapt the FreeBSD Wi-Fi stack. When this is complete, things will be more up-to-date, newer protocols will be supported, and NetBSD will let one use multiple Virtual Access Points with the same physical Wi-Fi adapter. As of yet, most of the Wi-Fi drivers need to be converted to the new stack. The athn(4) driver will be reworked as necessary, and if time permits the ath(4) driver also.",https://summerofcode.withgoogle.com/programs/2023/projects/nCbfQku8
Continous-Time Collision Detection for CGAL,Jeffrey.D.Cochran,https://github.com/CGAL/cgal/issues/7694,sloriot,CGAL Project,c++,"computational geometry, simulation, collision detection","Funded by GSoC this summer, I propose to add collision detection to CGAL in a way that naturally builds on and extends CGAL’s existing AABB-tree functionality. The project will focus on implementing trusted collision-detection methods, which are attested to by their use in projects like the Godot game engine as well as their continued academic propagation through works like Ericson’s “Real-Time Collision Detection” and courses like UT Austin’s “CS395T: Physical Simulation”. I envision the project having the following deliverables: - Modifications to CGAL’s existing AABB tree functionality where necessary, e.g. to handle moving bounding boxes and dynamic restructuring of the bounding volume hierarchy - Broad-phase collision detection routine that utilizes CGAL’s AABB tree to quickly rule out unnecessary collision queries and identify potential collision pairs - Narrow-phase collision detection routine that performs fast collision tests on the pairs of primitives identified in the broad phase - Tests to cover all changes and new functionality - Documentation of the above The full proposal can be found here: https://hackmd.io/@1V1uNkwcQMiMbp_OanOjUA/r1kG1v_-3",https://summerofcode.withgoogle.com/programs/2023/projects/uq7t1zqg
Enhancing Web Development on Chromium: Accessibility Improvement in Chromium DevTools,Jeremy Yoo,https://gist.github.com/joonyoo181/dfadc41ef9740c7ecb126096f264b646,"Sreeja Kamishetty, Feras Aldahlawi, Sangbaek Park",Chromium,"c++, html, typescript","web, media, devtools, browser","In an effort to improve the web development experience on Chromium, this project aims to add an efficient way to access Media panels to help debug media elements. In the DevTool’s DOM tree, a new link adorner will be added next to audio / video HTML elements. Clicking on this link adorner will direct the user to the media panel, which will display information related to that media player.",https://summerofcode.withgoogle.com/programs/2023/projects/JBA9iOkF
Responsiveness & Tablet-based Needs for OpenMRS 3,Jessie Ssebuliba,https://jexsie.medium.com/responsiveness-tablet-based-needs-for-openmrs-3-o3-8218409e4725,"Kumuditha Karunarathna, Vineet Sharma",OpenMRS,"javascript, react, typescript, SCSS","web, ui, ux, openmrs, EMR","In today's digital era, where users access applications on a variety of devices with varying screen sizes, ensuring a consistent and user-friendly experience across platforms is crucial. Openrms, a cutting-edge project, presents an array of designs that demonstrate how the frontend user experience (UX) should adapt dynamically based on the screen size or device. We have a ton of designs that show how the frontend UX should change based on screen size or device (e.g. large desktop, small laptop, or tablet). This project aims to implement this responsiveness consistently throughout the application.",https://summerofcode.withgoogle.com/programs/2023/projects/fUbHuou9
Reverse Program Synthesis for Backward Reachability Analysis in CPAchecker,Jia Sun,https://www.sosy-lab.org/gsoc/2023/reverse-cfa,Po-Chun Chien,Software and Computational Systems Lab at LMU Munich,java,"software verification, program analysis","CPAchecker now supports reachability analysis, which can search for a path from the initial program location to the error location. This project is a Proof of Concept, to implement the Backward Reachability Analysis, i.e. search for a path from the error location to the initial location. The main goal of this project is to implement a control-flow automata (CFA) transformer in CPAchecker that reverses program executions by following the transitions backward, such that for any program path in the original CFA, there is a corresponding equisatisfiable path in reverse CFA. After the transformation, the existing analysis can be applied to verify the reverse CFA, thus enabling the Backward Reachability Analysis.",https://summerofcode.withgoogle.com/programs/2023/projects/GUaldtJG
Group Comparison - Generic Assay Categorical and Binary data implementation,JiahangLi,https://docs.google.com/document/d/1U7K3VgYwo3zz9K7cDyGq99xcFq7TUBJJRDOamRQq3oE/edit?usp=sharing,"Gaofei, Ryan Fu",cBioPortal for Cancer Genomics,"javascript, java, sql",media,"The objective of this project is to improve the functionality of cBioPortal by introducing support for categorical and binary data analysis and visualization in the Generic Assay format. The project involves implementing new services and controllers in the backend to provide the needed GenericAssayData for the frontend. The frontend will support features to allow users to perform Fisher's exact test for binary data and chi-square test for categorical data, and to view the results in a clear and easy-to-understand bar chart and table format. In addition, end-to-end tests will be added to ensure the feature works as expected. Dliverables include wrapped and tested visualization functionalities in comparison page and comparison tab in results.",https://summerofcode.withgoogle.com/programs/2023/projects/QiwswzZ8
Graph Construction for Charged Particle Tracking using Point Cloud Networks,Jian Park,https://gist.github.com/jnpark3/f30662b6948cd7e1a346da76c8116daa,Kilian Lieret,CERN-HSF,"python, pytorch, Pytorch Geometric, Ray Tune","machine learning, graph neural networks, Point Cloud Networks, Charged Particle Tracking","Graph neural networks (GNNs) have shown great potential in solving the complex problem of charged particle tracking, which is an essential task in high-energy physics. Charged particle tracking entails reconstructing the trajectory of charged particles produced after particle collisions, and the scalability of GNNs could enable this task to be performed with high efficiency. The first step in applying GNNs to particle detector data is to construct edges between hits, which then enables a GNN to operate on the graph and generate predicted trajectories. The current process for graph construction involves constructing all possible edges first and then removing edges that violate manually set geometric constraints. This project aims to improve the accuracy and efficiency of this graph construction step by creating a point cloud network (PCN) with PyTorch Geometric to perform this task. PCNs are a recently developed class of neural networks that operate directly on point cloud data, and they could be used to perform graph construction without manually selected geometric constraints and with fewer edge constructions in total. This project also involves optimizing hyperparameters for the PCN model architecture and the training process by using Ray tune and Optuna.",https://summerofcode.withgoogle.com/programs/2023/projects/bL22MDFU
pgagroal: simple vault implemention,Jichen,https://solokyo.github.io/2023/11/06/GSoC-2023-Final-Submission/,"Jesper Pedersen, Athila Mattos, Dustin Kut Moy Cheung",PostgreSQL,"c, postgresql","rdbms, postgresql, Connection Pool, Vault","pgagroal is a high-performance protocol-native connection pool for PostgreSQL. It also manages authentication for users who try to access the database. Application software does a terrible job of keeping secrets. For example, the password to the database might be hard coded in their source code or written as plain text in the configuration file. Or it might accidentally log the secret to a file or print out as debug info. By implementing a simple vault, we can have the ability to issue a dynamically generated time-limited secret that map to the actual secret (password of the database in our case), and this will prevent leaking the actual secret to users.",https://summerofcode.withgoogle.com/programs/2023/projects/Vvee3Yjk
Supporting Pathway Commons and ssGSEA in clusterProfiler,JIGYASA GUPTA,https://gist.github.com/Jigyasa-G/543d3a96463308479bb86aa866323391,"AugustinL, Guangchuang Yu",National Resource for Network Biology (NRNB),"r, Rstudio","data visualization, bioinformatics, data analysis, Pathway analysis","clusterProfiler is an efficient package that provides a universal interface for gene functional annotation from a variety of resources and is extremely helpful in data manipulation and its visualization. The idea of integrating Pathway Commons, which is an aggregated database of molecular interactions of approximately 20 databases, brings in scope to analyze data and obtain better results. However, the data lies in GMT format due to which it requires additional functions to bind pathways with their name and gene. It is then saved in RDS format to feed the enricher() function to obtain an enrichResult object. We perform ORA and GSEA using some functions defined in R script on Pathway Commons data to support it in clusterProfiler. With the advent of a new technique ssGSEA (single sample Gene Set Enrichment Analysis) used to quantify the activity of a specific pathway or gene set in individual sample,for example, analyzing heterogeneous samples (tumor samples), integration of ssGSEA with clusterProfiler will help in better medical analyses. Thus, using packages like GSVA(Gene set variation analysis) and GenePattern we can calculate enrichment scores in permutations and support ssGSEA in clusterProfiler.",https://summerofcode.withgoogle.com/programs/2023/projects/GYJ9YvJD
Algorithms for Dynamical Systems,Jing Guo,https://guoj.org/second-gsoc.html,"BenH, Alexander Galarraga",SageMath,"python, sage","mathematics, Number theory","The goals of this project is to implement two algorithmic improvements for Sage: 1) Improve current implementation of Krumm's algorithms for points of bounded heights to work over rings of integers in number fields, and 2) generalize Wells' algorithm for computing the canonical heights beyond QQ to other applicable number fields.",https://summerofcode.withgoogle.com/programs/2023/projects/pOEctuOr
Anomaly Segmentation Metrics for anomalib,Joao P C Bertoldo,https://gist.github.com/jpcbertoldo/12553b7eaa97cfbf3e55bfd7d1cafe88,"Dick Ameln, Samet Akcay",OpenVINO Toolkit,"python, pytorch, PyTorch Lightning","machine learning, computer vision, anomaly detection","This project proposes novel evaluation metrics for anomaly segmentation in computer vision, taking into account pixel-level and spatial information. The aim is to provide a more comprehensive evaluation of anomaly segmentation algorithms, aiding researchers and practitioners in selecting and fine-tuning models. The first proposed metric is the False Positive Blob Relative Volume (FP-BRV), which accounts for the visual nuisance of false positive pixels, complementing the Per-Region Overlap (PRO). The proposed metric will be evaluated on popular anomaly segmentation public datasets and visually validated. Milestones: prototype implementation, testing and validation on public datasets, production implementation, optimization/unit testing/documentation, and research paper writing. See ""Section 5 Detailed project proposal"" in the PDF for details and a timeline.",https://summerofcode.withgoogle.com/programs/2023/projects/SPMopugd
Implementing a KDE API inside FURY with GPU based processing,João Victor Dell Agli Floriano,https://gist.github.com/JoaoDell/93ea1469ae58aba5429bf265cc874f37,"Javier Guaje, filipisilva, Bruno Messias",Python Software Foundation,"python, opengl, Vtk, GLSL","scientific computing, scientific visualization, computer graphics, 3D Rendering, Data viz","Scientific visualization nowadays is a big and extremely important area of scientific computing, because as Richard Hamming once said, “the purpose of (scientific) computing is insight, not numbers”, and a good visualization of data can be determinant on its comprehension. In that matter, KDE, or Kernel Density Estimation, is a visualization technique that provides a good macro visualization of large and complex data sets, like point clouds, well summarizing their spatial distribution in smooth areas. The plan of this project is to FURY have a KDE implementation, aiming for fast, real-time visualization. For this to work, several techniques should be applied, and for that, the proposal is to use framebuffers, texture-like objects that can be used by the fragment shader for calculations, for the calculations of the density estimations, and billboards for the rendering of the results. This proposal is based on the WebGL KDE visualization by Filipi Nascimento.",https://summerofcode.withgoogle.com/programs/2023/projects/ED0203De
Adapting IR Load Semantics to Freeze All or Freeze Only Uninitialized Data,John McIver,https://github.com/jmciver/gsoc23-RemoveUndef,Nuno Lopes,LLVM Compiler Infrastructure,"llvm, c++, clang","optimization, compiler, IR",This proposal outlines a continuation of the Google Summer of Code (GSoC) 2022 topic to move uninitialized memory to poison semantics. Starting with GSoC 2022 and continuing over the last year several potential solutions have been developed and shared with the community via patches and RFCs. This has helped to build further understanding of both front-end and internal LLVM limitations. Based on the latest RFC two possible semantic solutions have been identified that allow loads to migrate to poison by default and provide backward compatibility with the current load undef semantics. This is accomplished by either freezing all bits regardless of initialization state or byte-level freezing based on initialization state. By implementing both solutions real-world performance metrics and maintenance impact can be evaluated by the LLVM community. This work will increase use of poison semantics further contributing to the eventual deprecation of undef.,https://summerofcode.withgoogle.com/programs/2023/projects/sc4OauXM
Empowering Julia-based Data Science with MLflow,Jose Esparza,https://forem.julialang.org/pebeto/adding-mlflow-tracking-to-mlj-gsoc23-38e3,Anthony Blaom,The Julia Language,"julia, rest, MLJ, MLflow","machine learning, Experiment Tracking, ML Operations, ML Lifecycle","MLFlowClient.jl lacks of updates regarding new features coming from the original Python package. Some effort is needed to ensure new version methods. My plan is to implement that novel features using pure Julia, increasing compatibility; and also new functionality to allow communication with MLJ.",https://summerofcode.withgoogle.com/programs/2023/projects/iRxuzeGJ
Modernizing OmegaUp: A Proposal for Revamped UI/UX and Web Design,Jose Galo,https://drive.google.com/file/d/1w2le3yZK8qeBRpamxlkA0GQ7CN3Rd4xg/view?usp=sharing,"Hugo Dueñas, Juan Gomez",omegaUp,"bootstrap, php, typescript, vue.js, Figma","ui, ux, Web design","In my proposal, I'm suggesting we give the oemgaUp website a fresh new look and feel. The goal of this redesign is to make the website more modern, visually appealing, and easy to navigate. By making these changes, I believe we can create a more user-friendly and accessible website that will attract more visitors and increase engagement with the organization's content.",https://summerofcode.withgoogle.com/programs/2023/projects/UHfWRUyl
Realtime object tracking models,Jose Rios,https://gist.github.com/guanarp/9e37f53ac6dd8497ee6e0c15c5d12ed4,Viktor Bebnev,OpenCV,"python, opencv, c++, Python Notebooks","machine learning, computer vision, edge devices","Deep learning techniques impressively improve the performance of object tracking algorithms. Such algorithms have been deployed on some drones and robot dogs, with which people can record videos in a distance without the concern of losing cameras. Computation capacity and power supply can be critical on edge devices such as drones and robot dogs. Object tracking models should be real-time and power-efficient enough to run on edge devices.",https://summerofcode.withgoogle.com/programs/2023/projects/5ehLZkp3
OpenSCAD OpenGL Modernization,Joseph Black,https://github.com/openscad/openscad/pull/4752,Torsten Paul,BRL-CAD,"opengl, c++, qt",graphics,The project would undertake the necessary code restructuring to facilitate OpenSCAD's transition to rendering with modern OpenGL. An important early step will be adding clear delineation between code paths that result in underlying calls to the two different rendering methods. This groundwork would then grow into developer-controlled flags that would enable the eventual deprecation of the legacy fixed-function calls. Part of the process will involve assessing the readability and testability of higher-level rendering classes and performing refactoring in line with guidance from other developers. Another key area of focus includes assessing and implementing any remaining workarounds needed to replicate the information exchanged between OpenCSG and the legacy rendering classes.,https://summerofcode.withgoogle.com/programs/2023/projects/87gAMrBX
GSoC with Zulip: Cluster of priority features.,Joseph Ho,https://gist.github.com/Joelute/ddf62916efd58fbed7e183c4ab298713,"Vishnu `KS, Sumanth Rao",Zulip,"python, javascript, django, Handlebars","integration, bots, Compose","There are dozens of issues and features to be implemented in the issue trackers. As well as a bunch of pull requests that have quality work done already, but just requires a bit of revival. We want to cut down on these issues and implement highly requested features from the community.",https://summerofcode.withgoogle.com/programs/2023/projects/HsZfLFjN
A Pipeline for NeRF Experimentation and Visualization,Joshua Ahn,https://github.com/OpenCXdev/NerfNet,"Gary Bradski, Douglas B Lee",OpenCV,"python, opencv, c++, cuda, pytorch, Open3D, Doxygen, COLMAP, YouTube","web, machine learning, computer vision, data processing, Camera calibration, API documentation","The goal for this project is to develop a NeRF model training pipeline within the OpenCV library. The end result will be a fully functioning data processing pipeline that is well integrated with the NeRF model training procedure, as well as online documentation that detail how to use the pipelines properly. There are 3 key deliverables for this project. First, implement data loaders that can process user-taken images of real-world scenes. This will involve using the COLMAP and OpenCV data processing pipelines in order to extract the camera poses and epipolar geometry of the scene; these are requirements for the model's ability to learn a meaningful representation of the given scene. Second, build, train, and test the actual NeRF model. This will involve using PyTorch's built-in CUDA support and extensive usage of the PyTorch library as a whole in order to incorporate critical components of the NeRF architecture such as positional encoding, ray sampling, and regularization into our model design. This step will also include rendering procedures that will allow users to extract images/videos, depth maps, and other logging information such as the training loss curve from the fully trained model. Third, create simple and intuitive documentation on how to use both the data loaders and the NeRF code base. This will involve creating a page on OpenCV's documentation (via Doxygen) that will list out specific terminal commands that the user should use to train the model. It will also include a summary of required packages, recommended environment configurations, and links to other helpful resources such as YouTube video demonstrations, which will all be geared towards increasing the usability and accessibility of the pipeline.",https://summerofcode.withgoogle.com/programs/2023/projects/3VJ0YoAz
DataFrame Improvements,Joshua Jose Dias Barreto,https://gist.github.com/Joshua-Dias-Barreto/47c6162d3670d3d7e5792a15c1b87740,"Larisa Safina, Cyril Ferlicot",Pharo Consortium,"smalltalk, pharo","visualization, machine learning, data science","This project aims at bridging the gap between popular DataFrames and the Pharo DataFrame. This can be done by adding more functionality to the Pharo DataFrame. The DataFrame API in Pharo will be improved by fixing existing features and adding new ones. This project also aims to make the Pharo AI DataFrame Inspector interactive. This will be achieved by enabling users to perform operations such as editing, searching, sorting, etc., directly from within the DataFrame Inspector itself.",https://summerofcode.withgoogle.com/programs/2023/projects/jaHJQ1K3
Reducing Garbage Collection Cost with Fibers in Ruby,Joyce Chen,https://sites.google.com/view/joycechen-gsoc2023/home,Samuel Williams,Ruby,"c, ruby","garbage collection, Memory Management, Fibers","Ruby uses garbage collection (GC) to automatically reclaim memory that was allocated by a program, but no longer used. Consequently, users do not have to manually manage memory, and can more easily avoid memory management issues such as memory leak. However, the program being executed must be stopped for the GC to run. Therefore the efficiency of the GC algorithm will affect the performance of the program. The project’s goal is to reduce the cost of GC when there are multiple fibers. Fibers are a memory efficient way to implement cooperative concurrency. Programmers control scheduling of the fiber instead of the operating system, making it possible to better allocate CPU resources. Ruby 3.0, released in 2020, added a Fiber Scheduler, which enables asynchronous behaviour in programs. Ruby’s GC scans through a program’s memory at various points during its execution, identifies which objects are no longer used, and removes them using an incremental tri-color mark and sweep algorithm and generational garbage collection. Improving the GC cost when there are many fibers will enhance the performance of Ruby programs, particularly asynchronous Ruby programs making use of fibers. Deliverables: 1. Reproducible test that triggers GC for fibers 2. Identification of GC bottlenecks for fibers 3. Reduction of bottlenecks compared to benchmark test through improvements to GC 4. Documentation of the above",https://summerofcode.withgoogle.com/programs/2023/projects/dl5PkU7O
Port the Valve Infra to Raspberry Pis,jpy794,https://gitlab.freedesktop.org/mupuf/boot2ipxe,Martin Roukala,X.Org Foundation,"python, Podman",ci,"Valve CI Infrastructure currently requires to be run on an x86_64 gateway, which raises its deployment and maintenance costs. Single board computers such as Raspberry Pi offer a cheaper and easier to maintain alternative. The goal of the project is to port Valve CI Infrastructure to Raspberry Pis.",https://summerofcode.withgoogle.com/programs/2023/projects/IyeWQriR
Improve and maintain 12 Sugar activities,Jriyyya,https://github.com/sugarlabs/GSoC/blob/master/archives/2023/student-reports/Improve-and-Maintain-12-Sugar-activities-Riya-Jain.md,"Chihurumnaya Ibiam, Sourabha G",Sugar Labs,"pygame, Python3, Python2, gtk+ 3","game, Python Application, Desktop software","Sugar has a lot of activities, with 250+ on GitHub, and more elsewhere. These have scope for improvement; bugs, features, updated human translations, and release. This project will involve working on at least 12 activities to improve them.",https://summerofcode.withgoogle.com/programs/2023/projects/3SXikrbB
Refactor Metrics Interface/Implementation in Mantis,Jue Wu,https://docs.google.com/document/d/1cUqS8o9fyAnFsRrHskD3vdvW_l_h3xFJFn45WubdnlY/edit?usp=sharing,hmittal83,Mantis,"java, Rxjava, Netty","distributed systems, Operational Analytics","Improve the Mantis metrics system by replacing the existing implementation with a more standardized and flexible OSS library which should be easier to support other time-series databases, reduce complexity, and improve scalability.",https://summerofcode.withgoogle.com/programs/2023/projects/t0aEL7iA
PyBaMM Techno-Economic Analysis Library,Julian Evers,https://pybamm.org/gsoc/2023/julian-evers/,"Robert Timms, Valentin Sulzer, Jacqueline Edge",NumFOCUS,python,Battery modeling,"A very interesting and nice thing during the development of batteries are back-of-the-envelope estimations. An example might be to estimate an areal loading of active material necessary to compete with another active material, which has different capacity and potential. The different loading would also influence the entire cell and process design such that a coupled cell-process-cost model could give much more accurate and holistic cost estimates than single rules of thumb can. The coupling of cell and process can be achieved by decomposing the process into decoupled process units, which are then connected with cell parameters, e.g. areal loadings. The flexible submodel structure of PyBaMM would enable the use of independent “plug and play” economics e.g. for modeling different processes and economies of scale, as well as the combination of other PyBaMM models to estimate key values for degradation and thermal performance. Making it possible e.g. to study the interplay between formation and degradation accompanied with costs and other key values such as energy densities.",https://summerofcode.withgoogle.com/programs/2023/projects/OE5AUkm6
Integrating the SMT solver dReal to the framework JavaSMT,Julius Brehme,https://juliusbrehme.github.io/GSoC_Submission/,Daniel Baier,Software and Computational Systems Lab at LMU Munich,"java, jni","SAT & SMT solving, dReal","SMT solvers are widely utilized in computer-guided verification of computer programs and artificial intelligence. With a multitude of theories employed in these solvers, it is beneficial to have access to a diverse range of solvers and to minimize the challenge of learning a new API for each of them. Using the solver’s own API directly makes it difficult to switch to another solver without rewriting extensive parts of the application, as there is no standardized binary API for SMT solvers. Also, since these SMT solvers have varying degrees of capabilities and performance and may not accept the same input, frameworks were created, that offer a unified API to several SMT solvers. JavaSMT has exactly these attributes, a common API for SMT solvers. The framework provides access to a variety of solvers created using Java and other programming languages. Although most solvers share a common set of supported theories and features, their availability of extra theories and performance may differ. Therefore, the inclusion of additional solvers in the framework is advantageous to its users. SMT formulas over the real numbers can encode a wide range of problems in theorem proving and formal verification. Such formulas are very hard to solve when nonlinear functions are involved. For that reason, the SMT solver dReal will be implemented in JavaSMT. The SMT solver dReal is a solver that solves nonlinear formulas over the reals. The solver can handle various nonlinear real functions such as polynomials, trigonometric functions, exponential functions, etc. The goal of the project will be to integrate the SMT solver dReal into the JavaSMT framework and to include it in the existing JavaSMT tests.",https://summerofcode.withgoogle.com/programs/2023/projects/nveyV1Qh
Update RocksDB to the latest upstream version,Junqi Xie,https://jira.mariadb.org/browse/MDEV-30610,LinuxJedi,MariaDB,"mariadb, c++, RocksDB","database, storage","RocksDB is an embeddable persistent key-value store for fast storage. MariaDB has integrated this engine into the database since version 10.2.5. However, the ported engine, MariaRocks, is currently lagging behind the main branch of RocksDB. The goal of this project is to update MariaRocks to the latest release of RocksDB by incorporating changes from Facebook’s MyRocks. This update will include API changes, bug fixes, and improvements.",https://summerofcode.withgoogle.com/programs/2023/projects/slotQabK
Migrating Zulip's JavaScript Codebase to TypeScript,Junyao Chen,https://gist.github.com/jychen630/9373449c252b5c66790afa6c073c301b,"Priyank Patel, jainkuniya",Zulip,"javascript, typescript","javascript, frontend, Typing, Web App, TypeScript, software architecture","This project focuses on migrating JavaScript codebase to Typescript. Zulip is in the process of porting the main web app JavaScript codebase to TypeScrip. Zulip’s 8% of lines have been migrated while the goal for this summer will be to get that to ~75%. The challenges for migrating JS to TS include circular imports, a large number of interdependent modules, tracking down complex cycles, multiple cycles in one module, order of conversion, and understanding types and their relationships. The proposed solutions include classifying circular imports, passing callback workaround, extracting common functionality into a third module, and writing unit and integration tests to ensure the migrated codebase functions properly.",https://summerofcode.withgoogle.com/programs/2023/projects/LoUPFYyl
Landmark-based Navigation in Valhalla,Junzhen Lou,https://www.openstreetmap.org/user/Junzhen/diary/402456,"Nils Nolde, Kevin Kreiser",OpenStreetMap,"c++, Object-oriented programming, Algorithms and data structures, Data management","databases, Geographic information systems, Routing engine, Software engineeering","The aim of this project is to enhance Valhalla's route guidance by enabling landmark-based navigation/narration, which will utilize OpenStreetMap's (OSM) points of interest (POIs) to provide natural guidance. We plan to investigate the use of landmarks in route directions and develop a methodology for incorporating POIs into Valhalla's route guidance system. Our proposed methodology will be implemented and evaluated through a series of experiments designed to measure the effectiveness and usability of the landmark-based navigation system. The results of the project will contribute to our understanding of how landmarks can be utilized in route guidance systems, and hopefully lead to improvements in daily navigations. Our deliverables include new data structures for landmarks, a detailed design of database and storage, an update on existing and new components, ideally a design of new landmark enabled phrases, an improvement of direction generation process, information serialization for json responses, and an evaluation report on the effectiveness and usability of the landmark-based navigation system, etc.",https://summerofcode.withgoogle.com/programs/2023/projects/HIQ2dR9w
LDAP Capture Capabilities,JustAnda7,https://gist.github.com/JustAnda7/a0e06e73c8f1b53ad43228b3cce478c0,Op3n4M3,Metasploit,ruby,"security, LDAP, Log",This project aims to deliver a module to add capture capabilities over the LDAP protocol. This module will allow the capture of LDAP traffic and logging of the captured information like authentication information. The logged information can be used by other auxiliary and post-exploit modules to perform future actions.,https://summerofcode.withgoogle.com/programs/2023/projects/Vq4PLCzD
Use Nuclia search across all Plone properties,Justdaksh,https://gist.github.com/justdaksh/299c911f81b8ad678c08295e63034621,Steve Piercy,Plone Foundation,"python, NucliaDB","python, Web Scraping, Nucliadb","Problem Statement:- Plone is a robust and secure Content Management System that is used by a wide range of organizations worldwide. However, given the growing amount of information available on Plone websites, it can be challenging to locate the appropriate information fast given the state of Plone. Solution:- The objective of this proposal is to develop a Nuclia Plugin that will scrape websites, extract pertinent data, and index it in the Nuclia Knowledge Box. The Plugin will then be deployed to Plone websites after being merged with the current Plone knowledge Box. Set Of Deliverabilities that will be delivered:- Easy Search without multiple navigations. This will save time and increase productivity. Centralized location for all Plone-related information. Enable developers to explore new techniques, features, and solutions more easily, leading to better results and more efficient development processes. Increase the visibility of Plone and help to attract new users and contributors. Make Plone more user-friendly and increase adoption. Help to build a stronger community by encouraging collaboration.",https://summerofcode.withgoogle.com/programs/2023/projects/sjgunoJ1
Implementing Phenopackets in a Variant Discovery Pipeline,Justin Aronson,https://gist.github.com/JustinAronson/84b620a7cec2d303c29e7bea2da7ec1e,"Bob Dolin, Srikar Chamala",Global Alliance for Genomics and Health,"python, reactjs, d3.js, Exomiser","web, genomics","Variant filtration is key to rare disease discovery. For a rare disease discovery app to be successful, it must be able to cleanly represent the relevant variants in a patient’s genome. Phenopackets present a method of filtering genes based on a patient’s phenotype. Phenotype data can narrow down the set of at risk genes clinicians need to parse during rare disease discovery using tools like exomiser. This project will use phenopackets to dynamically filter variants for the purpose of rare disease discovery. This project has two deliverables, each with their own set of requirements: A method to filter genes using phenopacket data. Must be optimized for speed, given this is a dynamic application. However, speed will be limited by the FHIR Genomics Operations reference implementation response time. A clean, easily understandable presentation of variants useful for manual review. Two views should be provided: one for the most at risk variants, and another for a more detailed view of each variant in at risk genes. The former should have a graphical component. The latter does not need to have as clean of a presentation. Users should be able to identify the most at risk variants within 5-10 seconds of the page loading.",https://summerofcode.withgoogle.com/programs/2023/projects/MexIXIkK
Automating Quality Control of Datahub Submissions,Justin Jao,https://gist.github.com/justinjao/c012caa6aa5646780e2fc64292eda9f8,"Charles Haynes, Walle, Avery Wang",cBioPortal for Cancer Genomics,"docker, bash, unix, shell scripting, GitHub Actions","devops, Workflow automation, Engineering Productivity","cBioPortal allows submission of data sets to enrich its open-access cancer genomics database. Currently, new data sets can be uploaded to a separate repository for further review. However, to ensure full quality assurance, new data sets must be manually imported into an instance of cBioPortal and visually inspected to ensure the data displays correctly. This manual step is tedious, and presents a barrier to easily reviewing new submissions. To resolve this bottleneck in the review process, the proposed solution will create a new workflow that will trigger upon a new submission to automatically deploy a live staging instance of cBioPortal, with the new data set already imported. Time permitting, a second potential workflow could also be explored to further streamline the process by generating resources such as screenshots for easier visual inspection. These improvements would allow cBioPortal maintainers to more easily validate new submissions, leading to faster approvals for new data, and a higher quality database for cancer researchers.",https://summerofcode.withgoogle.com/programs/2023/projects/NH758ApJ
Create a clinical trial curation tool based on CTML from MatchMiner,Justin Singh,https://github.com/Singhj2/ctims/pull/2,"""Jag"" Prasanna Kumar Jagannathan, Hongxin, jfkonecn",cBioPortal for Cancer Genomics,"react, angular",web development,"Scope: To create a standalone React component from MatchMiner that will use Firebase to provide trial curation across multiple projects uses Requirements: • Familiarize with React, MatchMiner, OncoKB Angular and Firebase Execution • Study previous MatchMiner implementations to leverage that information into the current implementation plan • Refactor Match Miner component • Code formatting • Create standalone component that can be reused across multiple projects • Employ best practice on naming conventions and proper de-structuring Constraints: • Time • Lack of working experience in Angular Risks: • Can only build upon the component, cannot transform or remove features • Unexpected consequences of changes and ensuring failures will be localized to the component Deliverables Task 1: Strip down Match MinerAngular to base component, its most reusable part, via a DRY method. Task 2: Re-factor MatchMiner in React that will be extendable as a stateless component Task 3: Ensure library component in React is developer friendly in order to not burden the End Dev Task 4: Testing in staging environment to ensure proper functionality",https://summerofcode.withgoogle.com/programs/2023/projects/xSitA8Cr
Support Shader-Based Filters in p5.js,Justin Wong,https://wonger.dev/posts/p5js-shader-filters,"Austin Slominski, So Sun Park, Adam Ferriss",Processing Foundation,"javascript, webgl","documentation, performance, image processing, Shaders, Web Graphics","What’s the need for shader-based filters? Image filters in p5.js are too slow with their current pixel-by-pixel loop implementation. It frustrates students and other users who have limited computer resources when some sketches run at a few frames per second. An alternate implementation of image filters using shaders will significantly improve performance. Moreover, implementing shader filters will touch on accessibility by giving users another entry point to shader programming, and by clarifying documentation about WebGL mode.",https://summerofcode.withgoogle.com/programs/2023/projects/9tXipZke
A Social web tool to facilitate rating and commenting on research reports,Jyothi Swaroop Reddy Bommareddy,https://gist.github.com/JyothiSwaroopReddy07/89c56164a48a833e2bfdc8a5256c46d1,"Suresh, JB Poline, Yohaï-Eliel BERREBY, Floris van Vugt, Vincent Larivière, Björn Brembs",INCF,"python, postgresql, javascript, react, aws, html/css, Django rest","Science publishing, social web, science portals","The currently available open-review portal helps in reviewing the research articles, By facilitating official reviewers to comment on the research article. This may be a time-consuming process and as the number of submitted articles increases, it would be difficult for a small group of reviewers to handle them and review them. The Sci-commons portal allows every enthusiastic user to review a paper and comment on it and also rate submitted articles. This enhances the quality of research articles and also decreases the review time. This can also help in gaining new perspectives from normal users. During the reviewal process, most users want to stay anonymous in their reviews. Sci-commons help in achieving this by allocating random handles for users who submitted a review. This anonymity helps in making the review process ethical, fearless, and objective.",https://summerofcode.withgoogle.com/programs/2023/projects/CzYxI4FH
License as a Service,K-vya,https://fossology.github.io/gsoc/docs/2023/laas/finalevaluation,"Gaurav Mishra, Anupam Ghosh, Avinal Kumar, Sahil Jha",FOSSology,"postgresql, go, sql","database, REST-API","It provides a convenient and effective way for organizations to manage their use of open-source licenses. With the growing popularity of open-source software, organizations are finding it more difficult to keep track of the various licenses and terms under which they are permitted to use open-source components. Open-source licenses can be complicated, making it difficult to understand how they apply to a specific piece of software or interact with other licenses. It can be used for various purposes by organizations like FOSSology and SW360 like license identification, filtering, and managing licenses.",https://summerofcode.withgoogle.com/programs/2023/projects/g9Oh9JTt
Vision Transformers for End-to-End Particle Reconstruction for the CMS Experiment,Ka Wa Ho,https://github.com/ML4SCI/E2E/tree/main/E2E_Visual_Image_Transformer_Ka_Wa_Ho,"ML4SCI, Purva Chaudhari, Ruchi Chudasama, Wenyu Zhang, Alex Campbell",Machine Learning for Science (ML4SCI),"python, machine learning, c++, cuda, pytorch","machine learning, computer vision, High Energy Physics, vision transformer, convolutional network","The goal of the project is to apply and develop “end-to-end” vision transformer (ViT)-based networks for jet-flavor identification with the CMS open data and to benchmark their accuracy performance. This is expected to improve both the accuracy and computational cost of convolutional neural networks (CNN) developed previously for similar tasks. The networks developed would also expand previous works from a binary ""light quark vs gluon jets"" tagger to multi-class ""b quark vs c quark vs light quark vs gluon jets"" tagger. The “end-to-end” here refers to a direct use of images recorded by the particle sub-detectors at the CMS for classification. It strips away the complex reconstruction algorithms and object definitions used by the CMS and paths a way to invite ideas outside of the particle physics community to tackle the difficult task of particle identification at the Large Hadron Collider.",https://summerofcode.withgoogle.com/programs/2023/projects/Oosr0bT3
Implementing MS-FINDER Functions to MS-DIAL,Kanako Hirata,https://github.com/MZmine-MS-DIAL-GSoC/gsoc2023_kanako,"Yuki Matsuzawa, Hiroshi Tsugawa, Kozo Nishida",MZmine and MS-DIAL,c#,"mass spectrometry, in silico fragmentation","MS-DIAL is a data analysis tool for metabolomics and lipidomics that supports data processing from import of mass spectrometry raw data to statistical analysis and peak identification by means of MS/MS spectral matching. MS-FINDER, a partner program of MS-DIAL, can predict molecular formulas, metabolite classes and structures for unknown spectra using in silico fragmentation. The aim of this project is to implement these MS-FINDER functions in MS-DIAL and develop its GUI to run the functions and display prediction results. That will enable more comprehensive data analysis using MS-DIAL.",https://summerofcode.withgoogle.com/programs/2023/projects/A7tRhdjB
ShardingSphere Enhance SQLNodeConverterEngine to support more MySQL SQL statements,kanha-gupta,https://gist.github.com/kanha-gupta/c62ef45c0e427a682c1e3c2801dd211a,"Trista Pan, Zhengqiang Duan, tuichenchuxin",Apache Software Foundation,"mysql, java, antlr, apache calcite",SQL parsing,"Shardingsphere federated query engine provides support for SQL statements. In the GSoc period, I have to add support for more MySQL SELECT statements so that more SQL statements can be converted into SQLNode. This can be achieved by: 1- Analysing the SQL statement I have to add support of, 2-Figure out components & logic required , 3- Make changes in SQL federation engine optimizer files , 4- Optimize parser files , 5- Make changes in TEST files to ensure test is passing successfully. After the support for More SELECT statements queries is added, The users & developers will be benefitted by utilising more SELECT queries for MySQL .",https://summerofcode.withgoogle.com/programs/2023/projects/UIxa8sz7
API: IMPROVED BACKEND PERFORMANCE AND SECURITY,Kanishka Bansode,https://github.com/kb-0311/GSoC-2023-Final-Report#readme,"Crystian Ioppolo, Kevoniat, Rumone",The Palisadoes Foundation,"graphql, typescript, node","security, web, api","The project aims to make the following changes to the talawa-api: Enforce a stricter, standard graphql-pattern to get rid of the current anti-pattern nature that exists in the API. Resolve the relations that exist within the application optimally. Caching data for MongoDB collection entities having significantly higher number of read operations than write operations using Redis in memory Cache. Monitoring changes in the API schemas and relaying the changes to the client apps using Graphql-Inspector for better versioning migrations. Implement Data Normalization on the Client side(admin-portal and talawa mobile app) cache-store using Apollo Client Normalization. Providing a standard, scalable Error Handling mechanism within the graphql API using unions and interfaces to allow a consistent relay of Errors to the Client apps which will allow them to have more control over customizing UI behavior in case of errors. Implement stricter and simpler RBAC in the API resolvers in line with the business logic. Implement SSL in the client-server layer to encrypt all data exchanged between the client apps and API. Encryption of PII data within the SSL layer and in the Database at rest for added security using AES algorithm to encrypt and decrypt PII fields.",https://summerofcode.withgoogle.com/programs/2023/projects/Q1VEwusQ
MEASURING ENERGY CONSUMPTION USING REMOTE LAB,Karanjot,https://community.kde.org/GSoc/2023/StatusReports/KaranjotSingh,"Benson Muite, Volker Krause, Nicolas Fella",KDE Community,"flask, git, r, devops, ci/cd",Remote Lab,"Sustainability is a key goal for KDE over the next two years. As part of this goal, KDE aims to measure the energy consumption of its software and eco-certify applications with the Blue Angel ecolabel. Currently, we measure the energy consumption of our software using a lab based in Berlin following the process documented in the KDE Eco Handbook (Handbook: Applying The Blue Angel Criteria To Free Software). The lab setup requires (i) a test PC (System Under Test) to run user-emulation scripts, (ii) a power meter to measure the energy consumption of the test PC, and (iii) another PC (Data Aggregator & Evaluator) to collect and analyze the output data. In the current setup, developers must rely on individuals in Berlin to test software for them on-site in the lab. This proposal aims to provide remote access to the lab in two steps: first, automating the energy measurement process, including providing a summary of the results; and second, setting up backend CI/CD integration for measuring energy consumption. By automating the process and providing remote access, we make it possible for developers to measure the energy consumption of their software from any location in the world. The increased access to the lab will enable data-driven decision-making for efficiency improvements in code and software eco-certification with agencies like the Blue Angel. The proposed project has three main goals: i) Measurement Automation: Implement a solution where a developer provides as input three scripts (baseline, idle mode, and standard usage scenario) with a config file and automatically obtains a summary of results from OSCAR (Open source Software Consumption Analysis in R). ii) Remote Access 1: Implement a CI/CD pipeline as a backend solution for performing the energy consumption measurements in the remote energy measurement lab.",https://summerofcode.withgoogle.com/programs/2023/projects/IFkJPy65
Multi-modal Stance Detection on Television News,KaranjotSingh,https://github.com/karanjotsv/news_broadcast.git,"Francis Steen, Homa Hosseinmardi, Stuart Soroka",Red Hen Lab,"python, tensorflow, pytorch","deep learning, Multi-modal representation learning, stance detection","With the increased American viewership of cable news stations, it has become important to understand the stance of the news stories, relating to sensitive topics, curated by these stations along with the demographics of their viewership. It is witnessed in recent studies how minor verbal tweaks can lead individuals to believe a certain community being socially distant and indifferent, making it necessary to detect the underlying bias if any, among news stories. This proposal focuses on developing a stance detection pipeline for television news stories incorporating all three modalities i.e. video feed, speech utterances and transcripts. The focus is on capturing global characteristics of each modality and then passing them simultaneously through a multi-modal setting including a series of Multi-modal Transformers to induce cross-modal attention across distinct modalities to generate a generic feature representation. These feature representations will be employed to train a classification head to output the stance of a news story.",https://summerofcode.withgoogle.com/programs/2023/projects/vewW5EEx
Improving FreeBSD User Emulation of the Armv7 Architecture,Kariiem,https://gitlab.com/Kariiem/qemu/-/blob/master/GSoC23.org,Warner Losh,QEMU,"c, qemu, freebsd","development tools, infrastructure","The proposal is about improving the QEMU emulator for the armv7 architecture on FreeBSD OS, it's goal is to get a simple C++ hello-world program to compile and run inside an armv7 jail hosted on an amd64 machine, using clang. To achieve this, about 32 syscalls need to be implemented for the qemu-bsd-user master branch, they are already implemented in the blitz branch, by the project mentor. The project is to add them to the master branch, perform testing and debugging of any errors, add them in a series of patches, each should pass the code review guidelines set up by QEMU developers. The solution starts by getting a stack trace of the syscalls that the compiler calls when using the blitz build of qemu-bsd-user, then compare them to the ones that succeed when using the master build of the qemu-bsd-user. Having done this, now we know which syscall are already added and those that are not. Now we proceed to add the missing ones, the project plan is included in the proposal. I will be delivering 32 patches to the qemu-devel mailing list, each one corresponding to a missing syscall.",https://summerofcode.withgoogle.com/programs/2023/projects/nPd0n4mh
Develop new features for Cytoscape App-cyPlot,Kartik Kumar Pawar,https://github.com/RBVI/CyPlot/tree/Develop-Kartik,"Alex Pico, Scooter, Yihang Xin",National Resource for Network Biology (NRNB),"javascript, java, react, html, Cytoscape, plotly.js","ui, data visualisation, Linear Regression","This project involves updating cyPlot(a Cytoscape app written in JAVA) which provides the ability to plot data through GUI or CyCommands/REST. CyPlot uses plotly.js to achieve plot related functions. CyPlot also customizes plotly.js and PlotlyEditor to suit the needs of CyPlot. It currently supports plots including heatmaps, violin plots, volcano plots, dot plots, line graphs, and scatter plots. The main goals of this project include: 1. Add Histogram as an additional plot type. 2. Implement log scales for scatter plot, line plot and histogram plot. 3. Support linear regression. 4. Updated user interface (UI)",https://summerofcode.withgoogle.com/programs/2023/projects/8MUpOz28
Self-Supervised Learning for Strong Gravitational Lensing,Kartik Sachdev,https://github.com/ML4SCI/DeepLense/tree/main/Transformers_Classification_DeepLense_Kartik_Sachdev,"Yurii Halychanskyi, Michael Toomey, PG Guan",Machine Learning for Science (ML4SCI),"python, pytorch, WandB","computer vision, deep learning, Self-Supervised Learning","Supervised learning might be challenging in cases where there are extremely few known instances in a given category. This is a common occurrence in the case of Strong gravitational lensing images when samples from one or more classes are scarcer than others. On the other hand, when there are few data labels available for supervision, Self-Supervised Learning (SSL) has been shown to perform better than conventional supervised learning. SSL can also create meaningful representations from very vast unlabelled datasets that would be challenging or impossible to label manually. Additionally, transformer-based architectures recently have emerged as a paradigm to solve a wide range of tasks in computer vision from image classification to object detection. They have a number of advantages over traditional methods, including dynamic weight adjustment based on input features, global context, and improved generalization. Thus, the project aims to train transformer architecture in Self-Supervised Learning fashion to learn generic features. These features could then be used in different downstream tasks such as image classification or regression.",https://summerofcode.withgoogle.com/programs/2023/projects/vOCJj7R0
Web UI for visualization and exploration 📊,kartik-gupta-ij,https://gist.github.com/kartik-gupta-ij/b5610040aa22334120dfe1313ca31229,Andrey Vasnetsov,Qdrant,"javascript, react, rest, openapi, MUI","web, front-end, ui","Problem: Qdrant, a vector search engine used for similarity search and clustering, lacks the necessary functionality to effectively visualize and explore vector data. This results in users relying on external tools or code to analyze and visualize their data, which can be time-consuming and require specialized knowledge. Thus, there is a critical gap in the platform's functionality that needs to be addressed. Solution: To address this issue, a web-based user interface will be developed that will provide l an accessible and user-friendly platform for users to interact with and explore their vector data. This tool will allow users to quickly visualize their data, perform exploratory data analysis, and gain insights into their data without relying on external code. Additionally, a web-based interface will be more accessible to a broader range of users, including those without advanced programming or data analysis skills. Deliverables: The proposed project aims to create a user-friendly web application with a comprehensive set of tools for managing and analyzing data. The application will be visually appealing, easy to use, and accessible on multiple devices. Documentation will also be provided to ensure ease of use and further development. The final deliverables will include a functional and deployable web-based UI for Qdrant that addresses the critical gap in the platform's functionality, making it more accessible, user-friendly, and practical for a wider range of users.",https://summerofcode.withgoogle.com/programs/2023/projects/kvzZHPpj
iOS versions of Android components,Kasy,https://medium.com/@sophian.kashish/my-google-summer-of-code-contribution-journey-mit-app-inventor-c47e10584226,"Evan Patton, David Kim (MIT)",MIT App Inventor,"javascript, java, gwt, swift",iOS development,"The project ""iOS versions of Android components"" aims to develop iOS counterparts of popular Android components that are widely used in mobile app development. The objective is to provide iOS developers with an easier transition between the two platforms, by providing iOS versions of Android components that they are already familiar with. The project will involve identifying and analyzing popular Android components, understanding their functionality and behavior, and then developing their iOS counterparts using Apple's development tools and technologies such as Xcode and Swift. The iOS versions of Android components will be designed to be compatible with the latest versions of iOS, including iOS 14 and higher. The components will be thoroughly tested to ensure compatibility and reliability across different devices and operating system versions. This project will be beneficial to developers who are familiar with Android development and are looking to transition to iOS development. It will also be useful for iOS developers who want to incorporate popular Android components into their iOS apps. Overall, the project aims to improve the ease of transition between Android and iOS development, and ultimately enhance the user experience of mobile apps across both platforms.",https://summerofcode.withgoogle.com/programs/2023/projects/PRXU1B2l
Updating p5js.org Site Documentation and Accessibility,Kathryn Lichlyter,https://www.klich.co/project/p5-js-documentation-accessibility,"Paula Isabel Signo, Caleb Foss (they/them)",Processing Foundation,"github, html, css, js, p5.js","documentation, accessibility, Usability, Website, Technical Writing","This project aims to improve the accessibility of the p5js.org site by conducting an accessibility audit to gauge the current deficits of the platform, prioritizing what changes and/or additions need to be made to improve accessibility, inclusion, and usability, and seeing those changes through by re-coding and/or re-designing the appropriate aspects of the site. This work will be completed during the months of May through August 2023, under the supervision of a mentor.",https://summerofcode.withgoogle.com/programs/2023/projects/LnJrJmjI
Rewriting the pg_chameleon SQL library,Kaustubh M,https://kaustubh.page/posts/google-summer-of-code-2023-at-postgres/,"Andreas 'ads' Scherbaum, Federico Campoli",PostgreSQL,"python, mysql, postgresql, regexp","database, Parsing","The pg_chameleon library translates DDL from MySQL dialect to PostgreSQL dialect. In doing this, there is an intermediate tokenization step. This step makes sense of the input DDL by identifying parts of the DDL such as command, table name, and column definitions. This has currently gotten quite big and hard to change. The scope of this project would be to make it simpler and easy to change. Once that is done, we go on to expand its capabilities so that it can make changes before returning its output, parse the CREATE INDEX statement, and ignore some specific statements when required.",https://summerofcode.withgoogle.com/programs/2023/projects/VnzdAl4z
Refactor Plus packages to utilize new Dart 3 language features - Kavan Desai,Kavan Devangbhai Desai,https://github.com/KAVAN-DESAI/Google_Summer_of_Code-2023-Dart/blob/main/README.md,"Majid Hajian, Abdullah Deshmukh",Dart,Dart 3,"Package Development, Federated Plugins","As the Dart community has the latest Dart 3 alpha release version, the flutter community's plus plugin needs to get upgraded with the Dart 3 new language features. As Dart 3 provides plethora of interesting features which can be used in plus plugins. As plus plugin depends on native calls which can be overcome by interop feature. The goal of this project is to enhance the Plus packages by utilising the new features of the Dart 3 language, such as records, pattern matching, and direct platform library interop, which are not supported by the present version.",https://summerofcode.withgoogle.com/programs/2023/projects/cyvgP38Y
nx_parallel: a parallel backend for NetworkX + nx-guides Contributor Guide and Traversal Notebook,Kavish Senthilkumar,https://docs.google.com/document/d/1aGnYhUlbT970HkipDZ4K7R4qqTtid29tmSFYT98hYyw/edit,"MridulS, dschult",NumFOCUS,"python, Jupyter Notebook","education, python, Graph Theory, Jupyter notebook","NetworkX is a Python package offering a large set of algorithms and tools for the study and manipulation of graphs. Users have requested parallel implementations of many algorithms, something especially relevant with the rising interest in machine learning and, as a result, parallel computation. As such, I built the foundation for nx_parallel, a parallel backend to NetworkX that makes use of its plugin dispatch architecture, an experimental feature. I parallelized multiple NetworkX functions in nx_parallel, and created the structure for future efforts to build out the parallel backend. In addition, although the graph algorithms in NetworkX are well-documented, users benefit from explanations and example uses of the algorithms. To satisfy this need, NetworkX has created nx-guides, which are pedagogical Jupyter Notebooks that clearly explain and experimentally explore (with examples) algorithms implemented in NetworkX. I added a notebook to nx-guides where I explain the traversal algorithms provided by NetworkX. In addition, new contributors currently do not have a roadmap for contributing to nx-guides, as mentioned by @MridulS in community meeting notes. In addition to my pedagogical notebooks, I finalized an easy-to-follow contributing guide for nx-guides.",https://summerofcode.withgoogle.com/programs/2023/projects/3FX4575A
BookBrainz: Import Other Open Databases,kellnerd,https://blog.metabrainz.org/2023/11/06/gsoc-2023-reviving-the-bookbrainz-importer-project/,Monkey,MetaBrainz Foundation Inc,"postgresql, node.js, typescript, MARC 21","web, open data, Database Import","BookBrainz still has a relatively small community and contains less entities than other comparable databases. Therefore we want to provide a way to import available collections of library records into the database while still ensuring that they meet BookBrainz' high data quality standards. From a previous GSoC project, the database schema already contains additional tables set up for that purpose, where the imports will await a user's approval before becoming a fully accepted entity in the database. The project will require processing very large data dumps (e.g. MARC records or JSON files) in a robust way and transforming entities from one database schema to the BookBrainz schema. Additionally the whole process should be repeatable without creating duplicate entries.",https://summerofcode.withgoogle.com/programs/2023/projects/5YSjIDh0
Polygon repair,Ken Arroyo Ohori,https://github.com/CGAL/cgal/issues/7699,"sloriot, Andreas Fabri",CGAL Project,c++,"graphics, gis, triangulation, Polygons","Polygons are defined by one outer ring and possibly multiple inner rings representing holes, where each ring is usually represented as a sequence of points. This allows for several undesirable configurations, such as self-intersecting rings, badly nested rings (inner outside outer), and inner rings that split the interior of the polygon into multiple disjoint parts. Such undesirable configurations are considered as invalid polygons in many applications, such as in Geographic Information Systems through ISO 19107. The aim of this project is to incorporate the polygon repair method originally described in https://doi.org/10.1016/j.cageo.2014.01.009 (but later improved) as a CGAL package. This method consists of three steps: (1) a constrained triangulation of the polygon, (2) labelling of its faces as interior/exterior, (3) extraction of the resulting polygon(s) from the sets of labelled triangular faces. The method is already implemented using CGAL and freely available as prepair: https://github.com/tudelft3d/prepair. Integrating it with CGAL as a new package would likely involve switching the code's GDAL dependency with new functions for native CGAL types, adding some functionality in the CGAL 2D/3D Triangulations package (proper deletion of constraints), and the writing of CGAL-style templated code (with support for different kernels and so on).",https://summerofcode.withgoogle.com/programs/2023/projects/ivuH5hxv
C++: Implement compiler built-ins for the standard library traits,Ken Matsui,https://github.com/ken-matsui/gsoc23/blob/main/REPORT.md,ppalka,GNU Compiler Collection (GCC),c++,"compilers, performance, optimization, libstdc++","Many C++ standard library traits are often implemented using template metaprogramming, which can result in worse compilation performance due to expensive instantiations of multiple class templates. The most likely way to address the costly instantiations is to define compiler built-in traits and get library traits to dispatch to these built-ins. It is also essential to conduct thorough benchmarking and compare the existing implementations with built-in traits, as there may be some library traits that are already optimal or non-built-in approaches that outperform built-ins. Thus, the main goal of this project is to optimize the standard library traits by incorporating built-ins and investigating alternative approaches, with the aim of enhancing the compilation performance.",https://summerofcode.withgoogle.com/programs/2023/projects/SuvI1tlp
Differentiating Real and Misaligned Introns with Machine Learning,Kenny Lam,https://kennylam8.com/projects/gsoc-2023/,"Jose Gonzalez, Adam Frankish",Genome Assembly and Annotation,python,"machine learning, genomics, bioinformatics","The advancement in the accuracy of long-read sequencing technology has allowed us to explore novel transcript variants of known genes. Preventing potentially wrong transcripts and gene annotation is essential to the science community as many rely on the annotation for decision-making. Automated workflow with a has been developed to minimise the time needed to verify and annotated those transcript variants. However, current workflows are developed using a very strict rule-set and hence many of the novel transcript variants were rejected. To address issue that strict filters rejects most of the legitimate introns, we developed IntronOrNot (ION) - a machine learning to differentiate that predicts if the intron is real or misaligned. The model accepts coordinates, .bed, and .gtf file as input. The prediction script is easy to use and achieved comparable results to sequence-based deep learning intron predictor. A standalone script that extracts introns from .gtf files is also developed.",https://summerofcode.withgoogle.com/programs/2023/projects/BrtBAPoF
Mifos X Vulnerability Assessment and Penetration Testing Project Proposal,Kerlyn Manyi,https://kerlynnkep.github.io/gsoc23/,Godfrey Kutumela,The Mifos Initiative,"POSTMan, Burp Suite, OWASP top 10, OWASP API top 10, SANS/CWE top 25 security vulnerabilities, SAST, DAST","security, Ethical Hacking, Web Application Pentesting, API Pentesting, VAPT","My mission is to perform a vulnerability assessment and penetration testing engagement on the Mifos X web application, and the Apache Fineract APIs, to identify vulnerabilities which can be exploited by malicious hackers and together with the developers, patch these known vulnerabilities. The deliverables for this project are : 1. Integrating a DAST into the Mifos X github workflow, to scan for security vulnerabilities in the running application. After the engagement, we can decide to run the workflow every now and then. 2. A penetration test engagement will be done to assess the security posture and test Mifos X application and Apache fineract APIs to assess if it is secure and free from the OWASP top 10 vulnerabilities, SANS/CWE top 25 security vulnerabilities and the OWASP API top 10 vulnerabilities. 3. A SAST will be integrated into our github workflow to scan our codes for insecure coding patterns that may lead to a security vulnerability. 4. A detailed VAPT report will be provided to help developers understand the vulnerabilities and make the patches where necessary. 5. DAST and SAST scanning reports would be made available as examples based on limited scan scope.",https://summerofcode.withgoogle.com/programs/2023/projects/6WMs3ijB
Chart library,Kevin Céspedes Arancibia,https://medium.com/@kev.cespedes.arancibia/roassal3-chart-library-gsoc-2023-final-report-f529755af3a1,"Oleksandr ZAITSEV, Akevalion, Nour Jihene Agouf",Pharo Consortium,"smalltalk, pharo, Roassal3","Chart library, Statistical charts, Violin plot, Histograms multi data set, Heatmap","Data visualization is crucial for effective communication of complex information. Chart libraries simplify chart creation with customizable templates, helping users create visually appealing and informative charts effortlessly. The goal of this project is to add missing statistical charts to Roassal3, Pharo's agile visualization engine. These charts would enable researchers, individuals and businesses to focus more on analyzing data and less on how to build a data visualization.",https://summerofcode.withgoogle.com/programs/2023/projects/BDZlSnEs
Pitest Resolution,KevinPatel,https://gist.github.com/Kevin222004/98f531c36a2c4a07a75585bf38bbd02e,"Roman Ivanov, Vyom Yadav, Andrei Paikin",checkstyle,"java, junit, Pitest, Mutation testing",enforce quality and reduce technical debt,"Checkstyle has recently introduced lots of new mutators To the mutation testing suite by the tool pitest. PIT is a state-of-the-art mutation testing system, providing gold-standard test coverage for Java and the JVM. Mutation testing ensures that it considers all conditions possible in code (and even the removal of such code), helping to ensure that the code and tests are up to the highest standards. As new mutators are added after adding all the new mutators all the mutated code is suppressed. All the suppressed mutations we have to kill as part of the project. The proposal contains the detail of the mutation testing, pitest, and approach to solve the issue and how to complete the project. After killing all the mutations every single line of code contains test cases and we make sure that non of the code is redundant and if their is some redundant code we can remove it.",https://summerofcode.withgoogle.com/programs/2023/projects/cSPoHlPW
Enable and use Dynamic Loading for wasm32-emscripten port of VLC,Khalid Masum Labnan,https://labnann.github.io/blog/gsoc/my-work-in-gsoc-at-videolan/,"robUx4, Alexandre Janniaux",VideoLAN,"c, javascript, c++, Compilation","web, Media Player, Cross Compiletaion","Currently the wasm-emscripten port of VLC (Vlc.js) does not support compilation with shared module. This project enables shared module loading for vlc.js, while finding and mitigating the limitations from underlying tools like Emscripten, Libtool and VLC itself to achieve it.",https://summerofcode.withgoogle.com/programs/2023/projects/9b461mIS
Building an LLVM Backend for PRU,Khushi Balia,https://khushi-balia.github.io/blog/2023/final-report/,"Vedant Paranjape, Kumar Abhishek, Shreyas Atre",BeagleBoard.org,"llvm, c++, PRU","embedded systems, Compiler Development, LLVM Backend","This project intends to introduce LLVM support for PRU, to enable us to use clang rather than pru-gcc. As Clang provides extremely clear and simple diagnoses and is considerably faster and requires less memory, it will be beneficial. The LLVM support will offer greater tooling, compatibility, and optimization. I will therefore build the LLVM Backend for PRU.",https://summerofcode.withgoogle.com/programs/2023/projects/nfmrQ9LL
Enhancing OpenPiton+Ariane SoC With an Open-Source Advanced Interrupt Architecture (AIA),Kinza Qamar Zaman,https://github.com/PrincetonUniversity/openpiton/pull/137,"Jonathan Balkind, Sandro Pinto",Free and Open Source Silicon Foundation,"python, systemverilog","Advanced Interrupt Architecure, Message Signaled Interrupts","The Platform Level Interrupt Controller (PLIC) is the de facto interrupt controller in RISC-V systems. However, the specification has intrinsic limitations regarding scalability and feature richness, e.g., it lacks support for Message Signal Interrupts (MSI) and virtualization. The RISC-V Advanced Interrupt Architecture (AIA) is the new reference specification for interrupt handling. RISC-V International has just ratified the AIA specification. This project aims to integrate an (in-house) open-source AIA IP into the OpenPiton+Ariane platform and conduct an in-depth evaluation of the performance and suitability for general-purpose, multithreaded, manycore processors.",https://summerofcode.withgoogle.com/programs/2023/projects/4X5wkVOC
[PolyPhy] Interactive Exploration of High-dimensional Datasets with PolyPhy and Polyglot,Kiran Deol,https://github.com/kirandeol/PolyGlot_GSoC_Final_Work_Submission,Oskar Elek,UC OSPO,"python, javascript","web, data science, ui/ux, Interpretability","PolyPhy is an interpretability tool which identifies network structures in both 2 and 3-dimensional data using the novel MCPM algorithm. Users can view and rotate the resulting network. A web app, Polyglot, enables users to navigate a map of the network, hover for detailed views of points, and filter sections of the network based on a novel similarity metric. Despite its excellent interactivity, Polyglot is limited to three precomputed networks. We propose to combine the two tools such that a user can upload any of their own networks from PolyPhy and thus greatly increase the ability of users to interact with their networks from PolyPhy.",https://summerofcode.withgoogle.com/programs/2023/projects/GOnlyhmO
Addressing Rust optimization failures in LLVM,Kohei Asano,https://khei4.github.io/gsoc2023/,Nikita Popov,LLVM Compiler Infrastructure,"llvm, c++, rust","programming language, optimization, Compiler Infrastructures","Rust is a popular system programming language that relies on LLVM for its compilation. Rust has a variety of features and paradigms and states “Zero cost abstractions” as a core value, and a variety of optimization failure issues have been discovered and reported by the language community. By addressing these issues, we can not only improve the performance of Rust binaries but also help LLVM develop more robust optimization pipelines. The goal of this project is to analyze and fix the optimization issues, especially on InstCombine/InstSimplify, SimplifyCFG, MemCpyOptimizer, and Vectorizer-related pass.",https://summerofcode.withgoogle.com/programs/2023/projects/a16FfPnb
Getting ready with ZOO-Project for the OGC Compliance Testing.,Koushikey Chhapariya,https://github.com/Koushikey4596/ZOO-Project/wiki/Final-Report,"Rajat Shinde, GFenoy, Aditi Sawant",OSGeo (Open Source Geospatial Foundation),"python, javascript, java, ogc standards, c++","web services, OSGeo, WPS","The ZOO-Project is an SDI manager which gives the users the capability of building their own map and web applications using Map server as the Open Geospatial Consortium (OGC) services engine. It is an open-source implementation of the OGC's Web Processing Service (WPS) standard. WPS Interface Standard provides rules for standardizing how inputs and outputs (requests and responses) for geospatial processing services (eg. polygon overlay). WPS also standardizes how a client can request the execution of a process, and how the output from the process is handled. The existing ZOO-Kernel supports C, C++, and JavaScript implementations. With this project, the objective is to have the ZOO-Kernel passing all the tests for WPS 1.0.0 and 2.0.0 OGC ETS. During the GSoC the main focus is on making the WPS 2.0.0 test suite working properly. The async tests are still wrong currently and should be fixed, this will be done during the GSoC. The next and final step will be to get the WPS 1.0.0 test suite working and comprehensive enough to get the Test Suite or the ZOO-Project fixed. Moving from OGC API - Processes - Part 1: Core to WPS 2.0.0. can also be added as second step for the project.",https://summerofcode.withgoogle.com/programs/2023/projects/Wx8rnGL5
Unify ref-filter formats with other --pretty formats,Kousik Sanagavarapu,https://five-sh.github.io/2023/08/26/the-final-report,"Christian Couder, Hariom Verma",Git,"shell script, git, c language","version control, dvcs","Git has an old problem of duplicated implementations of some logic. For example, Git had at least 4 different implementations to format command output for different commands. The end goal of this project is to unify these formats into a single implementation. The first task is to re-implement atoms of pretty in ref-filter, which will help remove duplicated implementations. Once that is completed, work will done to unify both the formats so that there is a single interface that formats command output in Git.",https://summerofcode.withgoogle.com/programs/2023/projects/rck3kmq2
Analytics Edge Ecosystem Workloads,Krish Aryan,https://medium.com/@krisharyan.36/gsoc-final-evaluation-report-opensuse-a51a3790026b,BWGartner,openSUSE Project,"machine learning, go, kubernetes, devops, ci/cd",MLOps,"In the fast-paced world we live in, sleep disorders have become increasingly common and are often overlooked. As part of Google Summer of Code (GSoC) project, I have developed an innovative solution to address this issue. My project focuses on building an MLOps sleep disorder prediction application using technologies like Rancher,GitHub actions, K3s, Python, and many more. This application aims to predict whether an individual has sleep disorders such as insomnia or sleep apnea, thereby aiding in early diagnosis and intervention.",https://summerofcode.withgoogle.com/programs/2023/projects/kaKd6Oy1
Idea 1 : Improving Democracy’s Library,Krish Shewani,https://github.com/krish-910/GSoC_IA,Dr Vangelis Banos,Internet Archive,"python, elasticsearch","machine learning, natural language processing","Problem to Solve : Build a system which performs the following: Enables full-text search of documents; filtered by agency, date, views Recommends similar documents based on semantic similarity of document contents Extracts significant document features such as topics, persons, locations, etc. Clusters and sorts documents by artifact topic (i.e. aerospace, environmental, nuclear, civil rights, etc.) Including: Natural language summaries for each artifact in the collection. Solution: To build the requested system, we will need several components and technologies. Here are the basic steps to achieve the functionality we require: Data ingestion: Loading the documents from a data source and extract the relevant information such as the document ID, title, content, agency, date, and views. Full-text search: Indexing the documents in a search engine such as Elasticsearch and enable full-text search with filters on agency, date, and views. Semantic similarity: Using a natural language processing model such as Doc2Vec to calculate the semantic similarity between documents and recommend similar documents. Document feature extraction: Using a named entity recognition model such as Spacy to extract significant document features such as topics, persons, locations, etc. Clustering and sorting: Using a clustering algorithm such as KMeans to group the documents into clusters based on artifact topic and sort them accordingly. Natural language summaries: we can use a summarization algorithm such as Gensim to generate natural language summaries for each document in the collection.",https://summerofcode.withgoogle.com/programs/2023/projects/MMFObnCX
STEAM Celestial Satellite tracker in real time,Krishna Agrawal,https://gist.github.com/savitore/e26c444d907df5e8f6008150e8a6ff1e,"Andreuibanez, Otávio Oliveira",Liquid Galaxy project,"android, flutter, arduino","visualization, cluster","This project represents the orbit of a satellite orbiting earth on an Arduino-controlled pointer and a Liquid Galaxy rig through a mobile application. The application offers a unique way to visualize satellite orbits using the Liquid Galaxy rig (Google Earth) and a real-world Arduino-controlled pointer. It also provides insights into satellites' movements and access to vital satellite information seamlessly within the app. I plan to develop this by getting all the satellite data from SatNOGS database through API calls. Then, we use SGP-4 model to convert TLE of a satellite to get the state (position and velocity). Then we convert the satellite state to KML format. We segregate the KML data into the various tracks to get a neater visualization of the satellite's orbit data. Then, we write the code to send KML data from our Flutter app to the Liquid Galaxy to visualize this data on the Liquid Galaxy rig. Next, we make Arduino controlled pointer which emits green laser in the direction of satellite, which is controlled by the app. First, we 3D print the STL files of the 3D projector. Then, we assemble all the components of the Arduino-controlled pointer. Then, for the application, we use flutter_bluetooth_serial package to connect and send data to HC-05 module. Then, we use SGP-4 model to get the servo motor angles for the Arduino pointer. Then, we upload code to Arduino to receive data.",https://summerofcode.withgoogle.com/programs/2023/projects/f6b4xoXN
Tutorial development with clang-repl,Krishna Narayanan,https://github.com/Krishna-13-cyber/GSoC23-LLVM/blob/main/README.md,Vassil Vassilev,LLVM Compiler Infrastructure,c++,"compiler, Clang, Repl, Interpreter, clang-repl","This project aims to develop tutorials demostrating the current capabilities of clang-repl. It also aims to investigate and research the requirements for adding clang-repl as a backend to xeus-cling. Add support for Xeus with the newly added clang-repl which is inspired from cling. The need for clang-repl is that it presents opportunities for rigorous open source development. However even though it is inspired by cling, not all of clang-repl and cling are same i.e. they are similar but work needs to be done to add xeus protocol support for clang-repl.",https://summerofcode.withgoogle.com/programs/2023/projects/qxuEqL8W
Mantis Connection Monitor,Kriti Kathuria,https://github.com/Netflix/mantis/pull/536,cal681,Mantis,"java, streaming","Connection Management, Data Platform","Mantis is a stream-processing-as-a-service platform. Mantis workers create network connections to read data from sources or write data to sinks. Instances have been observed where these network connections are not terminated properly, leading to resources remaining tied up. The focus of this project is to design and implement a Connection Monitor which will detect such connections and terminate them, ensuring the correctness and reliability of the Mantis platform. The goal is also to have observability around this phenomenon and the Connection Monitor, to allow us to understand the severity of the issue and the behavior of the system.",https://summerofcode.withgoogle.com/programs/2023/projects/AV5mJy6s
Contributor Dashboard Admin Stats Table,Kshitij J Patil,https://medium.com/@kshitijpatil1098/my-google-summer-of-code-2023-journey-with-the-oppia-foundation-bfb90f5df981,"sagangwee, Qinghao Yang",Oppia Foundation,"python, google app engine, angular, typescript, Unit testing, Apache Beam Jobs, E2E testing","web development, big data","A redesign of the admin page for the contributor dashboard. The new design will include a table view of all contributors, with important statistics such as the number of translations, questions submitted, and reviews performed. Each row in the table will represent a contributor and will be interactive, allowing the admin to modify their contribution rights as necessary. This revamp will enhance the functionality and usability of the contributor dashboard for administrators. This is an internal portal so it will be used by language and questions admins as well as super admin. The technical part includes making storage schema to store the newly curated stats, writing Apache-beam Jobs to do big Data operations to handle existing data, making controller level changes, building the frontend with angular, unit testing for frontend as well as backend, e2e tests for frontend.",https://summerofcode.withgoogle.com/programs/2023/projects/MJCgQ0DY
Project 7.1: Working on Implementing CSV Data Browser and Querying Component,Kshitiz Sareen,https://gsoc-blog-post.vercel.app/,"Anca Doloc-Mihu, Cengiz Gunay",INCF,"postgresql, javascript, bootstrap, c#, angular, typescript, vega, d3.js, observablehq, Plotly, Asp.Net","data visualization, web development, data analysis, data sharing, Project Collabortation","We are trying to solve the difficulty of collaboration among multiple users working on large datasets, particularly in analyzing datasets with many parameters and essential features that need to be filtered, measured, and analyzed. The solution is AnalySim, a data-sharing platform that simplifies collaboration by providing easy sharing, analysis, visualization, and collaboration capabilities on datasets. The first deliverable is the ability to embed Jupyter notebooks, Observablehq notebooks, and Google Collab notebooks on the website using an interactive panel. The second deliverable is an interactive panel or interface that displays a dataset's different types of features, including minimum, maximum, mean, number of non-zero, and the number of invalid values. The interface should show other visualization options like histograms, pie charts, multi-series line charts, pie charts, graphs, and visualizations representing data with more than two dimensions, e.g., 3D Scatter plots, 3D Mesh Plots, 3D line plots, box plots, and bubble charts. The third deliverable is the ability for users to add publications related to the datasets in a project. We will achieve this by creating a text editor page where users can add content, edit content, remove content, add tables, and add images. The text editor should allow users to add latex code so that users can publish mathematical analyses of the findings. We will also implement a page that gets the list of publications, which should contain clickable items that redirect to another page that details the publication. Finally, we will refactor some of the code to maintain a better project structure, encapsulate numerous fragments of the same code in another method to improve the readability of the code and remove deprecated methods.",https://summerofcode.withgoogle.com/programs/2023/projects/IlkUDUhC
Refactoring Plugins to WebSockets & Implementing Advertisement feature,Kukade Siddhesh Bhupendra,https://github.com/SiddheshKukade/Google-Summer-of-Code-2023-Work-Product,"Dominic Mills, Tasneem Koushar, anwersayeed, Tasneem K, Aditya Birangal",The Palisadoes Foundation,"mongodb, flutter, graphql, typescript, reactjs, websockets","web, api, database, cloud, mobile","This proposal focuses on refactoring the current Plugin architecture in the Talawa project to reduce the computation power required to run/host the application. Web sockets will be implemented to make this possible. Current secondary features would be also converted into plugins. The Talawa app would have SPAM mitigation implemented in different aspects like for Sign/login, button debouncing, and SPAM protection in chats. The Additional UI in the admin and mobile app will be added to support “Advertisements” through slideshows, banners or pop-ups to incentivize the community. Local advertisers can purchase ads for a requested period of time by directly contacting the admin of that organization. The process of storing those transactions in a standardized format to support multiple payment providers and the ability to get all payment data at once is also explained. All of these features described above will be tested and converted into plugins to make it controllable by the admins based on whether they want that feature in their organization.",https://summerofcode.withgoogle.com/programs/2023/projects/QD8ElW39
KUMAR_HARSH-AGORA_BLOCKCHAIN,Kumar Harsh,https://gitlab.com/aossie/agora-blockchain/-/blob/gsoc-2023/docs/GSOC_2023/Kumar_harsh.md?ref_type=heads,"Bruno, Kirti Lodha",AOSSIE,"javascript, reactjs, Solidity, Zero-Knowledge-Proofs, circom, Semaphores, ZK-Snarks, NFT, OCR(Google tesseract)","web, algorithms, blockchain, cryptography","1)Anonymous Voting : Problem: Decentralized voting systems, while offering increased security, may still require voters to reveal their identity and their choice, thereby compromising anonymity.This can lead to coercion, vote-buying, and other forms of election interference. Solution:I plan to incorporate an anonymous voting system with no link between the voter's identity and voting choice. Set of deliverables: -Implementation of anonymous voting using semaphores and ZK-Proofs to or anonymous signaling and privacy preservation -Integration of same with Frontend 2) Zero-Knowledge-Based KYC : Problem: KYC involves collecting a significant amount of personal information from customers, such as name, address, date of birth, and government-issued identification. This information can be vulnerable to data breaches or misuse, potentially leading to identity theft and other types of fraud. Solution: To address this problem, I plan to create a zero-knowledge-based KYC verification system that allows customers to verify their identity without revealing any personally identifiable information. Set of deliverables : -Development of a zero-knowledge-based KYC verification system -Integration of same with Frontend 3)Gas Fee Optimisation : Problem: High gas fee requirements in processes such as creating a new election Which is incurred due to Multiple contract deployments during each process. Solution: Gas fee can be reduced by using minimal PROXY contract deployment( EIP1167) Deliverables: -Converting Election, Ballot, and ResultCalculator contracts to minimal proxy contracts. -Integrating with other contracts 4)Additional Voting Algorithms: Problem: Limited algorithms result in a lack of proper representation of views and give lesser choices to organizers. Solution:Add Borda and IRV algorithms to the system. Deliverables: -Integration of Borda and IRV algorithms by writing smart contract logic and integrating with the current system. -Frontend Integration",https://summerofcode.withgoogle.com/programs/2023/projects/WPHbWN7Q
Ochi usability improvements,Kumiszhan,https://www.honeynet.org/2023/08/24/gsoc-2023-project-summary-ochi/,Lukas Rist,The Honeynet Project,"javascript, golang, sqlite, svelte","security, web, analytics",Ochi project is used for presenting events in real-time which are generated by Glutton. The existing tool has limited functionality and will benefit from the following improvements: 1. Persisting events on the backend 2. Implementation of event query DSL 3. Persisting queries on the backend 4. Generate client-side event statistics 5. Linking to events,https://summerofcode.withgoogle.com/programs/2023/projects/S6tyIv0A
GSOC LMS Portal for Drupal,Kunal Sangtiani,https://www.drupal.org/project/gsoc/issues/3383666,Vairamuthu M,Drupal Association,"react, php, symfony",web,"The ""GSOC LMS Portal for Drupal"" project aims to develop a comprehensive learning management system with Drupal for GSOC students. This system will enable students to submit their work, collaborate with mentors for feedback, schedule their tasks, manage deadlines, and share their experiences within the app. The portal will be a helpful tool for future candidates, allowing them to explore previous ideas and make effective contributions. With GSOC being a long-duration program, it is essential to manage projects and deliverables effectively to ensure the project's success, which this portal will facilitate. Overall, this project will provide a valuable resource for future GSOC candidates and mentors.",https://summerofcode.withgoogle.com/programs/2023/projects/vkHsC85z
ShenYu Gsoc2023 - shenyu-ingress-controller,Kunshuai Zhu,https://gist.github.com/JooKS-me/387ed3d2edba5bf427282df84125b2a0,"Yu Xiao, daming",Apache Software Foundation,"java, spring, kubernetes, Apache ShenYu","cloud, cloud native, microservice",shenyu-ingress-controller is an important step for Apache ShenYu to integrate into the cloud native ecosystem. This time gsoc roughly needs to complete the following steps: 1. Implement the divide plugin to support host; 2. Implement the divide plugin to dynamically configure the tls certificate; 3. Develop a controller to implement the native API specification of ingress; 4. Write unit tests and integration tests; 5. Write deployment and usage documentation.,https://summerofcode.withgoogle.com/programs/2023/projects/RiNlevG8
"OpenPrinting : CPDB support for application's print dialogs: Firefox, Chromium, LibreOffice",kushagra sharma,https://github.com/kushagra20251/GSoC/,"Till Kamppeter, Ira McDonald, ShivamMishra, Gaurav Guleria, Rithvik Patibandla",The Linux Foundation,"c, c++, cups","Cups, The Common Print Dialog Backends (CPDB)","Print Dialogs are one of the most used features for many people, and it is important that they stay up to date with the current print technologies (like CUPS) and be able to quickly adopt any new such upcoming technology ,any bugs should be able to be fixed right away by the programmers of the print technology, The Common Print Dialog Backends (CPDB) aims to de-couple the GUI from the print technologies. Instead of directly connecting to each print technologies separately, the GUI projects only must adopt CPDB support once, and then OpenPrinting takes care of the CPDB Backend for the print technologies to be up to date with any changes . task is to get CPDB into the print dialogs upstream, the UI of them does not need to be changed. Dialogs to be treated are Mozilla for Firefox and Thunderbird, Chromium/Chrome, LibreOffice, and any other application-specific dialog",https://summerofcode.withgoogle.com/programs/2023/projects/HAgvMsZB
"RayZed : Ray-based, distributed web vulnerability scanner",KushalShah,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/05-KushalShah-RayZed.md,"RavinduDeSilva, Kenneth Manjula",SCoRe Lab,"Ray.io, zed, Linux, bash, Terraform, GCP, AWS, AZURE","cloud computing, scalability, Web Vulnerability","Finding out web vulnerabilities for specific targets(URLs) is a critical task. For this OWASP ZAP-ZED helps by using its various scan functionalities like active, passive and spider scan. These scans scrutinize the target URL for different standard vulnerabilities and thus is an extensive process. The target(URLs) could be distributed among Ray cluster nodes deployed on the cloud-native platform where ZAP is running as a daemon. This architecture scales the process of finding vulnerabilities for targets. The purpose of this project is to create a parallelized tool that could fetch vulnerabilities of different websites in an efficient way such that the process could be scaled and automated for cybersecurity research. This project has the setup for ZAP, Ray and Terraform as infrastructure as code for GCP ready and tasks for setup automated using Ansible. Project Architecture RayZed tool would have the following main components: 1. Terraform 2. Cloud-native platforms(GCP) 3. VMs of cloud-native platforms configured for ssh, firewall and local execution(ZAP). 4. Ray manages the parallelized architecture of the head and workers.",https://summerofcode.withgoogle.com/programs/2023/projects/1IN7Sna1
Automated Gentoo System Updater,LabBrat,https://blogs.gentoo.org/gsoc/2023/08/27/final-report-automated-gentoo-system-updater/,"Andrey Falko, juippis",Gentoo Foundation,"python, linux, bash","security, automation, linux","The project is about creating a tool that automatically updates Gentoo Linux. It will handle errors and send upgrade reports containing news and errors about the last upgrade via email, IRC chat or a mobile app. The project will greatly enhance Gentoo Linux user experience by automating and simplifying the mundane upgrading process, saving users' valuable time and improving security. Deliverables: system updater program, ebuild in one of the Gentoo's repositories and a push notification mobile app.",https://summerofcode.withgoogle.com/programs/2023/projects/GeVkDHOA
Gnuastro Python Library and Cuda Integration,Labib Asari,https://labeeb-7z.github.io/Blogs/2023/08/22/Final-Report.html,Mohammad Akhlaghi,OpenAstronomy,"c, python, cuda, numpy, CPYTHON","api, PYTHON LIBRARY, GPU Programming","Gnuastro is mainly written in the C, so are Python and Numpy. Utilising this fact, pyGnuastro uses Python wrappers to access the base C library while providing a converter between the Gnuastro and Numpy core data structure using Cpython. The project will extend pyGnuastro with additional module, a core data structure and develop a new error mechanism, to ensure accurate reporting in the Python interface. The new method will store the errors in a stack of linkedlist and share it with the caller rather then exiting the program which closes the Python shell. Additionally, this project will extend Gnuastro to leverage GPU compute by incorporating CUDA modules for the corresponding C modules to offload the computationally intensive duties that GPUs can greatly assist with. NVCC and GCC will compile CUDA and C modules, respectively, with GCC performing the final linking and building of shared libraries(Gnuastro).",https://summerofcode.withgoogle.com/programs/2023/projects/pwivQF02
Common compliance testing framework for every OpenAPI specification,Lakshya Garg,https://gist.github.com/LakiG/35fd41c6eedc68363cf6d06105446c12,"Alex Kanitz, Liam Beckman, Venkat Malladi, Kushagra Nagori, Chen Chen, patmagee",Global Alliance for Genomics and Health,"python, rest, openapi, GitHub Actions","api, automation, cloud, CI/CD, Compliance Testing","An interoperable automated framework for compliance testing has been developed, equipped with the capability to execute customizable test files. The framework's architecture is meticulously designed to support every OpenAPI specification. The compliance suite serves the crucial purpose of assessing the conformance of API services to their defined API specifications. Functioning as a GitHub Action, the compliance suite seamlessly integrates with diverse repositories, thereby fostering streamlined CI/CD processes. Comprehensive tests have been tailored for the Task Execution Service (TES) and the Workflow Execution Service (WES), integral components of the GA4GH API standard.",https://summerofcode.withgoogle.com/programs/2023/projects/07nwka8k
SciML: Integrating PubChem Closely into Catalyst and SciML,Lalit Chauhan,https://medium.com/@Lalit.Chauhan/gsoc23-final-project-report-117b5308e047,"Chris Rackauckas, isaacsas, Torkel Loman, Anand Jain",NumFOCUS,"julia, PubChem API, Catalyst.jl","api, interface","The project will involve the creation of a new package that will provide an interface to query for chemical species and enzymes using the PubChem API. This will then be integrated into the existing library Catalyst.jl to improve upon its functionalities. This will prove in Improved accuracy in identifying chemical species and enzymes in reaction networks. By accessing the vast amount of data in the PubChem database, Catalyst.jl will be able to provide more accurate identification of chemical species and enzymes in reaction networks, reducing ambiguity and improving the quality of results.",https://summerofcode.withgoogle.com/programs/2023/projects/aAJMK8lZ
Migrate JavaScript Codebase to TypeScript,Lalit Kumar Singh,https://gist.github.com/Lalit3716/e60e6697631a4b61cb0a40157dc4e516,Zixuan James Li,Zulip,"javascript, typescript",web,"Zulip has a huge codebase for it's web app but it's currently written in JavaScript, this project is aimed at migrating at least ~80% of the zulip's codebase to TypeScript. TypeScript is an awesome language migrating to it will improve the quality, maintainability, and scalability of Zulip's frontend codebase. Also by using TypeScript we will be able to enforce consistent coding standards, document the code better, and leverage powerful IDE features.",https://summerofcode.withgoogle.com/programs/2023/projects/zt6rs2YE
Rework Linetool to Multilinetool with moveable vertices,Lenkomotive,https://gist.github.com/Lenkomotive/98473bd260a05e1372a6daf4410645e9,"Thorsten Bandel, Julia Herold",International Catrobat Association,"kotlin, Kryo, Anrdoid Studio","graph, linetool, multilinetool, vertex","I want to enable the linetool to act as a multiline tool with vertices that are changeable, deletable, addable, and saveable. This would allow users to create more complex shapes and diagrams with ease, as they would be able to add and manipulate individual vertices as needed. By making these vertices saveable, users could also revisit and change their work at a later time, making the tool more versatile and useful. Ultimately, the line tool would become a more powerful and adaptable tool for users that need more exact control over their drawings after the addition of these new functionalities.",https://summerofcode.withgoogle.com/programs/2023/projects/A932RNkG
Improving SDF support in Icarus Verilog,Leo Moser,https://mole99.uber.space/2023/GSoC_Final/GSoC23%20%E2%80%94%20Final%20Project%20Report.html,"Tim Edwards, Mohamed Shalan, Cary R",Free and Open Source Silicon Foundation,"verilog, c++, SDF","ASIC, Simulaton, Timing Closure","When you design a digital circuit, you want to make sure that all timings are correct, even post-layout. Therefore, the gate level netlist is annotated with delays extracted from the layout. The file format that contains these delay and timing information is called Standard Delay Format (SDF). Icarus Verilogs' SDF implementation has shortcomings in the following categories: 1. Wire / Interconnect delays 2. Conditional path delays 3. Timing checks Work needs to be done on these categories, all while supporting related bugs as we more completely test gate level simulations. With the work proposed here, I would like to improve Icarus' SDF support to simulate SDF back-annotated timing simulations for the open SKY130 PDK. The deliverables for this project are: 1. Implementing the SDF `INTERCONNECT` feature 2. Writing tests for the regression suite 3. Example of a SDF back-annotated timing simulation using the SKY130 PDK",https://summerofcode.withgoogle.com/programs/2023/projects/Oj6mrbBI
STARDIS Parallelization and GPU,light2802,https://gist.github.com/light2802/b7d2d019e8f0a02d4b3b8d0eea047811,"Jaladh Singhal, Alexander Holas, Vicente Amado Olivo, Joshua Shields, Isaac Smith",TARDIS RT Collaboration,"python, cuda, numba","parallel computing, gpu","Most of the functions in STARDIS generate and loop over huge numpy arrays, that are over a million elements. Initializing the array requires iterating over each index and calculating what that entry should be. This is a task that can be done in parallel. The project aims to increase the speed of STARDIS using Numba by allowing slower parts of STARDIS to be run in parallel and allowing for them to be run on the GPU using Numba’s CUDA capabilities if the user requires them.",https://summerofcode.withgoogle.com/programs/2023/projects/LhiIWAnR
OpenCX: Extending OpenCV with NeRFs and LLMs,Likhit Talasila,https://docs.google.com/document/d/1fsAhYY787osveiUqtqR9RQf6Ajr4XLhqSYv-EyydBGs/edit?usp=sharing,"Gary Bradski, Douglas B Lee",OpenCV,"python, opencv, flutter, dart, OpenAI, HuggingFace, FastAPI, Langchain, Nerfstudio","machine learning, computer vision, natural language processing, LLMs, neural radiance fields","Investigative work on extending OpenCV. Researched state of the art and emerging 3D multimodal scene representations and use cases. For eg, queryable NeRF methods, semantic embeddings etc. This led to spearheading and designing 2 new initiatives: NerfNet & CognitiveStudio. NerfNet is an open platform for gathering large scale data a la ImageNet for 3D scene representations. It goes end-to-end from images and metadata to 3D scene representations with support for various configs, NeRF models etc. CognitiveStudio is a NerfStudio fork focused on modularity and multimodal integrations Also developed PoCs for LLM agents for converting natural language to NerfStudio API calls and for gathering metadata for NerfNet.",https://summerofcode.withgoogle.com/programs/2023/projects/G68yXZNG
Multi-camera calibration part 2,Linfei,https://github.com/opencv/opencv/pull/24052,"maxim_ivashechkin, Jean-Yves Bouguet",OpenCV,"python, opencv, c++",vision,"This project extends the work from the previous year, which included basic algorithms for multi-camera calibration, by adding testing cases with wider coverage, refining the algorithm to be comparable to the Kalibr tool, and improving the API to make it more accessible to users. Additionally, it plans to create improved documentation to guide users with little background knowledge in camera calibration. The overall goal is to provide a reliable and robust implementation of camera calibration algorithms in a multi-camera setup.",https://summerofcode.withgoogle.com/programs/2023/projects/BoM2kqWt
Modern C porting of Gentoo packages,listout,https://blogs.gentoo.org/gsoc/listouts-gsoc-2023-final-work-products/,"Sam James, juippis",Gentoo Foundation,"c, c++, cmake, gnu make, clang, musl, glibc","Porting, musl, Clang, Modern C, C23, patching","Back in 1999, a new revision of the C standard removed several backward compatibility features. However, GCC still accepts these obsolete constructs by default. Support for these constructs is confusing to programmers and potentially affects GCC's ability to implement features from future C standards. But newer versions of compilers (for example Clang 16, expected March 2023) are planning on becoming significantly stricter with the C code they will accept or reject. This is a huge problem for the general Linux ecosystem. Even worse is that some of these failures are silent and lead to incorrect behaviour at runtime. Extra care must be taken to detect this and we must prioritize these cases because they're the most harmful. Also, in the coming years with C2x (likely C23), additional changes like removing certain depreciated prototypes will be made. All of these changes will affect Gentoo packages in the following ways: Lots of packages fail to build with these settings Sometimes packages build successfully but their ./configure scripts have mis-detected features or otherwise made the wrong conclusion about the system because they expect a test to succeed when it now fails.",https://summerofcode.withgoogle.com/programs/2023/projects/fqBdIIWX
API and Mobile App: E2E encryption and security improvement in Talawa and Talawa-API,literalEval,https://literaleval.notion.site/GSoC-23-E2E-Encryption-98b3422c52da476cb3ffa367acd94b2c?pvs=4,"Crystian Ioppolo, Md Noman Khan, NISHNATA DEBNATH",The Palisadoes Foundation,"react, nodejs, flutter, graphql, SHA256","security, encryption, Secret Key Generation and Storage","This proposal aims to implement E2E Encryption in the Talawa Ecosystem from the ground up. The initial aim will be to implement secure credential transfer and session storage, followed by E2E encrypted private chats. Then I will build upon the idea to implement the same for group chats and media files. In the end, all of this will be implemented in Talawa Admin and finally testing and documentation will be done.",https://summerofcode.withgoogle.com/programs/2023/projects/oNSiZ7o3
IDEA: Realtime object tracking models,lpy,https://github.com/opencv/opencv/pull/24201,Zihao Mu,OpenCV,"python, c++, deep learning",vision,Real-time object tracking models working on edge devices. I will use MAE pre train and knowledge distillation to make the performance better. The deliverables include a high-speed model and the c++ code to deploy it,https://summerofcode.withgoogle.com/programs/2023/projects/okIdfVpA
Lensiformer: A Physics-Informed Vision Transformer Architecture for Dark Matter Morphology,Lucas José,https://medium.com/@lucas.jose.veloso.de.souza/lensiformer-a-relativistic-physics-informed-vision-transformer-architecture-for-dark-matter-a119f6d0dc0d,"Purva Chaudhari, Michael Toomey, Anna Parul, PG Guan",Machine Learning for Science (ML4SCI),"python, opencv, numpy, pytorch, Matplotlib, Scipy, scikit-optimize","machine learning, vision, physics, astrophysics, Transformers, Dark Matter, ViT, PINN","We introduce Lensiformer, a state-of-the-art transformer architecture that incorporates the principles of relativistic physics for the classification of dark matter morphologies through gravitational lensing observations. This unique model combines the strengths of Transformer models in NLP with the analytical rigor of Physics-Informed Neural Networks (PINNs). Leveraging relativistic equations and Singular Isothermal Spherical models, Lensiformer accurately approximates the gravitational potential exerted by lensing galaxies and dark matter. These physics-based features are integrated into a Vision Transformer (ViT) neural network, providing a nuanced understanding of different dark matter structures like Cold Dark Matter and No-Substructure Dark Matter, and their associated gravitational imprints on light paths and galaxy distortions. To validate the model, we generate a specialized dataset using real galaxy images as source objects and benchmark Lensiformer against other leading models, confirming its superior performance in discerning different kinds of dark matter morphologies.",https://summerofcode.withgoogle.com/programs/2023/projects/eNzfLWS9
Improve Waveform drawing speed,Lucas Tadeu Teixeira,https://www.lucastadeu.com/p/improving-waveform-drawing-speed,Richard Antalik,Blender Foundation,c++,"audio processing, video editing, performance improvement","Blender supports video editing through its video sequence editor. While the editor allows users to load videos and audio files, computing the audio waveforms for the audio tracks can take a really long time when working with large files (multiple gigabytes). This makes for a degraded user experience. This project will reduce the time taken to see the waveforms by: ● Processing multiple audio sequences in parallel in the background, ● Only computing the waveforms of sequences that are visible in the user interface Once these initial speed ups are achieved, I'll explore improvement opportunities lower down the audio processing stack.",https://summerofcode.withgoogle.com/programs/2023/projects/tYsdcgpI
Advancing Reproducible Science through Open Source Laboratory Protocols as Software,Luiza Zucchi Hesketh,https://gist.github.com/LuHesketh/d5138b28c75ae5ec79648e8ebac6d7fd,"Tim Fallon, Daniel Bryce",UC OSPO,"python, json, xml, VENUS(Hamilton SOFTWARE)","robotics, python, Laboratory Automation, Laboratory Protocols, Semantic Web Technologies, Bioengineering",The project aims to develop a Python-to-Python conversor for LabOP-written Laboratory protocols to be executed by Hamilton Machines using PyHamilton as a the main bridge. The project will benefit scientists by providing open-source protocols for replicating experiments through an open-source software stack. PyHamilton is an open-source Python package that allows its user to control Hamilton liquid handling robots without its native software constraints. The Protocol used as model is a DNA purification protocol and its integration with LabOP came to fruition with the goal of making the protocol as reproducible as possible since the translation process can be done in different ways by different sites using distinct machines.,https://summerofcode.withgoogle.com/programs/2023/projects/nrezQTSy
03: Migrate vanilla React forms to RHF,Lumu Christopher,https://medium.com/@topherlumu_55016/migrating-vanilla-react-forms-to-react-hookform-gsoc23-c7c67303944e,"Hadijah Kyampeire, Dennis Kigen",OpenMRS,"javascript, react, typescript",microfrontend,"Openmrs had a requirement to improve the performance and maintainability of the existing vanilla React Forms in our application. The current forms had become less performant or extensible and difficult to manage as they grow in size and number of fields and for the most part lack validation. To address this, I proposed to refactor the existing forms using the React Hook Form (RHF) library and Zod for schema validation. React Hook Form offers easy-to-use validation out of the box, performance and tiny bundle size",https://summerofcode.withgoogle.com/programs/2023/projects/wlrUpqJ3
Google Summer of Code Community Hub,M. Palanikannan,https://github.com/RocketChat/GSoC-Community-Hub,"Dnouv, Hugo Costa, DhruvJain",rocket.chat,"Advanced Typescript, Advanced React, Next.js 13, Full Stack Componentization",web,"Every year, it is understandable that open-source organisations invest a significant amount of time and effort in preparing for GSoC. That's why the Google Summer of Code Community Hub will act as an essential tool to help prepare and support every organisation before and during the program. The GSoC Community Hub is designed to be a one-stop-shop for open-source groups to interact, collaborate, and monitor their progress before and during GSoC. It provides an all-in-one platform that combines chat rooms, forums, custom leaderboard, community meetings, communication over specific GitHub repositories, and other essential features, making it easier for mentors and mentees to find and collaborate on relevant projects.",https://summerofcode.withgoogle.com/programs/2023/projects/pzAncbjU
Editor Integration,maan2003,https://docs.google.com/document/d/1TfgwYuFQq8A8k3XGuMZVLzHXOGAARZp25Jzbk3LLf34,Josh Levenberg,Carbon Language,c++,"compilers, language server","Make the developer experience for Carbon developers better by adding support for Carbon to editors and IDEs. Possible tasks include: Create an ""official"" VSCode extension with a mirror repo and packaging similar to the Vim repo we provide. Add syntax highlighting using a Tree-sitter grammar for Carbon. Create a language server for Carbon Deliverables • A working language server for Carbon that supports features like code completion, diagnostics, and go to definition. • A parser that can handle incomplete or erroneous input and produce a Carbon AST. • A test suite that verifies the correctness and performance of the language server. • A tree-sitter parser for Carbon that passes the explorer test suite. (Optional)",https://summerofcode.withgoogle.com/programs/2023/projects/xY7b8v6G
Setting up the CI/CD Pipeline using Github Actions on GraphSpace,Mahesh Kasbe,https://gist.github.com/maheshkasabe/0218efdc41da263331a99588573adec7,"Yash Agarwal_, Daniyal Jahan",National Resource for Network Biology (NRNB),"python, django, docker, YAML, GithubActions","cloud, devops, WebDevelopement","Currently the Graphspace code repository has a lot of mismatched dependency issues & consist no automating techniques in their repository to release or test graphspace image while deploying to production. The Project aims to stabilise & setup the CI/CD pipeline for Graphspace project. The project involves creating a Production ready Dokcerfile setup to install graphspace locally. The project also focuses on automating the release workflow of Docker image to Docker-registry services like AWS ECR or Dockerhub, automating the releasing, testing PR , labelling (PR's & Issues), performing necessary security checks & image vulnerability scans by creating multiple workflows with Github Actions",https://summerofcode.withgoogle.com/programs/2023/projects/tSIGvxsf
Keploy CLI Refactoring,Mahfooz Alam,https://github.com/aerowisca/GSoC-2023-Report/blob/main/GSoC_2023_Report.md,"NehaGupta, Shubham Jain, Animesh Pathak, re-Tick, Pranshu, charanK, Gourav Kumar, Sarthak Shyngle",Keploy,go,API Testing,"This project aims to improve Keploy CLI workflow to make the user experience smooth. Since the UI has been deprecated, we need to make sure that the CLI is fully functional and easy to scale and modify in the upcoming years. For that, we need to have a stable API with the correct design decisions, since backwards compatibility for big projects is a must. The secondary goal of this project is to make the developer experience smooth as well. Keploy works, but the code is all over the place, unit test logic is embedded with actual code, there are lots of internal context on functions that should be better documented, etc. The last goal is to make it easy for the maintainers of the project to accept contributions from outsiders. Currently, one of the maintainers needs to manually test the changes locally to ensure that no regression has been caused. We need to automate this process, requiring stricter unit tests (which would only be feasible for newcomers if we have the framework in place).",https://summerofcode.withgoogle.com/programs/2023/projects/m3NRu5wa
"HAPIS Refurbishment ""Humanitarian Aid Panoramic Interactive System""",Mahinour Elsarky,https://medium.com/@mahinouralaa2002/google-summer-of-code-2023-with-liquid-galaxy-organization-f9dd550f6bc1,"Karine Pistili Rodrigues, Claudia, Deniz Yuksel",Liquid Galaxy project,"flutter, sqlite, dart, KML","mobile development, android","Introduction: The main idea of HAPIS Refurbishment is to have a simple functional application that is able to connect those who need something with those willing to offer it through an android mobile application where the user can simply fill in a form or view the list of seekers & givers any place in the world. Things offered can fall in any category such as food, clothes, electronics, books...etc. We will use the technology of Liquid Galaxy in order to visualize all Humanitarian actions all around the world by viewing on the LG the number of people currently offering something, or seeking something as well as some statistics such as the number of successful donations that happened either locally or globally. Controlling the LG would be through an android tablet application. Deliverables: - The mobile application fully functional - The tablet application fully functional and published on the Play Store under the Liquid Galaxy LAB account - Full documentation and code on GitHub",https://summerofcode.withgoogle.com/programs/2023/projects/Fv4ImOa2
Navigator plugin modernization,Mahmoud Hamdy,https://github.com/cockpit-project/cockpit-navigator,"Katerina Koukiou, mmarusak",Cockpit Project,"python, javascript, react","operating systems, web, linux","""Cockpit navigator"" is a featureful File System Browser for Cockpit, which allows the user to remotely browse, manage, edit, upload, and download files on the server through the web browser. The project is about modernizing this plugin by following some new designs and rewriting the codebase to follow the standards specified by the starter-kit plugin. The project includes porting to React, adding tests, updating Patternfly, and much more.",https://summerofcode.withgoogle.com/programs/2023/projects/KNYEb8CT
Improve AR/VR experience on Web,Mahmoud Tawfik,https://gist.github.com/mahmoudahmedd/57d5ada258756d49420608c3cad07596,"Sreeja Kamishetty, Alex Cooper, Piotr Bialecki",Chromium,"javascript, java, c++, html, css, WebXR API","virtual reality, web, Augmented Reality, WebXR","The goal of this project is to develop a debugging page called ""xr-internals"" to help developers debug and optimize AR/VR web applications. The page will provide relevant information and data to help identify performance issues and other problems with the application, while augment existing performance metrics to be effectively surfaced within the same page. Also improve the WebXR experience in Chromium by addressing critical issues reported in the bug tracker and implementing missing features.",https://summerofcode.withgoogle.com/programs/2023/projects/4EVJm10k
OpenRAM Layout verses Schematic (LVS) visualization,Mahnoor_Ismail,https://mahnoorismail011.medium.com/the-lvs-visualizer-your-ultimate-circuit-design-companion-2dc5cbc7caa2,"mrg, jcirimel",UC OSPO,"python, json, VLSI, OpenRAM framework","visualization, debugging, python, json, ASIC design, OpenRAM, VLSI, GUI development","This project aims to develop a comprehensive Python-based graphical user interface (GUI) with a robust backend system to effectively analyze, visualize, and debug layout versus schematic (LVS) mismatches in the OpenRAM framework. The proposed solution focuses on efficiently processing LVS report files in JSON format, identifying mismatched nets in the layout, and visually representing extra nets in the schematic graph using advanced backend algorithms. By implementing a powerful backend system, the GUI will streamline the debugging process and improve overall productivity, while maintaining high performance and reliability. The deliverables for this project include a fully-functional GUI with a performant backend, features for visualizing and navigating through LVS mismatches, comprehensive documentation, and user guides.",https://summerofcode.withgoogle.com/programs/2023/projects/f9rIZ3dm
AGL @ Linux Foundation | GSoC 2023 | Enhance Speech Recognition,Malik Talha Saeed,https://blog.maliktalha.me/post/gsoc2023-final-report,"Walt Miner, Jan-Simon Möller, Scott Murray, Marius Vlad",The Linux Foundation,"python, linux, c/c++, gstreamer, flutter, yocto, dart, grpc, AGL, Vosk, Kuksa","operating systems, speech recognition, Automotive Grade Linux, Voice Assistant","Abstract: This project aims to enhance the speech recognition engine used in Automotive Grade Linux by creating a natural language intent engine that can understand and respond to commands. The goal is to develop a voice assistant that can understand voice commands and take necessary action based on them (e.g. turn down the volume, increase AC temperature). -- Implementation Details: The current Vosk Kaldi speech-to-text functionality will be enhanced by integrating the Snips and RASA NLU engine. The NLU engine will help in extracting the context and intent of voice commands. The extracted intent will be used directly or indirectly by a gRPC-based service which will execute it by communicating with the underlying Kuksa Server APIs. -- Deliverables: 1.) Integration and development of Snips and RASA Natural Language Understanding Intent Engines with existing Vosk implementation. 2.) Ability to execute the intent extracted from the NLU engine using a gRPC-based server, GStreamer, and Kuksa. 3.) A flutter-based Linux voice assistant app to communicate with the gRPC-based service.",https://summerofcode.withgoogle.com/programs/2023/projects/v0K55l17
Efficient Communication with Key/Value Storage Devices,Manank Patel,https://ucsc-ospo.github.io/report/osre23/ucsc/kvstore/20230825-manank/,"Aldrin M, Philip A. Kufeldt",UC OSPO,"c, sockets, io_uring","performance, network, storage, I/O, key/value",The project involves implementing io_uring based communication backend for network based key-value store. The current implementation in the KTLI (Kinetic transport layer interface) uses traditional sockets and POSIX APIs to communicate with the backend. io_uring offers a new kernel interface that can improve performance through zero copy network transmission capabilities and avoid the overhead of system calls.,https://summerofcode.withgoogle.com/programs/2023/projects/7WPESTT0
Estimating the energy cost of scientific software,Manas Pratim Biswas,https://github.com/sanam2405/SoftwareEnergyCost,"Benedikt Hegner, Caterina Doglioni",CERN-HSF,"python, machine learning, c++, git, deep learning, jupyter notebook, Software Profiling, Software Testing","High Throughput Computing, Scientific Software Profiling, Software Metrics, Estimating Energy Efficiency, Green Software Foundation","The Large Hadron Collider (LHC) experiments generate massive datasets composed of billions of proton-proton collisions. The analysis of this data requires high-throughput scientific computing that relies on efficient software algorithms. In this project, I aim to investigate whether small efficiency improvements in the LHC software can have a large energetic impact, given the sheer volume of data involved. Additionally, I aim to explore the impact of different computing architectures and job submission systems on energy efficiency. To achieve these goals, I will use metrics from the Green Software Foundation and other resources to estimate energy efficiency. I will then evaluate whether to make small changes to the code to improve efficiency and evaluate the potential savings. I will also test the software on different platforms and job submission systems. My expected results include a summary of metrics for software energy consumption, visualisation of test results, and identification of possible improvements to software algorithms. The project will provide valuable insights into the energy efficiency of scientific software, with potential applications beyond the LHC experiments.",https://summerofcode.withgoogle.com/programs/2023/projects/Nks9akq7
Manash Kumar_Proposal_Rocket Launcher Visualizer / SpaceX Rocket Visualizer_350 Hours Duration,Manash Kumar,https://gist.github.com/SagittariusA11/1042d88f5e560366770307be8a9db108,"Andreuibanez, Yash Raj, Victor Carreras",Liquid Galaxy project,"flutter, Api Integration",app development,"I am planning to build the app using flutter for frontend and calling APIs using dart package called “retrofit” for collecting data of rocket launches from APIs such as “https://www.rocketlaunch.live/api” and “https://docs.spacexdata.com/” and “https://spaceflightnewsapi.net/” this API to access different news articles and related information about the launch to show on the app also Celestrak API “https://celestrak.org/” for satellite data. We use “google_maps_flutter” for the live location of the user, “google_directions_api” for finding routes to the nearest launch site and “geocoding” to convert the named launch site location to coordinates. After calling the API it will return data in JSON format which we will convert to KML format file and store it locally using “shared_preferences” and then will send it to Liquid Galaxy for visualisation. There will be a map screen as well in the app to visualise the launch in the app itself if it is not connected to Liquid Galaxy. I will use embedded code sent to LG Rig using the KML format of placemarkers of the launch site with a YouTube live video link pasted by users (of which instructions will be mentioned) in the input text field which will telecast live launch video on LG alongside visualisation.",https://summerofcode.withgoogle.com/programs/2023/projects/5ZScXUZt
Facilitating H5P and SCORM import in Kolibri Studio,Manav Aggarwal,https://github.com/learningequality/studio/issues/4081,Richard Tibbles,Learning Equality,"javascript, vue.js","Parsing, download-linked-files, license mapping","This project tries to solve the problem of importing two new file formats called H5P and IMS Content Package (SCORM). These packages' metadata needs to be extracted and used to create a course node ( topic node and resource node ) which will later be used to render the files for educational content. To make the content available offline, this project aims to download all the externally linked reference links and embed them along with the file. This will be achieved using various npm packages like JSZip and fast-xml-parser to parse and extract the metadata from the content files and JavaScript to download the externally linked files and embed them into the files for offline use.",https://summerofcode.withgoogle.com/programs/2023/projects/ee06M2RH
Development of a Web Based robotic simulator for the DIY robot kit for educators,Manousos Linardakis,https://gist.github.com/manouslinard/29b2decf4b88e6e0919c81c993969ba0,Christos Chronis,Open Technologies Alliance - GFOSS,"python, javascript, flask, godot, SocketIO","web, robotics, graphics, cloud, Simulator, WebSockets","I propose to develop a comprehensive and accessible robot simulation system for the FOSSbot project, utilizing cutting-edge technologies and best practices to create a fully-functional and optimized simulator. The development process will involve careful platform selection, deep understanding of the FOSSbot robot and its components, as well as the creation of class-ready simulator stages for educators and students. To overcome future cloud deployment cost constraints, I suggest using a game engine like Unity or Godot to create a lightweight simulator based on WebGL and Web Assembly. Through extensive debugging and documentation, the final product will be an advanced and accessible robot simulation system that will benefit the FOSSbot community.",https://summerofcode.withgoogle.com/programs/2023/projects/xsxF9klm
Fix Handling of Undefined Behavior in NewGVN,Manuel Brito,https://github.com/ManuelJBrito/GSoC-2023-NewGVN,Nuno Lopes,LLVM Compiler Infrastructure,c++,"compilers, programming languages, IR, optimizations","NewGVN was introduced to LLVM to cope with the limitations of the old GVN. It hasn't, however, seen widespread adoption, due to its bugs and missing features in relation to the old GVN. One source of issues with NewGVN is its handling of undefined behavior (UB). We are either too permissive, which can lead to correction issues, or we try to disable it, which makes us lose potential optimizations, while also not making it completely correct. Major steps: 1. Compile test cases showing NewGVN's failure to handle UB 2. Write pseudocode for NewGVN 3. Fix pseudocode 4. Implement changes Expected result: An improved version of NewGVN with better handling of UB and more awareness of its overall limitations.",https://summerofcode.withgoogle.com/programs/2023/projects/oQUfcx89
Enhancing Media Privacy in Chromium's Incognito Mode,Manuel Palenzuela Merino,https://docs.google.com/document/d/1FuqY9tTvkKNdOPYpdBvSH-jDqvY878x7yIIDYrQC6vs,"Stephen, Filipa Senra, Zaina",Chromium,c++,"security, privacy, web, browser","Google Chromium's Incognito Mode currently has a privacy issue where the media metadata of the browser can be displayed in operating systems' media centers, which undermines the purpose of this privacy-focused feature. This poses a significant concern for users and can erode their trust in Chromium's privacy promises. This project aims to enhance media privacy in Incognito Mode by intercepting and modifying media metadata with placeholder data before sending it to the OS (SystemMediaControls API), preventing operating systems' media centers from showing any metadata of media being played in Incognito sessions.",https://summerofcode.withgoogle.com/programs/2023/projects/HdCyydGz
Quantum Transformers for HEP Analysis at the LHC,Marçal Comajoan Cara,https://salcc.github.io/blog/gsoc23,"Emanuele Usai, Amey Bhatuse, Purva Chaudhari",Machine Learning for Science (ML4SCI),"python, pytorch, Jax, Pennylane, TensorCircuit","deep learning, Quantum Machine Learning, Transformers, High Energy Physics Analysis","This project aims to develop quantum transformer architectures for high energy physics (HEP) analysis at the Large Hadron Collider (LHC). The focus will be on creating hybrid and fully quantum transformer and vision transformer models. Transformers have proven to be extremely powerful, revolutionizing the field of artificial intelligence and significantly impacting the world with their wide range of applications. By merging the remarkable capabilities of transformers with the emerging field of quantum machine learning, this project aims to make significant advancements in both areas. To ensure accessibility, an engaging visual guide will be provided, helping a wider audience understand the subject and fostering interest in quantum machine learning. The outcomes of the project are expected to benefit the open-source community and contribute to scientific advancements, inspiring further research and innovation in these exciting fields.",https://summerofcode.withgoogle.com/programs/2023/projects/t0AHVDEG
Enhancements in linear algebra,Marie B,https://marizee.github.io/GSoC-2023/,Vincent Neiger,SageMath,"c, python, c++","linear algebra, Matrix","Sage incorporates state-of-the-art libraries for exact linear algebra computations, such as matrix multiplication, reduced echelon form, linear system solving, when the coefficients are in an exact domain such as the integers or finite fields. However, several aspects make the integration of these libraries not yet fully satisfactory. For example, working over a prime field with a prime below about 20 bits, the mere creation of a zero matrix in SageMath takes roughly as long as the call of the underlying fast reduced echelon form procedure (performed by LinBox / FFLAS-FFPACK in this case). Still about FFLAS-FFPACK: several available tools in this library are not offered through the Sage interface, constraining the user experience; for example, some pivoting strategies are not available, despite their usefulness in some situations e.g. when one is interested in the preservation of some rank profile properties. Finally, the integration of linear algebra implementations from Flint has been initiated, with a good amount of work already done, but is not fully finalized and has not been merged into Sage. This project aims to make this kind of enhancements, which would lead to more efficient and more versatile finite field linear algebra operations in Sage.",https://summerofcode.withgoogle.com/programs/2023/projects/0ieRwUMU
GNUnet Transport Next Generation (TNG): Communicator plugins,Marshall,https://www.gnunet.org/en/news/2023-08-GSoC-QUIC.html,"Christian Grothoff, Martin Schanzenbach",GNU Project,"c, QUIC","networking, Transport Protocols","The protocols supported by Transport Next Generation are limited to TCP and UDP. I will implement a new communicator plugin to transport data using QUIC. This adds more redundancy to the new communicators. I will conduct research into the QUIC protocol and keep in contact with my mentor and other GNUnet developers to create a detailed plan to build a QUIC plugin. I will develop a plugin that allows peers to connect over QUIC and continue supporting GNUnet by fixing bugs, writing documentation, and working on other plugins such as HTTPS.",https://summerofcode.withgoogle.com/programs/2023/projects/Tz0ohYot
Port SquashFuse to the FreeBSD kernel,Mashijams,https://wiki.freebsd.org/SummerOfCode2023Projects/PortSquashFuseToTheFreeBSDKernel,Chuck,The FreeBSD Project,c,"operating systems, fuse, File-Systems","SquashFS is a read-only filesystem targeted for small embedded environments, where memory and disk space is constrained. Squash-Fuse is a BSD-licensed FUSE implementation of SquashFS. The goal of this project is to port this implementation to the FreeBSD kernel, with the aim of being able to boot FreeBSD from an in-memory SquashFS filesystem.",https://summerofcode.withgoogle.com/programs/2023/projects/8OUr49Dx
Fuzzer Template Generator: abstracting complexity to produce knowledge.,Matheus Baptistella,https://github.com/AFLplusplus/LibAFL/pull/1344,"Andrea, Addison",AFLplusplus,rust,"security, fuzzing","Libafl is a library written in Rust that provides components to build fuzzers. A newcomer might feel confused when creating a fuzzer because that requires some knowledge of what each component does and how they can be used together. Without prior experience, going through the repository and trying to understand these features on your own is not a trivial task. To make Libafl more beginner-friendly, as well as didactic, this project proposes the implementation of a Fuzzer Template Generator. The generator will guide the user through the components, explain their functionalities and utilization, and output snippets of that component's Rust code, so the user may apply it to their fuzzer implementation. Therefore, this project aims to: 1. Implement a wizard, to show options and take the user's decisions, 2. Add a progressive flow chart generation, to help keep visual track, 3. Output Rust code for each component selected.",https://summerofcode.withgoogle.com/programs/2023/projects/CQBo3pNX
Clustering 3D point clouds,Mathieu LADEUIL,https://github.com/CGAL/cgal-public-dev/tree/gsoc2023-Clustering_QEM-mladeuil/,"Mael, Pierre Alliez",CGAL Project,c++,"cluster, point cloud, K-means",- 1 weeks understanding the article and making small code test to get into the CGAL architecture at this point I should be able to manipulate the CGAL methods and visualize in a 3d interface what i'm doing. - 8 weeks for the implementation of the algorithm - 2 weeks concise mesh reconstruction algorithm at this point I should be able to reconstruct a mesh - 1 weeks testing and documentation at this point I should be able to deliver a product,https://summerofcode.withgoogle.com/programs/2023/projects/HcvzfS2g
Pycxxwrap,Matrixbot,https://matrixbot123.github.io/gsoc23/,"Hartmut Kaiser, Stevenrbrandt",Ste||ar group,"python, c++, Pybind11","HPX Integration with Python, Python-C++ Integration","Pycxxwrap is a versatile Python decorator used to wrap C++ code into Python using Pybind11. It serves as a wrapper around Pybind11, a lightweight, header-only library that facilitates the exchange of C++ types between Python and C++. The primary goal of this project is to provide a Pythonic interface for C++ libraries, simplifying their usage and enabling the creation of Python libraries from existing C++ ones. Additionally, Pycxxwrap includes special support for the HPX library, a C++ Standard Library for Concurrency and Parallelism, using custom header files.",https://summerofcode.withgoogle.com/programs/2023/projects/2gxWyLH7
Libfabric Implementation of rFaaS,Matt Nappo,http://mattnappo.com/archive/gsoc/,Marcin Chrapek,Scalable Parallel Computing Laboratory,"c++, libfabric, librdmacm, libibverbs","hpc, faas, Serverless","RDMA can be implemented with many different network backends, including InfiniBand, RoCE and Soft-RoCE, TCP/IP and UDP via iWarp, Cray GNI, and Amazon EFA. However, rFaaS presently only supports a verbs backend, such as RoCE or InfiniBand. This project expands support of rFaaS to include a more extensive range of networking backends using libfabric. As a result, rFaaS is now much more versatile, accessibly, and widely deployable. Complete with a proper configuration system, users of rFaaS are now able to easily choose the protocol they wish to use on their cluster.",https://summerofcode.withgoogle.com/programs/2023/projects/nAscRfXB
The Tor Network Status API,Mattia Righetti,https://mattrighetti.com/2023/09/26/network-status-apis.html,"GeKo, Silvia [Hiro]",The Tor Project,"rust, sql","web, rest apis, backend","In an effort to improve current resource utilisation and optimisation, the Tor team is developing a new version of their pipeline (v2.0). This update involves transferring much of the data related to Tor nodes and bridges from files stored on a single server's disk to two separate databases: Postgres and Victoria Metrics. The main objective of this project is to design a RESTful API service using the `actix_web` framework that is going to be integrated in the new pipeline v2.0 to support data retrival from the two databases. In particular, the focus will be on designing the new APIs, its requests, and response formats. The project will also involve defining appropriate endpoints and data models, ensuring scalability, performance, and security. The final goal is to achieve a web service that is going to extend/replace the current onionoo protocol used by stakeholders interested in the status of the Tor network and its individual nodes.",https://summerofcode.withgoogle.com/programs/2023/projects/9Jt0KtWV
Audio to Haptic interaction design with ForceHost and Feelix supporting DeformableHapticSurfaces,Maxwell Gentili-Morin,https://sat-mtl.gitlab.io/collaborations/google-summer-of-code/posts/2023-contributions/maxw3llgm/work-product-maxw3llgm-audio-to-haptic-interaction-design-with-feelix-supporting-torquetuner/,"Christian Frisson (SAT), Edu Meneses, Anke van Oosterhout, Christian Frisson",Society for Arts and Technology (SAT),"javascript, c++, angular, typescript, electron, Faust, esp32","Haptics, Audio Interaction, Immersive Arts","Haptics, as a multidisciplinary field, has applications within the Medical, Consumer and Entertainment domains, to name a few, and despite their widespread presence in our phones to provide the user with a vibrotactile feedback response (a subset of haptics), haptics have very minimally been explored by artists as a tool for authoring immersive arts. The proposed project aims to create low-cost affordable haptic devices with one or mutliple degrees of freedom and authoring tools for artists to implement into their artwork immersive haptics and interactive audio. In the near future, artists can then use the proposed toolkit to benefit from Haptic floors being deployed into immersive art spaces like the Dome at SAT. The authoring tools Feelix, a ”haptic authoring tool developed to support the design and integration of force feedback and shape change in user interfaces”, and ForceHost, a toolchain that uses the functional sound synthesis and processing programming language FAUST that compiles firmware for audio-haptic applications, will be extended for use with the DeformableHapticSurfaces, a work-in-progress and open-source toolkit for interactive multi-linear DoF deformable surfaces, to create and demo the proposed immersive haptic and audio interaction toolkit. Support for audio input will also be added into Feelix potentially with ForceHost as an input modality so that ForceHost developed tools can interface their audio with the Haptic floor.",https://summerofcode.withgoogle.com/programs/2023/projects/YmhosRcH
Active Learning based Bayesian Geometry Optimizer,Mayank Goel,https://drive.google.com/file/d/1dORddM413QPwhrYDsuFCtvhKkFz7MakA/view?usp=sharing,Geoffrey Hutchison,Open Chemistry,"python, pytorch, Botorch, gpytorch, Open Babel","computational chemistry, Gaussian Processes, bayesian optimization","The goal of this project is to develop an Active Learning based Bayesian Geometry Optimizer(ALBGO) using PyTorch and BoTorch for optimizing the conformers locally and globally in internal coordinates, with support for several computational models like force fields, quantum chemistry and ML-based force fields. Bayesian Optimization is a highly effective technique for global optimization of ""black box"" functions and tuning hyperparameters. Since it does not require gradients, it can efficiently optimize hyper parameters for a Deep neural network or even electronic structure methods without derivatives. The project involves using Bayesian Optimization with an active learning approach to optimize conformers. The major work involves finding the right set of kernels for the Gaussian Process model for different types of molecular variables like Vibrational energy, bond lengths etc. and tuning them. We also an active learning approach to help the algorithm converge towards the solution much more quickly. Finally, we benchmark and compare the performance of our optimizer against other conformer optimization methods in use, like BFGS and gradient-based optimization algorithms. This project has the potential to significantly improve the optimization capabilities of researchers in several fields by reducing the cost of optimization and improving optimization performance. The ALBGO algorithm will be a valuable addition to the optimization landscape, and its PyTorch-based implementation will make it easily accessible to a wide range of users including non-chemists.",https://summerofcode.withgoogle.com/programs/2023/projects/kHh0ki8k
Activation functions and Pooling methods,Mayank Raj,https://github.com/mayank-root/GSoC-Report/blob/main/GSoC%202023%3A%20Activation%20functions%20and%20Pooling%20layes.md,"Marcus Edel, Abhinav Anand",mlpack,c++,Activation functions and Pooling methods,"Two new activation functions have been recently proposed FTSwish, and LiSHT and I am proposing to add them to mlpack along with two Pooling methods. These activation functions. Activation functions provide the non-linearity vital to allowing deep learning networks to perform an impressive number of tasks. ReLU (Rectified Linear Unit) has been the default workhorse for some time in deep learning. However, some concerns over ReLU’s removal of all negative values and the associated dying gradient, have prompted new activation functions that handle negative values differently.",https://summerofcode.withgoogle.com/programs/2023/projects/qIgOGbv6
Enhancing the VSCode Developer Experience,MdSahil-oss,https://gist.github.com/MdSahil-oss/667e2a0feb3a4eaadea7073e21d8f652,"Cezar Craciunoiu, Alexander Jung",Unikraft,"typescript, Galang, Linux CLI, VsCode Development",VsCode Extension,"In this project, I will upgrade the VSCode extension to use KraftKit, the newly released CLI companion tool for Unikraft rewritten in Go. The project requires modifications to the project's main binary, kraft, to enable JSON output of various commands so that the integration with VSCode can be done through a machine-readable interface. Additionally, I'll enhance the experience, including adding support for additional steps in Unikraft's build cycle: packaging unikernels in different formats, providing a linting mechanism so that projects which are developed for Unikraft can be checked for compatibility.",https://summerofcode.withgoogle.com/programs/2023/projects/ZUeHjGnO
Improving Test Coverage for PEcAn Packages,Meet M Agrawal,https://docs.google.com/document/d/1U8SAll-lAnJo77BS6ri6_fCy-q6fD8vwVV2g0_aZh3o/edit?usp=sharing,"Mike Dietze, Chris Black, Qianyu Li, Ankur Desai",PEcAn Project,r,"testing, R Package Development","The short term goal is to improve unit test coverage for PEcAn base packages. The overall PEcAn ecosystem of packages (e.g, models and analysis modules) are heavily dependent upon these packages, thus having a good test coverage for these would improve overall system reliability. The medium term goal is to increase the reliability of PEcAn’s integration tests, and thus my second round of package testing and refactoring will prioritize the packages that are most associated with overall workflow bottlenecks (e.g., PEcAn.data.atmosphere, which is focused on downloading and processing meteorological data). An added long term goal would be to document testing approaches to make adding tests more smooth and consistent across packages for future packages or functions that get on-boarded, thereby making them more maintainable and reliable.",https://summerofcode.withgoogle.com/programs/2023/projects/ozz95eVk
OpenG2P - Digital Identity Proof of Concept with MOSIP,Meghna Bajoria,https://gist.github.com/meghnabajoria/fd1ead0534ab8b470950fa85d3c6965c,"jeremy engelbrecht, Param Mirani",The Mifos Initiative,"javascript, java, hibernate, html, sql, spring, angularjs, rest, MOSIP",development,"The aim of this project is to enhance the online banking experience by providing a secure and smooth integration between Mifos, a financial account management system, and either MOSIP, eSignet or KeyCloak for authentication. While the choice between MOSIP and KeyCloak is currently under consideration, the project's primary goal remains to connect a customer's MOSIP ID to their Mifos account using a relying party token during the KYC collection process. Once the linkage is established, users can easily log in to their banking app through eSignet/ KeyCloak and access the information stored in their MOSIP digital ID securely.",https://summerofcode.withgoogle.com/programs/2023/projects/PrBZtvtd
Question-Answering over DBpedia with Pretrained Auto-regressive Models,Mehrzad Shahinmoghadam,https://github.com/dbpedia/neural-qa/tree/master/gsoc/mehrzad,"Tommaso Soru, Anand Panchbhai, Saurav Yogen Joshi, Dr. Sanju Tiwari",DBpedia,"python, tensorflow","knowledge graphs, Transformers, Large Language Models, Question-Answering","This proposal aims to contribute to addressing the challenge of generating formal SPARQL queries from natural language questions, thereby facilitating intuitive question-answering from open knowledge graphs, such as DBpedia. Among the three major approaches to this task, i.e., classification, ranking, and translation [Chakraborty et.al, 2019], this proposal will primarily focus on the latter one (translation). The key motivation behind choosing the translation approach is the significant performance improvement observed with the use of pre-trained language models such as T5 or GPT models in translation tasks.",https://summerofcode.withgoogle.com/programs/2023/projects/zXaUziXG
Participatory design enhancements to NeoRoo app.,Mehul Kumar,https://github.com/Mehul-Kumar-27/GSOC-23-Mehul-Kumar,"Dr. Sherri Bucher, Khushboo Chandnani",LibreHealth,"flutter, rest api, DHIS2",Android Development,"Approximately 15 million premature infants are delivered each year, who face a higher risk of neonatal mortality, particularly in low and middle-income countries. One common complication of prematurity is neonatal hypothermia, which can be effectively treated with Kangaroo Mother Care/Skin-to-Skin care (KMC/STS). However, the implementation of KMC/STS is limited by various barriers such as inadequate healthcare workforce and the labor-intensive nature of neonatal care, leading to inconsistent scale-up of KMC/STS. The goal of this project is to developed to automate vital sign monitoring, facilitate multi-patient tracking, and enable shared goal setting for education, KMC, and discharge. The primary aim of this application is to provide timely alerts to parents and caregivers upon detecting any abnormality in vital signs, thus preventing adverse outcomes. The feasibility and acceptability of this device in US health facilities are being evaluated.",https://summerofcode.withgoogle.com/programs/2023/projects/QKyiu6a7
Obstacle Avoidance for Autonomous Driving in CARLA Using Segmentation Deep Learning Models,Meiqi Zhao,https://theroboticsclub.github.io/gsoc2023-Meiqi_Zhao/blog/2023/week18/,"Sergio Paniego Blanco, Nikhil Paliwal",JdeRobot,"python, pytorch","robotics, vision, Autonomous Driving, Imitation Learning","Behavior Metrics is an open-sourced autonomous driving network comparison tool that allows the user to load and test their autonomous driving models in different scenarios and compare the performance metrics against other models. Currently, Behavior Metrics only supports the follow-the-line task, where the vehicle must drive along a circuit while maintaining proximity to the center of the lane, and provides multiple trained models for benchmarking. This project aims to expand the current stack by adding support for a route navigation task where the agent follows a sequence of high-level commands to reach a destination while avoiding obstacles in CARLA simulator, as well as providing an end-to-end learning solution for the task. The ultimate goal is a model that enables an ego vehicle to follow the route while avoiding collision with dynamic objects, such as pedestrians and other vehicles, and comprehensive evaluation metrics for the new task.",https://summerofcode.withgoogle.com/programs/2023/projects/n26Ayew7
UV Editor Improvements,MelissaGoon,https://devtalk.blender.org/t/gsoc-2023-uv-editor-improvements/29329/14?u=melissa_goon,Campbell Barton,Blender Foundation,"c, c++","graphics, modeling","The goal of this project is to implement user-suggested improvements to the UV Editor tools in order to help users create UV maps more easily. The main focus of the project would be incorporating more Mesh Edit tools into the 2d UV Editor such as Edge Slide, adding optional visible outlines to the UV islands as well as including the number of vertices removed by the Merge by Distance operator. Additionally, other small features that improve the user experience may be worked on if time allows.",https://summerofcode.withgoogle.com/programs/2023/projects/GiNuS5Qn
Common API for large molecular databases,menasrac,https://medium.com/@menasrac/the-end-of-my-google-summer-of-code-journey-8d31f989f0e6?source=friends_link&sk=2a32424a4ae65c56591f4c182b5cc82d,"Erwan, MinouHub, HajimeKawahara",OpenAstronomy,"python, github","ComputerScience, Molecular Spectroscpy","RADIS can handle different databases such as HITRAN, HITEMP, EXOMOL, GEISA, etc. Another open-source code, called EXOJAX, exchanged portions of code with RADIS until some parts of both codes became very similar. Currently, a database API is written in the RADIS code. The main goal of the current project is to improve this common API to download and manage databases. The mentee will not start from scratch because the community already worked on the problem and set up a frame for this big merge of code built around a DatabaseManager class.",https://summerofcode.withgoogle.com/programs/2023/projects/rKho4M6m
Conmon-rs support for podman,mgjm,https://link.mgjm.de/gsoc-2023,"Peter Hunt, mheon",CNCF,"go, rust",containers,Running containers with podman using conmon-rs as the container monitor. This requires additional features to be implemented in conmon-rs and an extension of podman to use the new conmon-rs go client as an alternative to the existing conmon binary executable.,https://summerofcode.withgoogle.com/programs/2023/projects/xwEB63cl
FHIR: Add support for FHIR PATCH operations,mherman22,https://github.com/mherman22/GSOC-FinalReport#add-support-for-fhir-patch-operations,"Daniel Kayiwa, Ian Bacher",OpenMRS,"java, json, xml, fhir","FHIR API, PATCH operations, Restful Services","OpenMRS is using the FHIR API more and more in place of the REST API. However, the FHIR API is, by default, quite verbose. Supporting PATCH operations would allow us to support partial updates to FHIR resources without needing to send the whole resource from the client to the server.",https://summerofcode.withgoogle.com/programs/2023/projects/uo8ely8C
fMRI Support to InVesalius,Michael Chan,https://github.com/miki998/invesalius3/tree/fmri_supp,"Thiago F Moraes, Paulo Henrique Junqueira Amorim, Renan Matsuda, Victor Souza",Invesalius,"python, opencv, UI","imaging, 3D visualization, fmri","Currently InVesalius does not support simultaneous visualization of structural MRI and fMRI volumes. This is however of large interest to visualize both modalities for people involved in the clinical and analytical domain. Indeed a direct implication would be to have functional connectivity induced graphs visible along with structural connections (white matter). On top of which, after generating 3d maps, it may then be possible to visualize in space the functional connections versus structural connections. First of all, this project would be a useful feature to InVesalius, but secondly also to the neuroscience community. By having InVesalius open source and in a UI format it would enable clinical experts or neuroscientists without engineering background to have ready to go visualization of fMRI and structural MRI volumes. In general this could be extended to other modalities as well. Two possible ways to simultaneously visualize structural MRI and fMRI are: 1. Overlay different masks or contrasts (need to be carefully picked) for each of the two modality. There might be a need to apply some color distribution matching between structural and functional (e.g histogram equalization) since one would be T1 and the other T2 to have better visualization. Both slices would need to be co-registered prior to overlaying. The effect on the generation of 3D visualization would also be cared for. 2. Having two views or preview of fMRI in each orientation (sagittal, coronal, axial and 3d). Two views or one main view and a preview would require to have a tracker (dot) that points to the same voxels in the two views. This could be a way for the user to match regions for instance and essentially avoid crowding the visualization. The language I plan on using and believe fits the project would be python. The potential libraries used during the project would include already required ones for InVesalius (e.g scipy,opencv)",https://summerofcode.withgoogle.com/programs/2023/projects/QeC87EKQ
Million scale nearest neighbor search for mass spectra using different spectral representations,Miguel Robles,https://github.com/mzmine/vector_db.git,Olena Mokshyna,MZmine and MS-DIAL,java,"api, indexing, Search Algorithm","In this project, we will aim to develop algorithms that can effectively and efficiently search large-scale mass spectral databases to improve further identification and annotation of chemical compounds. The development will be based on the existing search tools, such as Mass Search Tool and various spectral representations. To accomplish this, the project will need to extensively explore various indexing and search algorithms, optimize them if needed, and utilize optimal spectral representation.",https://summerofcode.withgoogle.com/programs/2023/projects/eDGt4qsb
Finding Exoplanets with Astronomical Observations,Mihir Tripathi,https://medium.com/@mihirtripathi97/exxa-detecting-planets-in-dusty-disks-bd5a7db30cc8,"Emanuele Usai, Shravan25",Machine Learning for Science (ML4SCI),"python, tensorflow","machine learning, astronomy","Protoplanetary disks are birthplaces of planetary systems. Newly forming planets inside a protoplanetary disk interact with gas and dust in the disks and as a result of these interactions various substructures (gaps, rings, azimuthally asymmetric emissions, spirals) form in the disk's dust density distributions. While with current instruments, we can not directly observe these young planets, we can image the protoplanetary disks at very high angular resolutions and can study the morphology of substructures. This project aims to develop an ML model that can predict the presence of forming protoplanets and their properties from the images of protoplanetary disks.",https://summerofcode.withgoogle.com/programs/2023/projects/ZH6drPWV
Out-of-process RDP server for QEMU,Mihnea Buzatu,https://docs.google.com/document/d/1w2gB8xJNDlhRl7WwN9GMl_jzLsyW6lTW7IXi__01Vpg/edit?usp=shar,Marc-Andre L,QEMU,"rust, D-Bus, RDP, RemoteFX","networking, remote desktop","QEMU is able to export its display over D-Bus. We can create a server that uses the provided API to export the display over the network. There is already an experimental VNC server, but RDP is more popular and would provide more features and better efficiency.",https://summerofcode.withgoogle.com/programs/2023/projects/ps0s1dH2
Improving Japanese Search Capability: Adding Japanese Morphological Analysis Functionality,Miku,https://docs.google.com/document/d/1wuVfzD_F2dyUMW6Gdg0RZWmkMhzTnP6X-LQ41WyEXQQ/edit,"Sarah Hoffmann, mtmail",OpenStreetMap,python,morphological analysis,"Japanese addresses are unique and have a different system compared to other countries. The address format is in block style, and is different from address formats in other regions. In addition, the language used is Japanese, and English is not commonly used. As a result, Japanese users face many challenges when searching for locations in Japan using Nominatim. In this proposal, I will address the issue of Japanese Kanji being recognized as Chinese characters, resulting in incorrect locations being returned. Specifically, we will conduct morphological analysis on Japanese searches and perform proper word segmentation at appropriate positions. The objectives of this proposal are as follows: Ensure that Nominatim does not mistake Japanese searches for Chinese. Ensure that Japanese location searches return locations within Japan. Ensure that Nominatim correctly identifies the block and house numbers in Japanese addresses, avoiding confusion between the two.",https://summerofcode.withgoogle.com/programs/2023/projects/0TtY6g6k
Enhance Tokenizers and Implement end-to-end Token Classification Tasks,"Mishra, Anshuman",https://docs.google.com/document/d/1j9obAx5vrPyQXLqCmSHhNQQqZjHB3jOGmHSCOxR3FkA/edit?usp=sharing,"Matthew Watson, Chen Qian",TensorFlow,"python, tensorflow","machine learning, natural language processing","The objective of this project is to implement Token Classification tasks for the KerasNLP library. The focus will be on enhancing the tokenizers API to allow for greater flexibility with offset mapping use cases. The ultimate goal is to use the enhanced tokenizer for the implementation of a Token Classification Pipeline. This will involve creating separate preprocessing and task classes for all the models. Finally, the project will be supplemented with a Keras-io example demonstrating Token Classification using the KerasNLP library.",https://summerofcode.withgoogle.com/programs/2023/projects/X4GwVWLu
"TopOpt.jl -- introducing more physics and problem types (Heat Compliance, Fluid Flows)",mjachi,https://github.com/JuliaTopOpt/SimpleTopOpt.jl,Mohamed Tarek,The Julia Language,"julia, FEM, NonconvexOptimization, TopOpt","scientific computing, numerical methods, Finite Element Method, Topology Optimization, Mathematical Engineering","TopOpt.jl currently supports only linear elastic type problems (meaning a limited set of physics), but, naturally, several other sorts of topology optimization problems are of great interest to practitioners in engineering and product design, namely thermal and fluid flow compliance. Beyond that even, multiphysics problems combining several of these effects are of interest as well. So, we would like to implement and include these sets of physics and the related topology optimization problems in the package. Specifically, we will - implement the necessary numerical backend features to support thermal compliance and rudimentary fluid flow problems, increasing the available feature set, - implement appropriate front-end features to make use thereof, following the package's existing methodology, - and, as a reach, I would like to work on combining some of the above and propose a method for introducing multiphysics capabilities in some capacity. Of course, this all will be documented and tested alongside existing examples from relevant surveys/ the seminal papers.",https://summerofcode.withgoogle.com/programs/2023/projects/9CtYsOxH
Select Tool and UI Enhancements,Mohamed Adham,https://github.com/synfig/synfig/issues/3225,"RodolfoRG, BobSynfig, Ankit Dwivedi",Synfig,"c++, gtkmm","ui, optimizations, 2D vector animation","This project mainly aims at improving the user experience of Synfig. It does so through various improvements. The first is implementing non-vertex editing tool/s. It also attempts to improve the performance by testing internal layer operations to see if it would be beneficial to apply caching optimizations to them. Other than that, it also includes fixing various crashes and issues. The project is divided into the following parts: 1- “Select (non-vertex editing) Tool” : Includes implementing tool/s to handle various transformations in non-vertex ways. 2- Fixing UI Lags and Crashes: Includes testing internal layer operations to see if they would benefit from caching mechanisms (implementing the mechanisms if they would be beneficial), and fixing various crashes. 3- Additional Features/Fixes: Includes various miscellaneous improvements.",https://summerofcode.withgoogle.com/programs/2023/projects/1AkN3EFi
User management and notifications (continuation of GSoC'22),Mohamed Ahmed Fathy,https://github.com/mhmdahmedfathi/GSOC-23/blob/main/README.md,"Romain, emileaben",Internet Health Report,"python, javascript, django, redis, celery, kafka, VueJS","web, internet, bot, communication., cron jobs, scripts","By introducing the concept of threading and based on the fact that Redis is being used to cache data, it will be easier to make more than one caching layer and each layer will define a worker for each type of notification so they will be used in parallel and there will be no delay in response or time-limit error. Adding a new page to ask them if they want to start receiving notifications, and when they click the desired channel, a pop-up message will give them instructions on how to join the notification bot so they can be added to each channel and start receiving notifications from this channel.",https://summerofcode.withgoogle.com/programs/2023/projects/RRZKQNLm
Alarms correlation and aggregated reports (online tool) IHR Project - Mohamed Awnallah GSoC Proposal,Mohamed Awnallah,https://mohamedawnallah.github.io/gsoc2023/,"Romain, emileaben",Internet Health Report,"javascript, VueJS, plotly.js","web, data visualization, data aggregation","The project aims to develop an online tool that can group and aggregate topologically or geographically related alarms in IHR's monitored metrics. The tool will include a JS module for analyzing and aggregating alarms, a VueJS component for displaying the aggregated alarms, and integration with IHR's global report. The tool will provide multi-dimensional reports to enhance the visibility and management of the most important events that generate numerous alarms across multiple datasets.",https://summerofcode.withgoogle.com/programs/2023/projects/u7Y9S6sc
Improved Realtime Control with MoveIt Servo [MoveIt 2],Mohamed Raessa,https://gist.github.com/Robotawi/7e2150801977751aebf4eb442c2d1538,"Sebastian Castro, Stephanie Eng",MoveIt,"c++, 3D geometry, ROS 2, MoveIt 2, Transformations","robotics, Manipulation, Robot arms","Problem: MoveIt Servo is a powerful tool for real-time robot control, but its current ROS-only interface limits its accessibility to C++ applications. Additionally, there is a need for better documentation and features, such as the ability to pause and resume motion. Solution: In this project, I propose to improve MoveIt Servo's accessibility to C++ applications and develop callbacks for pausing Servo. I will also document how to create and use custom IK goal functions and implement real-time IK cost function updates. Deliverables: Implement a C++ interface for MoveIt Servo. Develop callbacks for pausing Servo in relevant scenarios. Document how to create and use custom IK goal functions with the pick_ik package. Implement real-time IK cost function updates. Provide well-documented code and tutorials with visualizations for the MoveIt community.",https://summerofcode.withgoogle.com/programs/2023/projects/2FZAv9Y7
YCbCr Support for the Nouveau Vulkan Driver,Mohamexiety,https://mohamexiety.github.io/posts/final_report/,Faith Ekstrand,X.Org Foundation,"c, c++, vulkan","graphics, driver development, Colorimetry","YCbCr is a color space used in video and digital systems to express color, where Y is the luma component and CB and CR are the blue-difference and red-difference chroma components respectively. This project aims to add YCbCr support to the Nouveau Vulkan driver (NVK), which opens the way for support for more applications and is also an important step towards Vulkan 1.1 compliance. Work on this project is split into 4 phases; first investigation and reading up the relevant parts of the Vulkan specification and the open-sourced NVIDIA hardware headers, second the actual implementation and coding, and finally the third and fourth stages being verification and review where I verify that the implementation is working and conformant, and fix any issues that pop up. All this would then be followed by a merge request implementing and enabling YCbCr support in the driver.",https://summerofcode.withgoogle.com/programs/2023/projects/YQplnMlR
MediaPipe Flutter Plugin,Mohammad Eid,https://github.com/googlesamples/mediapipe/tree/main/examples/object_detection/android-jetpack-compose,Paul Ruiz,TensorFlow,"kotlin, flutter, dart","machine learning, computer vision, nlp",The project aims to make a MediaPipe plugin for Flutter. The basic idea is to make an API for Flutter developers to use MediaPipe platform-specific frameworks without needing to worry about every platform's specific implementation. I aim to make this plugin robust and easily extensible so that we can add support for other platforms and other MediaPipe products later on. The main goal for the project this summer is to have Android support for the plugin along with a base plugin framework to build upon in the future.,https://summerofcode.withgoogle.com/programs/2023/projects/KKSfVREX
Ethernet and SMP support for Raspberry Pi 4B AArch64,Mohd Noor Aman,https://0xnoor.hashnode.dev/gsoc-2022-final-submission-rtems-smp-support-for-raspberry-pi-4b,"Alan Cudmore, Kinsey",RTEMS Project,"c, python, assembly, raspberry pi, aarch64","networking, real-time os, Ethernet, SMP","Last year, RTEMS started to support Raspberry Pi 4B AArch64. But as of now, it is just a bare BSP with only a console and clock driver and nothing else. My project aims to bring SMP (Symmetric Multiprocessing) and Ethernet support for the BSP. This will enable the BSP to perform multiple tasks more efficiently across multiple cores, and Ethernet support will enable the BSP to connect to the internet, facilitating real-time communication and data transfer between devices on a network or over the internet.",https://summerofcode.withgoogle.com/programs/2023/projects/dvaQPPpV
Miro App for Rocket.Chat,Mohd Sameer,https://github.com/myselfmohdsameer/Google-Summer-of-Code-2023,"Mustafa Hasan Khan, Rafael Tapia",rocket.chat,"api, typescript, OAuth2, Webhook, HMAC","web, API Integration, Connector","Rocket.Chat is the place where teams from large organizations assemble, coordinate and communicate. People discuss their work, manage it and share their part on the platform. Miro is #1 cloud based online whiteboard for visual collaboration. Through my project, I aim to take a step in this direction by implementing Miro right in our chatbox. Through the ability of managing user’s boards and making rooms with members as assignees of a board and/or as members of a team, it would ameliorate user experience, as it would allow them to quickly view/update/share their boards with other channel members without even leaving the channel let alone the browser tab. The provides 10x more value than what our competitor's Miro app offer for their platform. We will give users ability to preview boards and embed boards in channels using Miro's live embed and give the feature of dynamic modal rendering specific to board items.",https://summerofcode.withgoogle.com/programs/2023/projects/1FcGYb40
GNOME Control Center: List and handle IPP print services for the New Architecture,Mohit Verma,https://github.com/vermamohit13/GSOC-2023,"Till Kamppeter, Ira McDonald, Zdenek Dohnal, Rithvik Patibandla",The Linux Foundation,"c/c++, gtk, CUPS/IPP, GNOME","linux, GNOME, Gnome Control Center","Modern printers usually are driverless IPP printers, and those get discovered fully automatically by CUPS; no CUPS queue needs to be explicitly created. Same for remote CUPS printers and also Printer Applications . They are all discovered as IPP print services. And listings of IPP print services have different requirements: One server can have more than one individual print service and these should get listed together. This could be a print queue and a fax out queue of the same multi-function printer, or two physical legacy printers supported by one Printer Application. Also the user interaction coupled to each listing is different. We do not need to configure PPD option settings, but instead, we need access to the IPP service's web administration interface and also to an IPP System Service configuration panel by a simple mouse click. Several parts of this were already coded in previous GSoCs, but we need to get everything smoothly integrated in the “Printers” part of the GNOME Control Center. I will work together with the upstream maintainer of the “Printers” module, Marek Kasik and also with the UI/UX design teams of GNOME and of Canonical.",https://summerofcode.withgoogle.com/programs/2023/projects/1RcJRKse
VLC Qt Interface Redesign,Mohit Marathe,https://github.com/mohit-marathe/vlc-gsoc-2023-report,chubinou,VideoLAN,"qml, Qt/C++",user interface,"I propose to update VLC Media Player by leveraging Qt to design a more modern and elegant interface which would result in a heightened user experience and greater adoption over time. Specifically, I plan to implement multiple features into VLC Media Player which have been requested by the VLC community. This project will benefit VLC users by providing a more intuitive and engaging user experience, making it easier to navigate and access the player's features. It will also benefit the VLC community by attracting new users and contributors, and by providing a foundation for future interface improvements.",https://summerofcode.withgoogle.com/programs/2023/projects/z26bcE5j
Maintenance/bug fixes for Music Blocks 3,Mohit53,https://docs.google.com/document/d/1rYJhfBzcAldhAtW8SHx5HZZpfbGkk4aCaEc8z0P7MDU/edit,"Walter Bender, Devin Ulibarri, Avishkar.10",Sugar Labs,Html Css JavaScript,Maintenance/bug fixes for Music Blocks 3,"Using HTML CSS and JavaScript to-, 1. Maintain the Music Block v3 and fixing bugs related to Styling, Browser specific, improving the overall layout of the website and solving High priority issues . 2. Adding new functionalities like Recording feature , Full screen mode ,and touch scrolling",https://summerofcode.withgoogle.com/programs/2023/projects/JfbBXbUA
Devops Modernization of IHR,Mostafa ElGendi,https://docs.google.com/document/d/17G2Ay8liGDONDUxke6UNPoGcEhJkfi8Q1_7zskv-NWs/edit?usp=sharing,"Romain, Malte Tashiro, AnantShah",Internet Health Report,"python, make, docker, bash","monitoring, cloud, docker, python, devex",25% of engineering time is spent on devops chores. The aim of this project is to automate those 25% to free researchers to do science full time instead of hoping between research and technical support.,https://summerofcode.withgoogle.com/programs/2023/projects/zAcrMg3G
"Hash Maps That Don’t Hate You: A Proposal For Fast, Insertion-Ordered Hash Maps in Truffleruby",Mostafa-M-K,https://github.com/oracle/truffleruby/pull/3172,"Benoit Daloze, Kevin Menard",Ruby,"java, ruby, Truffle, GraalVM, Graal","interpreters, Hash Maps","The project this document proposes is that of implementing the hash map structure described in high level detail in the article Hash Maps That Don’t Hate You (https://blog.toit.io/hash-maps-that-dont-hate-you-1a96150b492a), an elegant variation over standard open addressing hash tables that, instead of storing the Key-Value pairs themselves in the array backing the hash table, it stores indices into yet another insertion-ordered backing array. This allows us to have our cake and eat it too : we get insertion-order iteration while still maintaining most of the desirable performance guarantees expected from hash tables, with reasonable implementation complexity. Deliverables: A build of truffleruby with a Hash implementation as described in the article, supporting all standard Ruby Hashes operations (as of Ruby 3.1) and hopefully faster and\or more memory efficient than the current implementation of Hashes in truffleruby.",https://summerofcode.withgoogle.com/programs/2023/projects/dxbIv9s3
OpenWRT PPA Part 2,Mr. Andrei,https://gist.github.com/ndren/399c5e7c86658a4f1cdfcf43b191de2f,Zoobab,freifunk,"bash, OpenBuildService","package management, OpenWRT","Original project proposal: https://projects.freifunk.net/#/projects?project=openwrt_ppa_part_2&lang=en Currently, compiling OpenWRT packages for a device router requires dealing with the non-standard build system SDK. It would be very useful if this could be abstracted away by a generic build system. This project proposes integration with OpenSUSE's OpenBuildService, which also provides automation and remote compilation. The plan currently looks like the following: 1. Document the existing approaches on automating the build system. 2. Write a build script that integrates with the obs-build repository. 3. Get security approval, as documented in https://github.com/openSUSE/obs-build/blob/master/HOWTO.add_another_format. 4. Verify the system works by testing on https://openbuildservice.org. I have already contacted zoobab (Benjamin Henrion), the mentor for this project and I have successfully verified that cascading Docker images successfully compile a package.",https://summerofcode.withgoogle.com/programs/2023/projects/bN4xJR6h
SIMD for SQL expressions and functions,Mu He,https://gist.github.com/MuHe03/7f3829fe68bd8f2d3364229154be8da1,Andrey Piskunov,MariaDB,"c++, sql","database, SIMD","Current Mariadb ColumnStore engine doesn’t support vectorized evaluation of SQL functions and expressions. This project want to cover this by adding row/col transformation before the evaluation and evaluate the performance improvement. Furthermore, this project will also try to accomplish a delayed projection into RowGroup, which store data in vertical stored buffers and optimize the transformation part.",https://summerofcode.withgoogle.com/programs/2023/projects/846SqnAJ
ns3-ai enhancements,Mu Yuan Shen,https://www.nsnam.org/wiki/GSOC2023ns3-aiFinalReport,"collin brady, HaoYin",The ns-3 Network Simulator Project,"python, c++, ns-3","machine learning, network simulation, Interprocess communication","The proposed project aims to enhance the ns3-ai module, which provides interfaces between ns-3 and Python-based ML frameworks using shared memory, with a focus on performance optimization and expanding the range of supported data structures. To achieve this, the project will introduce APIs for additional data structures like vector and string in shared memory IPC to reduce the interaction between C++ and Python. Additionally, the project will provide examples demonstrating how to implement ML algorithms within ns-3 using C++ and open-source frameworks such as TensorFlow and PyTorch. The project will also improve the current examples and documentation and integrate new examples, such as LTE handover. Overall, the project aims to expand and accelerate the capabilities of the ns3-ai module, enabling users to simulate and analyze large-scale networks with greater efficiency and flexibility.",https://summerofcode.withgoogle.com/programs/2023/projects/A4KZ7dxo
Pajamas Migration - GitLab Foundations Team,Mughees Pervaiz,https://gitlab.com/-/snippets/2587070,James Rushford,GitLab,"javascript, ruby on rail, vue.js, react.js, HAML","devops, Pajamas Migration, Gitlab Ui Interface","I am writing to express my interest in contributing to GitLab's Pajamas Migration project as part of the Google Summer of Code program. As a computer science student at South Asia University, I am eager to gain more experience in the open-source community, and I believe that contributing to Pajamas Migration would be an excellent opportunity to do so. In Pajama Migration We have to ensure that all of the frontend components we use are GitLab-UI components, there are still some pages that are not using the right components. I am already Involved with Gitlab through MLH Fellowship and am working with the Foundation Team under the mentorship of our maintainer (James Rushford). James was a really great leader and mentor. I have worked on the following issue so far 112392, and 115432, and right now I am working on Pajamas Migration with our maintainer(James) on issues #395782 and #396775. my Deliverables will include~ : Complete Pajamas migrations. : Build out the design system. : improve user experience My plan~ May 4 - May 30: read project-related documents and codes, and get started quickly. May 30 - July 5: reasonably divide the work with another contributor, and record the corresponding documents at the same time. july 5 - august 21: will continue work on our plans and will try to complete our mission and also will get feedback from the mentor. my previous experience at MLH with Gitlab was incredible. I gained valuable technical and soft skills, and I had the opportunity to work on real-world projects with experienced developers. Working with Gitlab helped me gain a better understanding of DevOps.So, I am looking forward work with GitLab again. I am looking forward to hearing back from you and learning more about how I can get involved in this project in your way. Maybe by giving more details? Knowing the Scope. Thank you for considering my application.",https://summerofcode.withgoogle.com/programs/2023/projects/femokhnv
Leverage Spark Connect for interactive data analysis in Jupyter Notebooks,Muhammad Aditya Hilmy,https://didithilmy.github.io/gsoc2023,"Diogo Castro, Enric Tejedor, Luca Canali",CERN-HSF,"python, typescript, spark, JupyterLab","web, Data Engineering","CERN uses a service called Service for Web Analysis (SWAN) to perform analyses on scientific data, which is built on top of Jupyter notebook. Currently, the way a notebook kernel connects to a Spark cluster is through SWAN’s own open-source SparkConnector extension. Due to a current Spark limitation, it is not possible for multiple notebooks to share the same set of Spark resources. In addition, the process of spawning the Spark resources could take a while, and may add an inconvenience. Currently, an effort is underway to employ a client-server architecture known as Spark Connect. This would allow multiple notebooks to connect to a previously instantiated Spark session and submit computations to it. To make allocating Spark resources easier for users, this project proposes the development of a JupyterLab extension. The extension shall have a friendly interface that would allow users to instantiate one or more Spark sessions–in which the notebook will be able to connect, configure proper credentials and authentication, and make the connection accessible to the notebook code. The connection and session will be persistent across multiple kernels and restarts.",https://summerofcode.withgoogle.com/programs/2023/projects/2Z7UhtwJ
Improving user errors & Error Code Support for GCC Rust Frontend,Muhammad Mahad,https://mahadmuhammad.github.io/gsoc/23/r/final-report/,"Philip Herron, Arthur Cohen",GNU Compiler Collection (GCC),"c/c++, gnu make, gnu autotools","compilers, developer tools, diagnostics, rust","The goal of this project is to enhance the user experience of gccrs by enabling it to emit error codes similar to rustc. This will help bridge the gap between the two test suites and eventually enable the rustc testsuite to run on gccrs. The project involves implementing necessary changes in gccrs to emit rustc error codes throughout its frontend code. Additionally, it entails expanding the code responsible for error emission to incorporate greater functionality. Furthermore, a comprehensive comparison between the rustc and gccrs test suites will be conducted to improve stability. The ultimate outcome will be an improved user experience for gccrs users, with an increased number of error emissions in various contexts and more informative hints on code resolution. By bringing gccrs closer to parity with rustc, this project aims to enhance its accessibility for users and developers alike.",https://summerofcode.withgoogle.com/programs/2023/projects/PZbjvfZl
Add Support for renode.io Simulator,Muhammad Sulthan Mazaya,https://www.mazaya.id/blogs/gsoc-final-blog,"Gedare Bloom, Alan Cudmore, Hesham Almatary",RTEMS Project,"c, python, Renode.io","testing, simulation, Embedded System, RTEMS, Build script","Renode.io is an open-source software simulator designed specifically for System on Chips (SoC) and Internet of Things (IoT) devices. It allows developers to simulate the behavior of their hardware and software designs before deploying them onto real devices, saving time and resources. Currently, there has been no documentation or testing mechanism on how to use the renode.io simulator for RTEMS. Thus, this project is created to take a look at which BSPs RTEMS have that are compatible to be used in the renode.io simulator, submit a patch to the RTEMS User’s Guide on how to use it on how to run the them on renode.io simulator, and possibly integrate the renode.io simulator into RTEMS testing ecosystem as an opt-in simulator solution.",https://summerofcode.withgoogle.com/programs/2023/projects/bQeiZzHB
A Typographic Revamp for p5.js 🌸,munus,https://www.notion.so/munusshih/A-Typographic-Revamp-for-p5-js-b02be315331c4ca7becc9bd8169dfede?p=d79c46e2bee744119c96f9b469e454dd&pm=s,"Kenneth Lim, aahdee, Kevin Yeh",Processing Foundation,"javascript, p5.js","web, creative coding, Graphic design, typography","This project aims to improve the P5.js library by fixing the issue flag on GitHub, adding new features, developing new examples for typography documentation, and interviewing creative coders for feedback. The goal is to enhance the functionality and versatility of P5.js, and ensure that it remains a valuable tool for creative coders and graphic designers.",https://summerofcode.withgoogle.com/programs/2023/projects/B8qYDtdU
The LiquidArt AI,Murilo Nogueira Duarte,https://github.com/MurilonND/LiquidArt_AI/tree/main,"Andreuibanez, Karine Pistili Rodrigues, VictorSB",Liquid Galaxy project,"flutter, rest api, Node JS",machine learning,"The LiquidArt AI is a mobile application developed in Flutter that allows users to generate images using a text or an audio to text prompt and a selection of APIs (NightCafe, a local server of Stable Diffusion, AI Art Maker, Dall-e), a multi-screen system for displaying geographic information. The application uses a Node js server to connect to the Liquid Galaxy system and a custom API to display the images on the screens. The project also includes a new local machine for the LG project that has a GPU and the ability to create AI art based on stable diffusion.",https://summerofcode.withgoogle.com/programs/2023/projects/cCYnzu24
Website Security and Penetration Testing,Musaab Imran,https://submitty.org/developer/google_summer_of_code/2023_Musaab_Imran,"Barbara Cutler, Matthew Peveler, Shail Patel, Jasmine Plum, Chris Reed, William Allen, Jensen Li",Submitty,"python, javascript, c++, html, php","security, privacy, penetration testing, Website Security, Risk Assessment","Submitty is a web-based platform responsible for managing confidential information, and it is essential to assess its security regularly. This project aims to conduct a comprehensive security risk assessment of the Submitty system, identify and repair specific security vulnerabilities, and expand and create continuous integration tools to prevent the introduction of new vulnerabilities. To mitigate the vulnerabilities in Submitty, it is essential to implement best practices in secure coding, such as input validation, access control, and encryption.",https://summerofcode.withgoogle.com/programs/2023/projects/jjv12quT
DBpedia eXplainable Chatbot (DBpedia XChat),Muskan Kothari,https://colab.research.google.com/drive/1XGPZSr2I-NJa0vxVUkHUQoAsHy277mNq?usp=sharing,"Ram G Athreya, Ricardo Usbeck, Aleksandr Perevalov, Andreas Both",DBpedia,"python, javascript, rdf, docker, rest api, sparql, natural language processing, shell scripting, GitHub Actions","machine learning, natural language processing, semantic web, natural language understanding, linked data, knowledge graphs, Explainable AI, Named Entity Recognition, question answering","DBpedia unifies the amount of information on the web in Wikimedia projects and provides access in the form of an Open Knowledge Graph. Started in 2021, a DBpedia GSoC project led to the development of a Dialogflow-based chatbot that enables users to access the DBpedia Knowledge Graph (KG) using Natural Language (NL). This QA system provides accessibility but is still quite static. The goal of this GSoC project is to make the QA chatbot more explainable and accessible to increase credibility, accountability, and trust, which helps the user obtain explanations on how the result was obtained, what resources were used, intermediate processing steps and components’ behaviour. This project would achieve the goal by 1) Work with the current codebase to refine and refactor, followed by deployment and a CI/CD pipeline using Docker and GitHub Actions. 2) Introduce new features to the chatbot by adding scenarios that adds explainability on Qanary pipeline and its components. 3) Evaluation of the DBpedia chatbot by running A/B tests to measure user satisfaction 4) Machine Learning integrations might be used to create recommendations for improved QA pipeline configurations.",https://summerofcode.withgoogle.com/programs/2023/projects/iokIa3MQ
Epoptes improvements,Myrto Georgopoulou,https://github.com/eltoukos/epoptes/,"fottsia, Yannis Siachos",Open Technologies Alliance - GFOSS,"Python, GTK, Shell, networking, systemd services, Wayland, XDG desktop portals",Computer lab administration and monitoring,"Introduction Epoptes (Επόπτης - a Greek word for overseer) is an open source computer lab management and monitoring tool. It allows for screen broadcasting and monitoring, remote command execution, message sending, imposing restrictions like screen locking or sound muting the clients and much more! It can be installed in Ubuntu and Debian based labs, it has been translated in more than 40 languages and it’s currently in use by thousands of schools and businesses around the world. This project aims at making Epoptes even more widely available by creating packages for other Linux distributions, while also addressing several outstanding issues such as firewall friendliness, systemd and Wayland support. Project goals The Epoptes community members have been requesting the following features and improvements for a long time, and I plan to implement them as part of this GSoC project: • Make Epoptes available on more Linux distributions. • Support screen sharing on Wayland. • Drop the session service and keep only the system epoptes-client service. • Use systemd socket activation and autorestart. • Improve its firewall compatibility.",https://summerofcode.withgoogle.com/programs/2023/projects/4XlDrW31
Integrate Notion via RC App,Nabhag Motivaras,https://github.com/Nabhag8848/Google-Summer-of-Code,"Samad Yar Khan, Bárbara Zanella",rocket.chat,"typescript, reactjs, Rocket.Chat Apps Engine","Rocket.chat, Rocket.Chat Apps Engine","Integrate Notion Via RC App prioritizes teamwork by enhancing collaboration for workspace users. Imagine having the power of two essential platforms, RocketChat and Notion, united as one, eliminating the need to switch between two platforms. Teams can Seamlessly Connect, Effortlessly Manage various Notion Workspaces, Share documents, and Even View Documents all within RocketChat. The real magic lies in Preserving your Important message inside the Notion Page, Structured within the Notion Database, ensuring vital discussions, decisions, and insights are never lost again, fostering alignment and inclusivity as everyone stays on the same page, even if they're not actively chatting. Whether it's brainstorming sessions, meeting notes, or shared links, find them all in one organized place. Plus, Create Comments on the Notion Page, view the Notion Database, and interact with relevant information.Welcome to a new era of streamlined collaboration, Where RocketChat and Notion work together seamlessly to fuel your team's success.",https://summerofcode.withgoogle.com/programs/2023/projects/9v76k7Q8
Survey.jl,Nadia Enhaili,https://gist.github.com/nadiaenh/78619132bd7994961398866779430e91,Ayush Patnaik,The Julia Language,"r, julia","big data, data science, statistics, data analysis, Packages, Survey analysis, Surveys","Survey.jl is a Julia package for survey analysis inspired by the R package 'survey'. It aims to address the unique challenges associated with the analysis of large survey datasets, such as weighting, clustering, and stratification. I will be completing the implementation of generalized linear models, adding support for more complex survey types, creating helper functions as needed, and helping to refactor parts of the codebase.",https://summerofcode.withgoogle.com/programs/2023/projects/feWjPxcW
[SUSOSP] Increasing the Reach of Open Source among High-Schoolers and Teenagers,Nandini Saagar,https://gist.github.com/Nandinisaagar/2e97ec06204adbe70e66bc4d9e8d8f8f,Emily Lovell,UC OSPO,"javascript, github, markdown, GitLab","visualisation, Social Media, Outreach, Blog","Contributing to an open-source project offers novices the opportunity to join a community of practitioners, build a technical portfolio, gain experience with industry tools and technologies, and have a real-world impact. This project seeks to invite and support broader, more diverse participation in open source by supporting early contributors – especially those who have been historically minoritised within tech. The project will aim to accomplish the following tasks: Creating content that anyone with some Open Source experience can use to help and guide other completely new students to the journey of OpenSource, GitHub, and all the relevant technologies. This step would involve creating content in the form of transcripts, markdown guides, blogs, and some video content, which would serve as instruction manuals or workshop notes. Providing a medium and a platform for all contributors to share their various OpenSource experiences and testimonials. The same can be done in textual or multimedia formats like videos and photographs. Conducting an Open Source Themed Hackathon/Scavenger Hunt: We can organise a simple scavenger hunt for students on GitHub, where they can be provided simple tasks like creating issues and commits! GitHub workflows are an excellent tool for auto-evaluation of the same. Technical documentation will also be provided on how other users can create their own hunts. Social Media Engagement: Social media is where most youngsters are these days. Thus, we should be leveraging the power of the same to get young minds acquainted with the technical and open-source world at a young age so they can consciously choose to explore it further.",https://summerofcode.withgoogle.com/programs/2023/projects/URv3ovZT
"Agora Vote Android: A Comprehensive Update with Jetpack Compose, CI/CD, and Result Visualization",Narendra Singh Anjana,https://github.com/AOSSIE-Org/Agora-Android/tree/gsoc-2023,"Bruno, Abhishek Agarwal, hackeramitkumar, Abanda Ludovic",AOSSIE,"kotlin, ci/cd, Android Development, RESTful APIs, Jetpack Compose","data visualization, user interface, android, Mobile App development, Voting System","The goal of this proposal is to enhance the Agora Vote Android application by implementing a modern and intuitive user interface using Jetpack Compose and Material Design guidelines, including support for Material You and dynamic color theming. We will also integrate CI/CD pipeline automation and share election results with visualization, improving the overall user experience. The project will take approximately 175 hours to complete, and the expected deliverables include a fully functional and visually appealing Agora Vote Android application with modern design elements, automated release management, and visualized election results.",https://summerofcode.withgoogle.com/programs/2023/projects/Asib4udm
Develop a morphological analyser,Natasha Singh,https://docs.google.com/document/d/1dBNZUT_qHMM1y3gSf8GvZUh4wBSUIrl4k4PvvOaV3Y8/edit#heading=h.wdi8pv1ki3o1,"Daniel Swanson, Nils H",Apertium,hfst,"computational linguistics, nlp",I will be working on creating a morphological dictionary for Kumaoni language and then use it for implementing a morphological analyzer. There are very few digital texts on Kumaoni language and no digital dictionary for it is available.,https://summerofcode.withgoogle.com/programs/2023/projects/ivKtj51T
Import / Export of HAR files addition to mitmproxy,Nathaniel Good,https://www-test.mitmproxy.org/posts/har-support/,"Maximilian Hils, Thomas Kriechbaumer",The Honeynet Project,python,HAR support,My proposal aims to add HAR file support to mitmproxy. This will include the new feature in mitmproxy that allows users to import HAR files into the program. The second addition will include a feature allowing users to export multiple flows into a single HAR file.,https://summerofcode.withgoogle.com/programs/2023/projects/XbEO9Djo
Analytics Edge Ecosystem Workloads - Rancher,Navin Chandra,https://medium.com/@navinchandra772/google-summer-of-code-2023-opensuse-project-8bd74e38d819,BWGartner,openSUSE Project,"python, opencv, docker, kubernetes, Rancher, K3s","machine learning, containers, virtual machines, Edge Computing",We will use Rancher managed Kubernetes clusters to create and deploy Machine Learning based microservice workloads for business verticals by implementing edge-core-cloud infrastructure. This project will use the concepts of Edge Computing to inference data at the edge and provide actionable insights.,https://summerofcode.withgoogle.com/programs/2023/projects/YD5TW1gM
ROOT - TMVA SOFIE Developments - Inference Code Generation for Deep Learning models,Neel Shah,https://gist.github.com/Neel-Shah-29/b2c22b07025c72496fe3dbe1fb0b1cbb,"Sanjiban Sengupta, Moneta",CERN-HSF,"python, machine learning, c++, deep learning, ONNX Operators","machine learning, deep learning, Transformers, Graph Networks","Toolkit for Multivariate Analysis (TMVA) is a multi-purpose machine learning toolkit integrated into the ROOT scientific software framework, used in many particle physics data analysis and applications. Currently, we are developing a fast inference system in TMVA, called SOFIE, that takes takes ONNX model as input and produces compilation-ready standalone C++ scripts as output. These scripts will then provide users an easy way to deploy their deep learning models in their physics software and analysis frameworks. This project will focus on development of some missing deep learning operations which will allow to build more complex networks within TMVA for parsing the Transformer based models and Graph Net Models in SOFIE. Specifically, we propose to implement the inference functionality of some ONNX operators in the code generation format. The student can choose to build this based on existing implementations in TMVA or other existing machine learning software tools or build their own from scratch. The expected result is a working implementation of modular operators classes that implement the operators as defined by the ONNX standards in the code generation format. The project requires also to write the corresponding unit tests need to validate the written code.",https://summerofcode.withgoogle.com/programs/2023/projects/xoPLgxys
Symbolic empirical representation of squared amplitudes in high-energy physics,Neeraj Anand,https://medium.com/@neerajanandfirst/my-journey-to-google-summer-of-code-2023-with-ml4sci-8822ce64464a,"Abdulhakim Alnuqaydan, Marco Knipfer, Harrison Prosper",Machine Learning for Science (ML4SCI),"python, c++, pytorch","deep learning, particle physics","In particle physics, a cross section is a measure of the likelihood that particles will interact or scatter with one another when they collide. It is a fundamental quantity that is used to describe the probability of certain interaction occurring between particles. The determination of cross-sectional area necessitates the computation of the squared amplitude, as well as the averaging and summation over the internal degrees of freedom of the particles involved. This project aims to apply symbolic machine learning techniques to predict the squared amplitudes and cross section for high energy physics.",https://summerofcode.withgoogle.com/programs/2023/projects/DLza6brS
Rejuvenating the PEcAn SDA and forecasting Dashboard,Nihar Sanda,https://koolgax99.github.io/posts/gsoc-2023-final-report/,"Mike Dietze, Istem Fer, Henri Kajasilta",PEcAn Project,"r, R Shiny","data visualization, data science","This project is primarily focused on creating an interactive display of the carbon cycle forecast and data assimilation system of PEcAn. The main goal is to revive the site-specific R Shiny Forecasting and SDA dashboard that is no longer operational and broaden its scope to cover a larger number of sites. Additionally, the plan is to construct a new comprehensive dashboard that combines both SDA and Forecasting graphs. Moreover, the proposal also aims to establish an automated notification email system for the visualizations.",https://summerofcode.withgoogle.com/programs/2023/projects/3I7TziS6
End-to-end test coverage for Abstract Wikipedia's Wikifunctions,Nikhil Mahajan,https://nik-55.github.io/GSoC-2023-Report/,Stef Dunlap,Wikimedia Foundation,"javascript, WebdriverIO","Browser Automation, E2E tests","The project idea emphasizes the importance of developing thorough tests that replicate important user journeys within the Wikifunctions platform. These tests play a crucial role in ensuring that modifications to the code (patches) don't cause any disruptions in how users interact with the application. These tests will run every time a patch is being reviewed. The primary aim is to prevent the incorporation of patches that accidentally introduce bugs into the application. These tests should fail if a patch creates problems for any of the user journeys. Moreover, these tests can aid in identifying and fixing issues effectively.",https://summerofcode.withgoogle.com/programs/2023/projects/eakHifi8
Kiwix-Desktop library rework,Nikhil Tanwar,https://gist.github.com/juuz0/0912b00616e2e5a38e07586b50502f38,"Stephane, Kelson",Kiwix,"c++, qt, vue, OPDS","desktop-apps, software-engineering","Most components of Kiwix-Desktop are written in QT C++, except for the library (aka content manager). The library is the view which allows you to handle books, locally (when books are already downloaded) or remotely (from the online catalog) to download them. Although the whole Kiwix-Desktop software is written in C++, this part is a HTML rendering widget and the details are handled in HTML/JS/CSS with the framework vue.js. The problem with vue.js is that it needs a special effort to keep the visual coherence with the rest of the app in Qt. The filters panel in the library also suffers from being outdated. Unlike other kiwix apps, it has a predefined set of libraries and categories, doesn’t save user preferences and the overall display is not too pleasant. This project aims to fix such problems.",https://summerofcode.withgoogle.com/programs/2023/projects/SvDW1HGZ
Eclipse Gradle KTS editing,Nikolai Vladimirov,https://gist.github.com/D0zee/90b63a9cfd2edb7a039f111e2406f5b8,Donát Csikós,Kotlin Foundation,"java, kotlin, Gradle API","performance, Effectivity, Eclipse Plugin Development","Project focused on improving the user experience of editing Gradle Kotlin Scripts (KTS) in Eclipse. With contributions to the Gradle Eclipse plugin, users will benefit from improved code error highlighting, code completion, and Ctrl-Click to definition functionality. By improving support for editing KTS in Eclipse, developers will be able to work more efficiently, resulting in faster and higher quality software development.",https://summerofcode.withgoogle.com/programs/2023/projects/yzuvb693
Document the contributor journey to GitLab,Niku Singh,https://gitlab.com/NIKU-SINGH/gsoc-23-final-report,"Nick Veenhof, daniel-murphy",GitLab,"javascript, ruby on rails, golang, Analytical skills, Writing skills, Self-managing ability to troubleshoot and solve problems",documentation,"This project aims to simplify the contribution process to GitLab by creating a detailed report for developers using both local and cloud-based Integrated Development Environments (IDEs). The report will identify areas where the process can be improved, and the mentee will work to address 20% of the identified gaps. The ultimate goal is to enhance the contribution experience and make it more inclusive to a broader community of developers. The project can be broken down into 3 parts Research and analysis: Aims at conducting a user research to understand the contributors journey to Gitlab. A user can contribute to gitlab in many ways through Development, Documentation, UI/UX , translation etc. main work would be to identify the contributors journey in each of those. Addressing gaps in the contributor journey Creating a list of identified gaps and discussing a way to tackle those gaps. Improving the Onboarding process Contributing to Gilab can be overwhelming, this aims at identifying the hurdles that a new contributor faces and come up with an idea to improve the process.",https://summerofcode.withgoogle.com/programs/2023/projects/aWi565W2
Music Blocks v4 Project Builder Integration,Niloy Sikdar,https://github.com/niloysikdar/GSoC/blob/main/2023/Final-Report.md,"Walter Bender, Anindya Kundu",Sugar Labs,"typescript, redux, hooks, React v18, JavaScript DOM API, DOM Manipulation, Canvas API","web, gui, Utility","The Music Blocks v4 project is a complete overhaul of the original Music Blocks project, which was derived from the Turtle Blocks project. The existing implementation, which started in 2015 using native Vanilla JavaScript, lacks modern front-end tooling and ecosystem standards, leading to difficulties in maintenance and subpar performance. The v4 project uses improved application architecture, modern tools (such as Vite, ESLint, Prettier, Docker, Jest, Cypress, etc.), better languages (TypeScript and Sass), and libraries (React for UI rendering). This will significantly enhance the overall developer and user experience, maintainability, and performance. The proposal focuses on implementing one of the main features of Music Blocks, the ""Project Builder"", which is currently missing in the new version (v4). The Project Builder is a graphical blocks manager module used to create Music Blocks programs, including interactive blocks like Start, Rhythm, Note, Pitch, Instrument, and many more. These blocks can be dragged, dropped, and clicked to perform actions or open context menus. By implementing the Project Builder feature end-to-end, users will be able to create different musical patterns seamlessly. This will bring the v4 project on par with the capabilities of the old version (v1) and provide a more accessible, efficient, and user-friendly application for users to create music through an interactive web application.",https://summerofcode.withgoogle.com/programs/2023/projects/Rti7iZKG
Mission Support System : Implement a SAML 2.0 service provider (SP) into mscolab,Nilupul Manodya,https://github.com/Open-MSS/MSS/wiki/Implement-a-SAML-2.0-service-provider-(SP)-into-mscolab-:-GSOC-2023,"joernu76, Reimar Bauer, Matthias Riße",Python Software Foundation,"python, qt, flask, git, SAML2.0, UI Programming","web, qt, Authentication and authorization, SAML2.0","A collaboration server is owned by Mission Support System. Local users can be created by using this server. Existing identity providers using SAML 2.0 are desired to be used. A service provider (SP) needs to be implemented on the server side in the existing WSGI application and an authentication into the QT client application. When a user logs in on the QT client, a browser will be triggered for the login process. The QT client user can authenticate afterward by exchanging a one-time token. To test the system, a local identity provider (IdP) will be configured and a few tests will be added.",https://summerofcode.withgoogle.com/programs/2023/projects/hnWHcEYQ
GSoC Project Proposal: IDEA3 - Simple triangle rendering,Ningyu Zhu,https://github.com/nickyu-zhu/GSoC-Rendering-module-in-OpenCV,Rostislav Vasilikhin,OpenCV,"opengl, c++, opencl, simd","parallel, computer graphics, Neural Rendering, Mesh Rendering","This proposal aims to add useful functions for forward and inverse rendering to the OpenCV 3D module. The implementation will be divided into two parts: 1. Implementing appropriate triangle rendering functions and optimize them using SIMD, OpenCL and OpenGL. The function can also be utilized as a basic debugging tool for 3D algorithms’ mesh rendering process. 2. Add a function that can calculate jacobians for scene input parameters. The function can be used as base for the external neural rendering pipeline.",https://summerofcode.withgoogle.com/programs/2023/projects/8QunCuzv
Kubevirt Seccomp Profile Generation,Nithish Karthik,https://github.com/kubevirt/k8s-seccomp-generator,"afrosi, Ľuboslav Pivarč",KubeVirt,"linux, golang, docker, kubernetes, ebpf, Ginkgo, OCI","virtualization, CI/CD","Seccomp is a security facility from the Linux Kernel that prevents processes from executing unauthorised syscalls. By limiting the number of permitted syscalls, seccomp is being utilised in conjunction with Kubernetes to reduce the attack surface of the containers. KubeVirt already supports custom Seccomp profiles, but that is based on the default seccomp profile that cri-o uses. This static approach leaves room for the profile to block necessary syscalls or allow unnecessary syscalls, hence compromising the security. This project focuses on automating the process of generating a seccomp profile for the VirtLauncher pod.",https://summerofcode.withgoogle.com/programs/2023/projects/ckQPXYW5
Memory allocation in facet redundancy removal in dingo,Nitish Malang,https://docs.google.com/document/d/e/2PACX-1vSBBqs7U1k8y_zWDEvuIk4_Qo9PzqGrj3BXib_ELUggmLdeHv7cuZxpf571MhVuKrSF5WdrfOF3K_df/pub,"Elias Tsigaridas, Apostolos Chalkis",GeomScale,"python, Linear Programming Theory, Basic computational geometry background, Exposure with Mathematical Software is advantage",machine learning,"This project will improve the memory allocation in the main routine for facet redundancy removal in GeomScale's Python package dingo. The project is expected to highly improve the run-time of the preprocessing of a metabolic network with dingo. Thus, that will be an important contribution that will allow for preprocessing of large metabolic networks in Systems Biology.",https://summerofcode.withgoogle.com/programs/2023/projects/g3A99uhs
Hybrid: Build User Portal For Talawa,Noble Mittal,https://beingnoble03.hashnode.dev/gsoc23-project-report-for-talawa-user-portal,"Peter Harrison, Md Noman Khan, Eva Sharma",The Palisadoes Foundation,"javascript, react, graphql, redux, Material UI",web,"Currently, Talawa misses a web-app for regular users. Creating a User Portal for regular users, makes Talawa accessible to an even larger audience. User can send direct messages, group messages, view/create/delete posts, create/view/delete events through the User Portal. The user portal will be created using Material UI.",https://summerofcode.withgoogle.com/programs/2023/projects/tBhcZ1oT
Enhancing OpenPiton+Ariane With a High-Performance Data Cache,Noelia Oliete Escuín,https://aileonn.github.io/projects/gsoc/,"Jonathan Balkind, César Fuguet",Free and Open Source Silicon Foundation,"verilog, risc-v, systemverilog","high performance computing, computer architecture, Open-Source","As the demand for High-Performance Computing (HPC) continues to grow, there is a need for open-source solutions that can deliver the performance required by modern applications. Different open-source architecture frameworks have been developed by the community, like OpenPiton, however, all of them present performance limitations that impact their ability to execute computationally-intensive tasks. OpenPiton is an open-source framework for designing many-core processors. Although OpenPiton was originally developed for SPARC v9 architectures, currently it is also compatible with different core architectures (RISC-V 32-bit, RISC-V 64-bit, x86, and SPARCv9). In this project, we will focus on improving the performance of the integration of CVA6/Ariane into OpenPiton (OpenPiton+Ariane). The architecture of OpenPiton consists of one chipset and one or more tiles. The chipset houses modules used to communicate the tiles with the peripherals, such as the UART. The tile is used to build the mesh for many-core designs. In these designs, the tiles are interconnected by three NoC routers to generate the mesh. Each tile comprises the three NoC routers, the Ariane core, and the cache hierarchy, which consists of Ariane’s private L1 data and instruction caches, a private L1.5 cache and a shared distributed L2 cache. Despite the fact that OpenPiton offers many advantages, it presents performance limitations that restrict its adoption in the HPC field. In this project, we will improve the performance of OpenPiton by replacing the L1 data cache of Ariane with the High-Performance, Multi-Requester, Out-of-Order, L1 data cache (HPDcache). In addition, other features such as the amount of L1.5 cache miss status holding registers (MSHRs) or the L1.5 cache associativity can also be improved in order to approach OpenPiton even closer to the HPC field.",https://summerofcode.withgoogle.com/programs/2023/projects/4SrrAPf1
Streamlined OpenFeature Enhancement Proposal Process,none_24,https://docs.google.com/document/d/1qQI2xe5bJfYz_sXodBi2iqPyYKNJaRtJTNnc1wBy0rk/edit?usp=sharing,"Michael Beemer, David Hirsch",CNCF,"GitHub Actions, Python scripts","web, documentation, automations","Streamlining the OFEP process for enhancing community engagement through automation scripts by doing almost everything they can, from creating proposals by asking questions to users to making the process interactive to assigning and reminding reviewers through Github and Slack. This also involves automating their publishing of the accepted/declined ideas to a newly made website. This would involve me constantly taking feedback from the community to enhance the overall process of contributing the best ideas, hence fostering faster long-term growth of the overall project.",https://summerofcode.withgoogle.com/programs/2023/projects/BuyO59lV
Accessibility Improvement for Uyuni,Odetayo Rachael,https://rakielle.hashnode.dev/gsoc-2023-final-report,"Marina Latini, cbbayburt",openSUSE Project,"javascript, java, xml, Accessibility","web, ui/ux, design, Accessibilty","The goal of this project is to analyze, track, document and solve accessibility issues in Uyuni, thereby increasing the accessibility support of Uyuni. This solution involves implementing keyboard navigation and assistive technology support, enhancing the visual interface to make it more inclusive, and conducting thorough testing to ensure the tool is accessible to all users, regardless of their abilities.",https://summerofcode.withgoogle.com/programs/2023/projects/J3FwSdEr
Implementing functions from toric topology,Ognjen Petrov,https://github.com/sagemath/sage/issues/35640,Travis Scrimshaw,SageMath,"python, cython",mathematics,"The aim of this project is to further expand Sage's library for topology, by implementing various functions from toric topology. Though this field might sound specific, a lot of properties can be viewed combinatorially, and that's why they are particularly interesting. These functions are also of interest to researchers in other fields, not just toric topologists. The main idea is to implement as many functions as possible to broaden the library and further make research in this and related areas much easier.",https://summerofcode.withgoogle.com/programs/2023/projects/lo7rrkvs
Upgrading Eclipse Cargo Tracker to Jakarta EE 10 and Payara 6,Ojus Chugh,https://medium.com/@ojuschugh1/gsoc23-work-product-submission-a9d8cabd53c,Reza Rahman,Eclipse Foundation,"javascript, java, html, css, junit, JMeter, jakarta 10 ee, payara 6","Application Development, Upgrading, Software Modernization","The Eclipse Cargo Tracker project is a key part of the EE4J/Jakarta EE umbrella at the Eclipse Foundation. One of the current challenges the project faces is that it is running on outdated versions of Jakarta EE and Payara. Upgrading to newer versions will bring numerous benefits, such as improved performance, better security, and access to new features. In this project, I propose to upgrade the Eclipse Cargo Tracker application to Jakarta EE 10 and Payara 6. This will involve updating the project's dependencies, making necessary changes to the codebase, and ensuring that the application remains compatible with these newer versions. Additionally, the project's documentation will also need to be updated to reflect these changes.",https://summerofcode.withgoogle.com/programs/2023/projects/R3i5iNpL
Generation of 'async-shifted' version of high-order functions,Olena Kravchenko,https://docs.google.com/document/d/1V5harGKumEVvD1975IV-YVEKzyTW1heACfMCg-TdROM/edit?usp=sharing,Ruslan Shevchenko,Scala Center,scala,"compiler, ast, Macros, asynchronous function, continuation",This proposal aims to solve the issue of using high-order functions with asynchronous functions when there is no platform support of continuations and without implementation of two variants of HOFs (synchronous and asynchronous). The plan is to add basic functionality of auto generation of CPS transformed HOFs in the dotty-cps-async compiler plugin.,https://summerofcode.withgoogle.com/programs/2023/projects/yJra2Otu
Taskflow: Creating Parallel Algorithm Primitives,Om Khangaonkar,https://github.com/taskflow/taskflow/,Tsung-Wei Huang,NumFOCUS,"c++, Taskflow, STL","algorithms, Parallel Programming, Multithreading","The C++ Standard Template Library (STL) provides many algorithms to sort, search, and perform a variety of operations on numerous data structures in its algorithms library. However, a major issue with the STL is that it is not optimized for parallel programming. Despite the fact that nearly all processors ship today with multithreading available, the STL is currently single threaded, leaving its algorithms library running at suboptimal efficiency. Taskflow is a C++ parallel programming library that organizes functions into tasks that it then can run concurrently or consecutively, depending on the user’s goal. My project will reimplement the STL’s algorithm library using Taskflow so that it can take advantage of multithreading.",https://summerofcode.withgoogle.com/programs/2023/projects/Mv3UZZQg
Adding APNG import/export support,Oplopoios Paris,https://offtkp.github.io/GSoC23FE/,Tomaž Vajngerl,LibreOffice,c++,graphics,"APNG (Animated PNG) is an animated format backwards compatible with PNG. It is supported by all the major browsers and has benefits over GIF such as partial transparency and support for more colors. The goal of this project is to integrate APNG support in LibreOffice, which had been requested for quite some time.",https://summerofcode.withgoogle.com/programs/2023/projects/VVKVeknp
Improving OWASP wrongsecrets infrastructure,Osama Magdy,https://github.com/OWASP/wrongsecrets-ctf-party/pulls?q=is%3Apr+author%3Aosamamagdy,Ben de Haan,OWASP Foundation,"prometheus, gcp, grafana, kubernetes, terraform, Helm, GitHub Actions, Azure","cloud, devops, infrastructure",The wrongsecrets project is structured in two modes the standalone app and the CTF mode. Here we will focus on OWASP/wrongsecrets-ctf-party and how to improve it in terms of infrastructure and deployment.,https://summerofcode.withgoogle.com/programs/2023/projects/KJ0bkX96
Greener coding: Wagtail’s climate impact,PaarthA,https://github.com/wagtail/wagtail/pull/10781,Thibaud Colas-,Wagtail,"python, javascript, django, html, css, typescript, Wagtail","web, performance, energy, sustainability","This project aims to contribute to reducing the environmental impact of web applications by making the Wagtail CMS more sustainable. Goals: Develop a suite of performance tests to measure the energy efficiency of Wagtail. Produce a report on the climate impact of Wagtail sites at this point in time. Implement more sustainable web development practices in Wagtail and improve energy efficiency. Encouraging the adoption of sustainable web development practices by raising awareness among Wagtail developers. Approach: Serving responsive images, Serving images in next-gen formats, Template caching for sites, YouTube lite embeds, Carbon Aware CMS, Speeding up tests, Wagtail-aware Django debug toolbar, Improve accessibility features, Optimising styles and scripts and Spread awareness. Deliverables: The climate impact of Wagtail sites will be measurable with agreed-upon methodologies, and we will do so on a regular basis. By the end of the project, we will have released a number of energy efficiency improvements reducing the impact of Wagtail sites.",https://summerofcode.withgoogle.com/programs/2023/projects/0yWqv0eP
"Cluster of Priority Features (Focused around User Profile, Compose Box, and Stream Settings)",Palash Baderia,https://gist.github.com/palashb01/15925bb27d5359f7c6042b4b9c9899c0,"Yogesh Sirsat, Priyam Seth",Zulip,"python, javascript, django, css, jquery, typescript",web,"For my GSoC project, I wish to implement bigger full-stack features while continuing to investigate and fix bugs in the areas I'm familiar with. These areas include the settings panel, user Profile, compose box, popovers, message feed UI, and left sidebar. The issues I specifically aim to solve this summer are: - Unmute Topics within a muted stream - Add subscribe widget to user profile popover - Unsubscribed tab in stream settings - Make it possible to cancel uploads - Show empty conversation in left sidebar - Migrate manage user/bot to user profile - Special title and bug fixes for narrow titles. - copy drafts feature - Major bug fixes in user profile modal.",https://summerofcode.withgoogle.com/programs/2023/projects/pL70pbK6
Developing Contribute Action,Parteek Goyal,https://github.com/parteekcoder/concore/wiki,"Pradeeban, Mark Arnold, Tony Pan","Department of Biomedical Informatics, Emory University","python, javascript, react, flask, curl","web, REST API, Script, shell commands",Concore is a lightweight framework for closed-loop peripheral neuromodulation control systems. Control-editor is a React-based frontend environment for concore. It allows users to create studies as graphml files and program files. This project will allow the users to upload their examples to the concore repository automatically without using GitHub.These examples will help new or existing users to generate and understand studies quickly.,https://summerofcode.withgoogle.com/programs/2023/projects/vZSLKQsL
Companion Guide Tech Stack,Parth Nanda,https://gist.github.com/parthn2/cc90186e96f4bf3de082526a279c25c8,"ShubhamPalriwala, Björn Kimminich, Jannik Hollenbach",OWASP Foundation,"html, git, Asciidoc, yml","playbook, ebook","The problem here is to migrate from gitbook to some other tool which provides us with the feature of generating website from some easy to use markup language like markdown in which the current gitbook is hosted. So, I propose to solve this using antora for website and using asciidoc as markup language for it as it fulfills the main requirments of having a website and ebook(epub). It also have option to customise the UI which could be used to make antora website look more attracting and I have listed why I used this in my proposal.",https://summerofcode.withgoogle.com/programs/2023/projects/h2der3Mf
NodeCloud,Partik Singh,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/06-Partik-Singh-NodeCloud.md,"Mohit-Bhat, Rajitha Pasindu Warusavitarana",SCoRe Lab,"javascript, compiler, cloud, typescript","cloud, npm package",NodeCloud is a standard library to get a single API on the open cloud with multiple providers. It is a NodeJs library which comes with plugins for each cloud provider. NodeCloud's aim is to abstract away the differences between different cloud providers. It provides an easy to use API for developers in order to interact with different cloud providers.,https://summerofcode.withgoogle.com/programs/2023/projects/62Zo1VXJ
Improve Styling System,pastk,https://gist.github.com/pastk/4cdb563b9a705ad6511500d6eebf4146,Viktor,Organic Maps,"python, c++","maps, mobile apps, Declarative Languages","The currently used styling system has a number of major shortcomings: its over-complicated and full of nuances, which often leads to unpredictable behavior; the current style files structure and absence of validation tools makes it easy to do mistakes and hard to debug them / hard to notice undesired side-effects; the current inheritance mechanism doesn’t work well for “sub-styling” (adding new styles by specifying only changes over the base style). A major refactoring of the current system will speed up development of the current and planned map styles, increase their robustness and hence save time on maintenance / bug fixing, open up possibilities for perspective style enhancements. Requirements for a new better system: - predictable and easily debuggable, makes it hard to break things - style files are nice, clean and compact - promotes stylistic standards, e.g. standard font and icon sizes for various zoom levels - supports easy and efficient sub-styling - simple enough to be used by enthusiastic users, so that they could create custom styles - powerful/flexible enough to describe the styles without much repetition - future-proof, i.e. it should be easy to add support of dynamic styling, svg icons or other perspective styling features planned by the Organic Maps team As a result, Organic Maps will run on a new styling system, which includes - a new styling language syntax specification, including its documentation - current main and vehicle style files migrated into a new format - a compiler of new format style files into the binary Google protobuf format used by the rendering engine",https://summerofcode.withgoogle.com/programs/2023/projects/948HCPSa
Improve Accessibility,Patel Muhammad,https://medium.com/@patelmuh2003/empowering-inclusive-online-learning-my-gsoc-2023-journey-with-oppia-foundation-3f65b7a78e33,"Harshvardhan Singh, Rijuta",Oppia Foundation,"html, css, angular, typescript","education, accessibility","With this proposal, my aim is to make Oppia's learner-facing pages more accessible by by learners having any form of disability. My suggested method involves two-fold approach. I'll start by addressing the accessibility issues (a11y) that have already been reported on the site. This will entail addressing difficulties with heading-related issues, focus management, colour contrast, and more. Many of these a11y issues have contributors associated to them. While I resolve the unassigned problems, I will be available to help any contributors who get stuck or require further support. Second, I'll utilise Lighthouse to evaluate every Oppia page that is intended for students, raising their accessibility scores to a perfect 100. Each learner-facing page's Lighthouse test audits will need to be examined in order to make the necessary changes. This will include adding alternative text for images, making sure header tags have the right semantic structure, and making sure aria-roles are contained by the appropriate parent. Also, in order to aid contributors in understanding the Lighthouse audit procedure and troubleshooting any potential problems that may emerge throughout testing, I will be adding guidance on how to debug Lighthouse tests to the Oppia documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/M8gOyZft
Improving INP Metric by Exposing InteractionId to a Wider Range of Events,Patricija Cerkaite,https://patricijia.github.io/GSoC-2023/,"Pallavi, Aoyuan Zuo",Chromium,"javascript, c++","web, INP, Event Timing API, Interactions, Keyboard Events","Imagine typing a cheerful ""hello😁"" on your keyboard, expecting a smooth and quick response, but instead, the browser stumbles, struggling to keep up with your spirited greeting and emoji. Sometimes, even typing a simple word can cause a slowdown on certain websites, resulting in a less-than-joyful user experience. To tackle this issue, our project is here to fine-tune the way keyboard events are tracked, allowing for a closer eye on a broader range of these keyboard events, including the basics like keypress and composition events. This means developers can get a better grasp on how websites respond to keyboard inputs, making improvements where necessary and enhancing crucial metrics such as the Interaction to Next Paint (INP).",https://summerofcode.withgoogle.com/programs/2023/projects/xaBTCCjG
Eclipse 4diac: Modeling Implicit Assumptions within IEC 61499 Software,Paul Pavlicek,https://wiki.eclipse.org/Eclipse_4diacWiki/Development/Modeling_Implicit_Assumptions,"Bianca Wiesmayr, MikeOberlehner",Eclipse Foundation,"java, Eclipse 4diac, Eclipse Platform","Industrial Automation, Real-Time Software, Automated Software Engineering","Automated software engineering helps developers of control software to manage complex industrial applications. Eclipse 4diac has, in recent years, advanced in terms of providing tool support for domain experts. The control software is typically executed in real-time and distributed across devices. Designing such systems is complex due to the need for communication between devices. To detect faults early, modeling implicit assumptions within IEC 61499 software can provide the basis for automated checks. Such assumptions are typically described in constraint languages, which are difficult to use by automation experts. Therefore, this project provides the infrastructure for tool-assisted communication engineering. Where user interactions are required, graphical visualizations are provided. Current infrastructure for generating automated communication does not support the variety of communication protocols that is observed in modern automation systems.",https://summerofcode.withgoogle.com/programs/2023/projects/TMpXon84
Scarpe,Pavan Nambi,https://gist.github.com/gintama91/d87b8e34815cea953b1a6f5c232aabc2,"procmarco, Noah Gibbs, Nick Schwaderer",Ruby,"javascript, ruby, rust, html, css","desktop, library, gui","Scarpe is a project designed to resurrect the shoes library using modern technology. This project aims to leverage an HTML/CSS/JS/RUBY stack to develop GUI apps, which can be deployed across various platforms.. The primary objective of Scarpe is to bring it closer to shoes by ensuring that all known examples run seamlessly. The project also aims to create comprehensive documentation and build an official Scarpe website to provide easy access to project resources. Furthermore, there are plans to make Glimmer lib UI an efficient secondary display service. Scarpe represents a significant opportunity to modernize the shoes library and bring it to a wider audience",https://summerofcode.withgoogle.com/programs/2023/projects/k9ItClFX
Add WebAuthn 2 support for Plone,Pavan-Thota,https://github.com/collective/plone.webauthn/blob/main/GSOCFinalReport.rst,Andreas Jung,Plone Foundation,"python, react, zope, WebAuthn","security, web, cms","The project proposal is to bring password-less authentication to Plone 6 by implementing WebAuthn, a password-less web standard by W3C. The proposal suggests that the implementation should allow the user to decide whether to use WebAuthn as the primary or second-factor authenticator. WebAuthn uses public key cryptography to store user credentials, which makes it more secure than traditional password-based authentication methods. However, the proposal also discusses the challenges of using WebAuthn, such as the Scenario where the authenticator device is not available or lost. The proposed solutions include backup codes, recovery codes, and administrator reset, but all of them require storing some kind of secret on the server, which is a security concern. The proposal suggests alternative solutions like encouraging users to use at least two different Authenticating devices to register.",https://summerofcode.withgoogle.com/programs/2023/projects/Nk17gHIc
Robotics Academy: Migration to ROS2 Humble,Pawan Wadhwani,https://docs.google.com/document/d/1W8xshqFpJaKTpQBIe25jm_SIzLjIuAfEs3bNddo2zKU/edit?usp=sharing,"Pedro Arias-Perez, L. Roberto",JdeRobot,"python, ros, gazebo, docker, ROS2","robotics, containers","The Robotics Academy is a framework designed for learning robotics and computer vision through a collection of robot programming exercises. Currently, the platform offers 26 exercises and 11 prototype exercises that students can access through the RoboticsAcademy docker image (RADI), which comes pre-installed with all necessary dependencies. The RADI is a key component of the platform, and this project aims to improve it by migrating it to ROS2 Humble Hawksbill from the current ROS noetic version, which is nearing its end of life (2025). The project will involve implementing a few exercises in ROS2 with the new RADI as well as the addition of ROS2 tools such as RViz2 to exercises. Additionally, the project may explore topics such as size optimization, multi-rosdistro docker images, and hardware acceleration.",https://summerofcode.withgoogle.com/programs/2023/projects/4YgccDJg
Code Refactoring & Parallelization,peb,https://github.com/google/gcp_scanner/wiki/GSoC-2023-%E2%80%90-Code-Refactoring-and-Parallelization,"Maksim Shudrak, ZetaTwo",GCP Scanner,python,"security, cloud, Scanner, security-tools","Currently, GCP Scanner does not support the parallel enumeration of GCP resources and parallel scanning of GCP targets. This project is aimed to address this shortcoming. Also, GCP Scanner has one giant scanning loop from where it launches GCP resource crawlers. We need to split each crawler into individual modules with proper error handling that will improve code readability and quality. We can leverage python classes for the state of execution control, config parsing, and enabling/disabling certain functionality in the scanner.",https://summerofcode.withgoogle.com/programs/2023/projects/K9S1VvIa
Building Immersive Learning Experiences,Pedro Andrade,https://sat-mtl.gitlab.io/collaborations/google-summer-of-code/posts/2023-contributions/pedroansa1/work-product-pedroansa1-building-immersive-learning-experiences/,"Christian Frisson (SAT), Rochana, Manuel Bolduc, Christian Frisson",Society for Arts and Technology (SAT),"javascript, Mozilla Hubs, Spoke","graphics, Telepresence, digital arts, explorable explanations","The proposed project aims to support teaching in hybrid telepresence settings by developing and embedding examplar explorable explanations into the Satellite hub, an immersive 3D social web environment developed at the Society for Arts and Technology (SAT) using Mozilla Hubs. Explorable explanations are interactive documents that use visualizations, animations, and simulations to help learners understand complex concepts. The project will integrate explorable explanations in Mozilla Hubs used for Satellite by adapting Spoke to defining dynamic assets with interactivity. This integration will allow for the creation of immersive and interactive educational environments that cater to diverse abilities in learning and allow learners to play with parameters to deepen their understanding of the concepts. The project seeks to create synergy by interconnecting various cultural and artistic contents in the Satellite hub and embedding explorable explanations to enhance the learning experience. The explorable explanations will be designed to cater to a broad audience and facilitate access to learning. The project will involve prototyping examplar explorable explanations and embedding them in Satellite / Mozilla Hubs, leveraging the capabilities of the platform to provide an immersive learning experience. The aim is to enhance the teaching of digital arts concepts in hybrid telepresence campus settings and promote interactivity and innovation in teaching, leveraging emerging technologies to enhance the learning experience. Ultimately, the project will contribute to promoting interactivity and innovation in teaching, leveraging emerging technologies to enhance the learning experience.",https://summerofcode.withgoogle.com/programs/2023/projects/ZJTheXqH
GPS-Denied Autonomous Exploration with ROS 2,Pedro Fuoco,https://discuss.ardupilot.org/t/gsoc-2023-gps-denied-autonomous-exploration-with-ros-2/101121,"Andrew Tridgell, Ryan Friedman",ArduPilot,"gazebo, ROS 2, Obstacle Avoidance, Lidar, DDS, SITL","robotics, Drone, Autonomous Navigation, Non-GPS Navigation, Obstacle Avoidance","With Open Robotics quickly moving to make ROS 2 the standard version of ROS, supporting it has become a growing interest in the Ardupilot community. Contributing to the ROS 2 support is still a challenge, as there are little to no use cases documented. The proposed idea is to keep contributing to DDS support, but focusing specifically on bringing autonomous navigation to ROS 2, which will help building a documentation foundation for future projects interested in using DDS instead of MAVROS, as well as expanding the use cases for Ardupilot with ROS.",https://summerofcode.withgoogle.com/programs/2023/projects/DWZ8JKkU
Integrate GNOME Network Displays features into GNOME Settings,Pedro Sader Azevedo,https://gitlab.gnome.org/GNOME/gnome-network-displays,"Felipe Borges, Claudio Wunder, Jonas Ådahl, Anupam Kumar",GNOME Foundation,"c, gobject, Dbus","networking, design",GNOME Settings (aka gnome-control-center) is GNOME's main interface for configuration of various aspects of your desktop. GNOME Network Displays is a standalone application for casting your display's content onto another remote display in the network. The goal of this project would be to reuse the work in gnome-network-displays to be able to manage remote displays in the GNOME Settings Display panel. Allowing users to select the remote display from the list where they already can find local displays/monitors. This work will involve iterating with the GNOME design team and discussing the UX of the functionality.,https://summerofcode.withgoogle.com/programs/2023/projects/MKxaR231
Updating old and supporting new compression algorithms,Philipp Macher,https://blogs.coreboot.org/blog/2023/11/16/updating-lz4-during-my-gsoc/,Martin Roth,coreboot,"c, zlib, LZ4, LZMA",compression,I plan to update the existing LZ4 and LZMA compressions algorithms and as well to add support for new algorithms to compress and decompress data on the Coreboot File System,https://summerofcode.withgoogle.com/programs/2023/projects/1yVBHuN6
Optimize GROUP BY in MariaDB ColumnStore,phoeinx,https://phoeinx.github.io/gsoc-blog/2023/09/25/final-submission.html,drrtuy,MariaDB,"mysql, c++, simd","databases, algorithms, Aggregation","This project optimized the GROUP BY operator in MariaDB ColumnStore for workloads requiring disk-based aggregation. To achieve this a) unnecessary I/O operations in the aggregation algorithm were reduced, b) bugs in the previous implementation of disk-based aggregation were fixed and c) vectorized access to the internal hash map used for aggregation was tested. Additionally, Theresa fixed other bugs and improved documentation and the development setup, especially for new developers.",https://summerofcode.withgoogle.com/programs/2023/projects/IxEtmCln
Convert CellBox Tensorflow code to Pytorch,Phuc Nguyen,https://mustardburger.github.io/projects/gsoc/,"AugustinL, Bo Yuan",National Resource for Network Biology (NRNB),"python, tensorflow, pytorch",machine learning,"CellBox is a model for predicting cell states under drug perturbations, whose code base was originally written in Tensorflow 1. Since Tensorflow 1 has been replaced by Tensorflow 2 and Pytorch, the aim of the project is to recreate CellBox in Pytorch. There are three main components of the model: the data processing pipeline, the model architecture, and the training process, all of which will be sequentially converted into Pytorch. After the conversion is complete, the new Pytorch model is trained using the same training configurations as the Tensorflow model. The following deliverables define the proposal’s success: the trained Pytorch model should reproduce the same results as the current Tensorflow model; the new Pytorch code base should be configured to be able to run on multiple platforms (Linux, Mac, …); and the github should have clear documentations for installing and running the model.",https://summerofcode.withgoogle.com/programs/2023/projects/HKW6ydaI
Map LLVM values to corresponding source-level expressions,phyBrackets,https://docs.google.com/document/d/1t1K6vzCYDnFBTH8d1NIJInhxRe5mc1FxkMaX_2WVcmc/edit?usp=sharing,"Satish Guggilla, Karthik Senthil",LLVM Compiler Infrastructure,"llvm, c++",compilers,"This project aims to improve the accuracy of compiler-generated remarks and analysis reports by including corresponding source-level expressions in addition to line and column numbers. The project will leverage the intrinsic functions used by LLVM to map LLVM program objects to source-level expressions, and propose solutions to generate source expressions when the existing information is insufficient. The focus will be on optimizing memory accesses in a program by reporting memory access dependences that inhibit vectorization. The expected result is an interface that takes an LLVM value and returns the equivalent source-level expression, with a specific emphasis on mapping addresses used in load/store instructions to source-level memory references.",https://summerofcode.withgoogle.com/programs/2023/projects/JToY28Mf
Integrate references into ChromeStatus.com,Pingren Nie,https://github.com/GoogleChrome/chromium-dashboard/issues?q=author%3Apingren,"Jason Robbins, Stephen, James Scott",Chromium,"python, javascript, Web Components, Google Cloud Platform (GCP)","web, Chromium","ChromeStatus.com is a web application developed by Google to track feature launches in Blink, the browser engine that powers Chrome and many other web browsers. It is used by browser developers from Google, Apple, Microsoft, and many more, as well as web developers who want to keep up with the latest features. The project aims to enhance the user experience of ChromeStatus.com by integrating references from various external sources into the feature entries. This integration enables users to easily get more information about specific features without having to navigate away from the site.",https://summerofcode.withgoogle.com/programs/2023/projects/Zs47D7ZH
Dataset Hoster Improvements,pixelpenguin,https://blog.metabrainz.org/2023/08/27/gsoc23-dataset-hoster-improvements/,Lucifer Morningstar,MetaBrainz Foundation Inc,"python, react, flask, postgres",web,"The dataset hoster currently returns rows of database rows with no extra information. Over time, the results that are returned from a query have begun to include markup in order to display more information to the user. The data structure which is currently being returned by the hoster should be simplified to make data consumption easier for callers. When an MBID is recognized in a cell of the output, we wish to show a drop-down button next to that MBID. The items of this drop-down should be a link to all of the data-sets that could be initiated with that MBID. For instance, if the user has made a search for a similar artist and the output shows a list of artists, next to each artist MBID, the dropdown should offer to run a new similar artist search and other searches that can be initiated with an artist MBID. These drop-downs would allow users to explore our connected datasets, which would be a great asset. Also, the project has accumulated some bugs over time, many of which remain unaddressed. These bugs need to be identified and fixed as required.",https://summerofcode.withgoogle.com/programs/2023/projects/rpHWY2LB
Improve CI/CD for MetaCall Core Windows,pkspyder,https://github.com/metacall/gsoc-2023/blob/main/submissions/windows-ci-pkspyder007.md,"Gil Arasa Verge, Param Siddharth",MetaCall,"c/c++, cmake, bash, devops, powershell, Batch","testing, devops, scripting, CI/CD","The Windows CI/CD project aims to automate the build, testing, and deployment of software on the Windows operating system. The main challenge is to ensure compatibility with multiple compilers and automate the installation of dependencies. The project's focus is on improving the MSVC support and implementing efficient testing mechanisms. I'll be working towards creating a platform-agnostic and easily deployable CI/CD system that provides end-to-end support. The MetaCall Team is available to provide assistance and address any issues that arise during the project.",https://summerofcode.withgoogle.com/programs/2023/projects/GOa6ri4N
Add support for Encrypted Client Hello (ECH),Pokémon,https://peonix.gitlab.io/gnutls-gsoc-2023/,"Sahana Prasad, Daiki Ueno, Zoltan, Norbert Pocs",GnuTLS,"c, TLS","security, cryptography, TLS","The TLS Encrypted ClientHello (ECH) extension enables clients to encrypt ClientHello messages, avoid leaking sensitive fields, like the server name Indication(SNI), to the network. This project aims to implement Encrypted ClientHello (ECH) extension in GnuTLS.",https://summerofcode.withgoogle.com/programs/2023/projects/weKJfjhz
7.2 Working on improving graphical interface and user experience on AnalySim,PON RAJA PRABHU,https://docs.google.com/document/d/1XZzwVxiQ8oPMMN7F5OHvZLf3W_sMOz7lYAWMeyITbV4/edit?usp=sharing,"Anca Doloc-Mihu, Cengiz Gunay",INCF,"bootstrap, html, c#, angular, postgres, SCSS, ASP.Net Core, Azure, Typescipt","data visualization, web development","To Remove Bootstrap from the application and substitute the design with pure SCSS.To finish implementing the CSS global variables and add component wise CSS variables to improve the reusability of code in the application.To add CSV viewing functionality on the datasets of AnalySim to view, filter, and browse through the columns of the file. To create a feature on the Jupyter notebooks to make the Notebooks downloadable.To improve the Registration page, Explore section page, and my Dashboard page design and make the User Interface consistent throughout the application.To remove the pages and the page links that are unused in the application. To improve and redesign the project creation page. To make the design of the application consistent throughout the application to create a great User experience.",https://summerofcode.withgoogle.com/programs/2023/projects/XE5ekcP6
Improve the user-facing Carbon Explorer Output,prabhatexit0,https://docs.google.com/document/d/1ilV5tV0wflvZ2Aph13uwiYA24a7Xfkk4NYh8qeJMhrQ/edit?usp=sharing,Richard Smith (@zygoloid),Carbon Language,c++,"programming languages, c++","Currently, Carbon Explorer's trace output is both verbose and hard to use. There are a large range of improvements that could be made here. This is especially true when considering its use as part of Compiler Explorer. Possible tasks include: Add a mode to only output the abstract machine execution trace and enable this by default. Add a mode to filter out the evaluation of the prelude and other imports and enable that by default. Include nicely rendered snippets of source code during the evaluation trace to highlight the code being evaluated at each step. Come up with a set of design improvements to the textual rendering to make it more comprehensible for people just arriving on the project and more easily scanned quickly. (Might involve fancier terminal output, colorized output, line drawing, etc.) Stretch goal: interactive tools to incrementally step as a precursor to the debugging features.",https://summerofcode.withgoogle.com/programs/2023/projects/MV1y9Ngq
Schema.org OpenAPI Catalog,Pragya Bhardwaj,https://github.com/postman-open-technologies/schema-org-openapi-catalog,"Sai Alekhya Yerragunta, PascalH",Postman,"json, api, openapi, YAML, JSON-LD, schema.org","parser, scripts, OpenAPI definitions, JsonSchema, Automate","This project is to create a catalog of the OpenAPI definitions for the various Schema.org types. Also, providing a robust set of starting OpenAPI templates for helping developers to understand and develop new APIs using a design-first approach.",https://summerofcode.withgoogle.com/programs/2023/projects/IpxtHfOS
Forensic analysis of container checkpoints,Prajwal S N,https://github.com/snprajwal/gsoc-2023,"Adrian Reber, Radostin Stoyanov",CRIU,"python, linux, go, golang, docker, kubernetes, protobuf","security, cli, container, Checkpoint/Restore, forensic analysis","The crit library in go-criu was created during GSoC 2022 to enable analysis of CRIU images with tools written in Go. It allows container management tools such as checkpointctl and Podman to provide capabilities similar to CRIT. The goal of this project is to extend this library with functionality for forensic analysis of container checkpoints to provide a better user experience. To effectively utilise this new feature, the checkpointctl CLI tool would also be extended to display information about the processes included in a container checkpoint and their runtime state (e.g. memory state, open files, sockets, etc).",https://summerofcode.withgoogle.com/programs/2023/projects/9Qr4FVa7
DSOMM,Prakarsh Gupta,https://gist.github.com/ptechofficial/23e423e8f50d8628b1f24046aebc0c4d,"Timo Pagel, Aryan Prasad",OWASP Foundation,"javascript, html, css, angular","web development, DSOMM","1. Adding Filters in the Matrix View: Updating the YAML file, and adding the tags title in task-description. After this, adding chip style filter system in the matrix view, that'll encompass the list of activities visible in the matrix view. 2. Adding Team-Based Assessment: Creating a node server that'll save the activity data of multiple teams on the local system. Adding a team selection menu, and creating an updated view of the team-based heatmap. 3. Comprehensive Activity View: Alongside the heatmap, details of activities need to be shown. This will be achieved by creating an overlay screen on the heatmap which can be opened on the selection of activity. This will display the activity detail from generated.yaml file. 4. Enhancement of Diagram in Documentation: Flow charts and a detailed summary of the project will be updated on the Usage page.",https://summerofcode.withgoogle.com/programs/2023/projects/yquTMcaq
Autosave Feature,Prakhar Agarwal,https://git.purrdata.net/jwilkes/purr-data/-/merge_requests/863,Matt Barber,Purr Data,"c, javascript, c++, html, css","productivity, data management, software, Backup, Recovery, Autosave","When working on a project in Purr Data, saving regularly is important to avoid losing any changes or progress. The auto-save feature provides an added layer of protection by automatically saving the project at set intervals, such as every 10 minutes. In case of a sudden power outage or system crash, the auto-save feature can help to recover the project files, reducing the risk of losing valuable work. This feature also helps to reduce the likelihood of accidentally closing the program or forgetting to save changes. The auto-save feature in Purr Data is a helpful tool for ensuring that project data is automatically saved and backed up regularly, providing peace of mind and added protection against data loss.",https://summerofcode.withgoogle.com/programs/2023/projects/MwL50AWF
Cross-Platform Robotics Learning Made Easy,Prakhar Bansal,https://theroboticsclub.github.io/gsoc2023-Prakhar_Bansal/,"David Roldán Álvarez, ApoorvGarg",JdeRobot,"javascript, Electron.js","web development, robotics, Frontend Development","Making a cross-platform desktop application available and working on every environment without any perquisites . The application will be developed using Electron.js, It aims to deliver two main goals i.e. Application size should be small no unnecessary dependencies are used that make the initial loading slow and making it cross-platform efficient with Universally acceptable user experience",https://summerofcode.withgoogle.com/programs/2023/projects/Wt3Vki1i
Cluster of priority features (Focused around topics and notifications (messages) areas),Prakhar Pratyush,https://gist.github.com/prakhar1144/b53cd64e4babdff4de5c1acbeee1831e,Abhijeet Bodas,Zulip,"python, javascript, django, css, database design","web, team chat","This project aims to implement high-priority features in the 'Zulip server and web application' project, focused around topics and notifications (messages) areas. The issues I specifically aim to solve this summer are: ➔ Implement 'Follow a Topic' feature ➔ Develop @topic mention feature",https://summerofcode.withgoogle.com/programs/2023/projects/ijktWPlO
cve-bin-tool: Add GitHub Action including fancy reporting and triage integration,Pramurta Sinha (b31ngd3v),https://github.com/b31ngd3v/GSoC-23.md/blob/main/GSoC-23.md,"Terri Oda, DRAGON2002, aph, rhythmrx9",Python Software Foundation,"python, GitHub Actions, SBOMs","security, python, github actions, SBOMs, Triage",The CVE Binary Tool helps the users to determine if their system includes any known vulnerabilities or not. This project idea focuses on creating a GitHub Action for cve-bin-tool which will produce CVE reports in the GitHub Security Tab and will be able to split the issues on the basis of triage. It will be smart enough to scan dependency lists of various languages and suggest version upgrades in the form of pull requests. Also it will produce reports in the form of html and pdf by default in the Security Tab. The GitHub Action will be configurable through yml config file and will be able to scan repositories and SBOMs.,https://summerofcode.withgoogle.com/programs/2023/projects/rfhFsBbN
Super-Resolution for Strong Gravitational Lensing,Pranath Reddy,https://github.com/ML4SCI/DeepLense/tree/main/Super_Resolution_Pranath_Reddy,"Yurii Halychanskyi, Michael Toomey, Brendan Ames, PG Guan",Machine Learning for Science (ML4SCI),"python, opencv, numpy, pytorch, scikit-learn, Matplotlib, Scikit-Image, lenstronomy","machine learning, deep learning, Dark Matter, Strong Gravitational Lensing, ML in Astrophysics, Image Super-Resolution","Strong gravitational lensing is a promising probe of the substructure of dark matter to better understand its underlying nature. Deep learning methods have the potential to accurately identify images containing substructure, and differentiate WIMP particle dark matter from other well-motivated models, including axions and axion-like particles, cold dark matter etc. Gravitational lensing data is often collected at low resolution due to limitations of the instruments or observing conditions. Image super-resolution techniques can be used to enhance the resolution of these images with machine learning, allowing for more precise measurements of the lensing effects and a better understanding of the distribution of matter in the lensing system. This can improve our understanding of the mass distribution of the lensing galaxy and its environment, as well as the properties of the background source being lensed. This project will focus on the development of deep learning-based image super-resolution techniques to enhance the resolution of gravitational lensing data. Furthermore, we will also investigate leveraging the super-resolution models for other strong lensing tasks such as regression and lens finding.",https://summerofcode.withgoogle.com/programs/2023/projects/Rh8kJLr4
Compiling SciPy with LFortran,Pranav Goswami,https://gist.github.com/Pranavchiku/5a5a1c82c68b51ea6ffd2b1e0602ecd3,"Ondřej Čertík, czgdp1807, Smit Lunagariya, Rohit Goswami, Thirumalai Shaktivel C",Fortran-lang,"c, python, c++, fortran",Compiler Development,"I propose enhancing LFortran so that it can compile the majority or all of SciPy's Fortran code to binaries, allowing SciPy to be entirely compiled using LFortran and Clang. Currently, LFortran can compile the majority of Fortran files to ASR (Abstract Semantic Representation); however, there are some lacking features, such as COMMON, BLOCK DATA, SAVE, etc., that must be implemented for it to function properly. I have supplied multiple implementations that will allow these features to function effectively in the vast majority of circumstances. When lacking features are successfully implemented, the majority of the codebase will compile to LLVM. First, I will concentrate on the following packages: specfun, odepack, quadpack, fitpack, and Arpack, and then I will shift to other packages. By compiling SciPy, LFortran would acquire a larger user base, which would in turn encourage additional testing and development.",https://summerofcode.withgoogle.com/programs/2023/projects/6IzqNOrE
Updates in CleanTS Package,Pranay Agrawal,https://github.com/pranayx/Final-_code,"Neeraj Dhanraj Bokde, Andrés Elías Feijóo Lorenzo",R project for statistical computing,R language,"data science, Time Series Analysis, AutoML","The proposed project, to modify the CleanTS package to handle multivariate time series data, will fill this gap and provide a new package for multivariate time series analysis that is fast, accurate, and user-friendly, while also handling missing data. The new package will provide a comprehensive set of functionality for multivariate time series analysis, including data cleaning, decomposition, anomaly detection, and other useful techniques for analyzing multivariate time series data.",https://summerofcode.withgoogle.com/programs/2023/projects/HVYpx0Wa
Design and implementation of lifecycle management of the CyberShuttle agents,Praneeth Chityala,https://cwiki.apache.org/confluence/display/AIRAVATA/Design+and+implementation+of+lifecycle+management+of+the+CyberShuttle+agents,"SureshMarru, Dimuthu",Apache Software Foundation,"javascript, java, gcp, git, spring, docker, bash, aws, grpc, VueJS, Maven, electronJS, Azure, SpringBoot, consul, Jetstream2, Log4j, nomad","distributed systems, cloud computing, microservices, network analysis, Data transfer, Lifecycle management","Apache Airavata MFT is a distributed high-performance, multi-protocol data transfer engine to orchestrate data movement and operations across most cloud and on-premises storages. Agent is the core of this distributed system which does the heavy lifting of transfer jobs. Right now, agents have to be manually deploy and configure to start the transfer. This is a problem for researchers and people who need to transfer data without having much technical skills or time. Updated Proposal Summary: Updated proposal includes creating a desktop application and cybershuttle server to orchestrate the lifecycle management. This will guide cybershuttle agent and MFT agent from cybershuttle server to perform execution of jobs and data transfer, this would also maintain the lifecycle of cybershuttle agent and mft agents. This would help deploy any software and not limited to MFT agents. The proposed solution is to automate the process of deploying and lifecycle management of the agents when a transfer job is submitted from an edge machine. This will help various researchers and people who needs to transfer data from a source to a destination without having much technical skills or time. The deliverables are a piece of code to deploy the agent on various virtual machines, a piece of code to maintain the agent's lifecycle, an automated process for deployment and management, onboarding users and evaluating edge cases, and automated agent placement. The benefits of the proposed solution are that it will make it easy and on the go solution for people even with less technical ability to use the vast speeds and advantages MFT offers. It will save time and effort for researchers and people who need to transfer data from a source to destination. It will make the MFT more user-friendly and accessible to a wider range of people. It not just stops at MFT, in fact users can deploy any containerizable applications using this solution.",https://summerofcode.withgoogle.com/programs/2023/projects/wjchXCVK
Wayback Machine - Turn All References Blue (TARB),Pranjal20,https://archive.org/details/tarb-gsoc-2023-soft-404,Dr. Sawood Alam,Internet Archive,"python, html, nlp, Classification, HTML parasing",machine learning,"Have you ever encountered a frustrating error when browsing a webpage, or perhaps landed on a page expecting to find information about the first computer, only to discover something completely unrelated? When we request a webpage, the server communicates its status through an HTTP response code. If the page is broken or doesn't exist, the server responds with a 404 error code or some other error code in the 4xx and 5xx range, indicating an issue, and 200 OK (or some other status codes in the 2xx range) if everything is good. However, a common challenge arises when the server returns a 200 OK in every case, making it difficult for computers to differentiate between a healthy page and a problematic one. If these problematic pages go unnoticed and are not replaced with their healthy counterparts over time, they contribute to a pervasive issue known as ""link rot,"" leading to the gradual loss of valuable internet information. This work addresses such issues by performing content analysis of webpages to identify potential soft-404s that would otherwise go undetected due to the wrong HTTP status code they return. A prior version of such soft-404 pages is then looked up in the Wayback Machine to replace the link in the Wikipedia article with, if present.",https://summerofcode.withgoogle.com/programs/2023/projects/2g9hvKN4
Short Quiz Generation Using A Multi Level Transfer Model,Prarabdh Shukla,https://github.com/prarabdhshukla/GSoC-2023,"Bruno, MiHarsh, Divyanshu_Singh",AOSSIE,"python, javascript, html, css, pytorch, HuggingFace, python-server","machine learning, natural language processing, software development, edtech","Online learning has taken the front seat in the post pandemic age. With the advent of sophisticated AI architectures like the Transformers, it is but natural that AI would find its way into education. Learning online via YouTube or MOOC platforms is often done as a method of self learning. The biggest obstacle faced by a student in self learning is the lack of attention span. An online tool that can generate short quizzes on input educational content can be of great use to teachers and students alike as it can help retain important information, frame questions and quickly revise large chunks of content. EduAid is one such project where I propose the usage of open source and lightweight Large Language Models for quiz generation. The language modelling capabilities of LLMs can be leveraged for achieving this task. Finally, we develop a chrome extension that allows end users to interact with the pipeline and generate quizzes based on input text.",https://summerofcode.withgoogle.com/programs/2023/projects/6gDAnfq6
[PolyPhy] Polyphorm / PolyPhy - PolyPhy infrastructure engineering and practices,Prashant Jha,https://docs.google.com/document/d/12ukDTJ5jv9fUjNwoRGZvp92vTTUXKI82fx3obwlFN8s/edit,"Oskar Elek, Anisha Goel",UC OSPO,"python, github, docker, jupyter, security, ci/cd, Logging, Profiling, Monitoring, Load Testing","security, software development, infrastructure, performance optimization, CI/CD, Codebase Refactoring","This proposal aims to enhance the infrastructure of PolyPhy by developing new architecture and maintaining existing codebases. The project will involve refactoring the current codebase, creating interfaces for PolyPhy that enable access to its features through Python/Jupyter code and command line, configuring the codebase according to the team's needs, and improving the performance, security, and documentation of PolyPhy. To achieve these goals, I will refactor existing codebase and enhance the PolyPhy package, create a common API to allow multiple and dynamic changes to the pipeline, implement efficient CI/CD workflows for the PolyPhy repository, including unit and integration tests, and create a public pip package release for PolyPhy. Additionally, I will implement a monitoring and logging system to detect and diagnose issues with the software in production, perform profiling and load testing to improve code quality and performance, and establish security best practices such as code reviews, vulnerability scanning, and penetration testing. The expected result of this project is a robust and user-friendly PolyPhy package that can handle different parts of the pipeline, has an efficient CI/CD workflow, and adheres to security best practices. The package should be Dockerized, and the build process should be automated using Docker tools, which will help in maintaining consistency across multiple platforms. Moreover, there should be a Github page workflow for the PolyPhy website deployment, and an issues template should be created to promote people from opening issues on the repos. Finally, the documentation should be improved, and a release management process should be established that includes versioning, release notes, and changelogs.",https://summerofcode.withgoogle.com/programs/2023/projects/lyUInSPD
Zephyr on R5/M4F,Prashanth S,https://gist.github.com/slpp95prashanth/4f09493037d564d54e9de331ee24377e,"Nishanth Menon, Dhruva Gole, Vaishnav Achath, lorforlinux, Kumar Abhishek",BeagleBoard.org,"c, embedded systems, rtos",operating systems,"Current SoCs frequently feature heterogeneous remote processor units in asymmetric multiprocessing (AMP) setups, which may be running several Linux or other real-time OS instances. One such SoC is TDA4VM, with heterogeneous multicore support it can run multiple operating systems simultaneously. TDA4VM has Dual 64-bit Arm® Cortex®-A72 microprocessor subsystem at up to 2.0 GHz, Six Arm® Cortex®-R5F MCUs at up to 1.0 GHz, Two C66x floating point DSP, up to 1.35 GHz, 40 GFLOPS, 160 GOPS and 3D GPU PowerVR® Rogue 8XE GE8430, up to 750 MHz, 96 GFLOPS, 6 Gpix/sec. Zephyr is a small real-time operating system for connected, resource-constrained and embedded devices supporting multiple architectures. Zephyr allows for easy handling of multiple configuration options, APIs and external components, and is well suited to structured application development. Another benefit of Zephyr is that it targets some very serious protocol and standard implementations, being e.g. the first open source RTOS to introduce TSN support – by way of Antmicro’s contribution. The rising popularity of TSN in automotive and aerospace applications, and just about everywhere else, could be a very important reason to start using Zephyr in your TSN-capable product. The goal of the project is to add Zephyr RTOS support to run on Cortex R5 processor core loaded from A72 core running Linux through remoteproc and add few peripheral support (Interrupts, Gpio, UART, Timers) for TDA4VM. The Cortex R5 processor cores are built to provide deeply embedded real-time and safety-critical systems. Adding Zephyr RTOS support for R5 cores in TDA4VM will be very helpful for the Users.. Programming Languages: Assembly Programming, C.",https://summerofcode.withgoogle.com/programs/2023/projects/MyuaawJq
Joint Power and Rate Control in User space for Freifunk OpenWrt Mesh & Access Networks,Prashiddha,https://blog.freifunk.net/2023/09/25/gsoc-23-final-report-on-joint-power-and-rate-control-in-userspace/,"Bluse-Blue, tabas",freifunk,"c, python, linux","wireless communication, Rate and Power Control, Resource Allocation","The IEEE 802.11 specification for Wireless Local Area Networking (WLAN) has been widely deployed worldwide due to its low cost and convenience in providing internet access. As such, the performance of WiFi networks is far from optimal, especially when multiple participants share the same channel in an uncoordinated manner. Hence, resource allocation in wireless transmission plays a vital role in optimizing the throughput of a link. The aim of this project is to implement a joint power and rate controller in user space using the Rateman Python package. As a rate control algorithm in user space has already been developed at SupraCoNeX, namely ""py_minstrel_ht"", this variant of Minstrel-HT can be extended with power tuning capability to better manage interference and increase spatial reuse. In general, the proposed joint controller will consist of a power tuning module that tweaks the power level of the set of best rates, selected by the Minstrel-HT, to an optimal value. Furthermore, the joint controller could also be extended to support modes such as fixed power and low power.",https://summerofcode.withgoogle.com/programs/2023/projects/InnsjFBU
Rusty CCExtractor,Prateek Sunal,https://github.com/CCExtractor/ccextractor,"Carlos Fernandez Sanz, Punit Lodha",CCExtractor Development,"c, rust","Rust Port, Improvement and bug fixes","CCExtractor is a widely used application, but some of its code still has issues, and some still exists as part of C code. This project aims to improve CCExtractor by making code-level improvements, fixing existing bugs, and rewriting many of its codes into Rust. By doing so, CCExtractor would become faster and have safe and predictable code.",https://summerofcode.withgoogle.com/programs/2023/projects/ok8JVTpq
OpenGLES Acceleration for DL,Pratham Deshmukh,https://gist.github.com/Pratham-Bot/8eaa15df3d49d2f6a89b2f1d1f606124,"lorforlinux, Shreyas Atre",BeagleBoard.org,"c, c++, linux kernel, neural network, OpenGLES, Convolution","machine learning, deep learning, neural network, GPU acceleration, OpenGLES, Darknet","Deep learning is a subset of machine learning that involves the use of neural networks with multiple layers. Neural networks consist of multiple layers of interconnected nodes, each building upon the previous layer to refine and optimize the prediction. The main goal of the project is to accelerate as many types of layers as possible using OpenGLES and Darknet as deep learning frameworks. Accelerating the performance of deep learning models is crucial for real-time applications. GPUs are widely used to accelerate the computations in deep learning models, as they can perform many operations in parallel.OpenGLES is a widely used graphics API that provides a framework for performing computations on GPUs. By using OpenGLES to perform computations, we can leverage the parallel processing power of the GPU to accelerate the performance of deep learning models.",https://summerofcode.withgoogle.com/programs/2023/projects/gf9eB3q9
GNOME Crosswords Anagram Support,Pratham Gupta,https://docs.google.com/document/d/1zcF667JiAQU1V6HXOZmAEYuQVAWAM9ClGN2jxT0xEzo/edit?usp=sharing,jrb,GNOME Foundation,"c, glib, GTK4",software development,This project is meant for Crosswords Editor with main aim of adding anagram search support with word-list. It will be a complete implementation involving searching for anagrams to displaying them to the user.,https://summerofcode.withgoogle.com/programs/2023/projects/d2r0Q6TA
Automate areas management in MusicBrainz,Prathamesh Ghatole,https://blog.metabrainz.org/?p=11035,"reosarevok, Michael Wiencek",MetaBrainz Foundation Inc,"python, linux, postgresql, docker, pandas, shell scripting","automation, data analytics, Web Scraping, Data Engineering, ETL","MusicBrainz is a community-maintained database of music metadata that includes information about music artists, their releases, and related data such as recording and release dates, labels, and track listings, as well as the locations related to these tracks. The database tracks area types like countries, cities, districts, etc. to indicate the location of recording studios, artist birthplaces, concert halls, and events. But considering the scope of the database, MusicBrainz refers to external databases like Wikidata & GeoNames to keep its area metadata up-to-date. However, adding areas to the database is currently a manual process, which is cumbersome, causes delays, and prevents frequent updates on outdated areas. With this GSoC project, we aim to tackle this issue by building a new Mechanize based “AreaBot” written in Python (similar to the old Perl Bot) to automatically maintain and update areas in MusicBrainz using Wikidata.",https://summerofcode.withgoogle.com/programs/2023/projects/TsPwhRct
Interactive Web Demos using the MediaPipe Machine Learning Library,Pratyay Banerjee,https://github.com/Neilblaze/GSOC-23/blob/main/README.md,Jen Person,TensorFlow,"javascript, html, tensorflow, reactjs, Tailwind CSS, MediaPipe","web, computer vision, accessibility, MediaPipe, Gesture Detection, interactability","The COVID-19 pandemic has increased awareness of hygiene risks associated with touchscreens, with reports indicating that 80% of people find them unhygienic. Touchless gesture-based intuitive systems can reduce transmission in public settings and workplaces, and offer a seamless and convenient experience. Touchless technology is expected to remain popular in various industries, such as retail, healthcare, and hospitality. In this proposal, I suggest developing an interactive web app using the Mediapipe Hands JS Solution API and simple human gestures to provide perfect contactless interactions with interfaces. The app will showcase an augmented transaction panel previewed on the screen, enabling users to perform essential CRUD operations of items through custom simple-to-use gestures, without physical touch. Both custom defined & pre-trained gestures from Mediapipe’s tasks-vision API will be utilized to classify gestures and trigger events on the interface. The project targets most platforms, primarily big screens, and may run on selective mobile devices with a camera module for input feed. All data taken via input video feed is deleted after returning inference and is computed directly on the client side, making it GDPR compliant. Once completed, the Web App will be uploaded to Codepen and/or deployed on Vercel.",https://summerofcode.withgoogle.com/programs/2023/projects/pd9KgnNP
"Continuous Integration: Test Programs for libcupsfilters, libpappl-retrofit, libppd, CPDB, CPDB Libs",Pratyush Ranjan,https://github.com/pranjanpr/GSoC-23,"Till Kamppeter, Ira McDonald, Zdenek Dohnal, Deepak Patankar",The Linux Foundation,"c, linux, c++, bash, shell scripting, Makefile, Roff","testing, linux, continuous integration, ci","To protect a free software project worked on by several contributors against regressions caused by a committed change, one needs frequent, automated testing of the code base, ideally triggered by every commit into the repository. This is called Continuous Integration (CI). What is triggered on each commit is usually some static analysis of the code using common, specialized tools and build and execution tests, usually doing `./configure; make; make test` on different system platforms. This naturally requires test scripts/programs compiled and run by the `make test` step. For CUPS, for example, the daemon is started (on an unprivileged port so that it does not need root), queues created and listed, jobs sent, and the logs checked whether everything went OK. For Ghostscript, a large collection of input files (gathered from bug reports) is processed and converted into raster formats. The task here is to write test programs for the different OpenPrinting projects so that `make test` does something useful, efficiently catching regressions. They should exercise important functionality of the software with different parameters and analyze logs and output files to check whether the program did the expected work. Test programs are also needed for the so-called 'autopkgtest' tests which are added to Debian packages and executed whenever the package is uploaded to Debian or Ubuntu. In addition, instruction files and shell scripts are needed to build the software on different platforms/environments, run tests, and create GitHub Actions (for the automatic triggering on each commit)",https://summerofcode.withgoogle.com/programs/2023/projects/9Q3PCxCv
Mifos Mobile 6.0 - Mobile Banking App,Pratyush Singh,https://gist.github.com/PratyushSingh07/a016afeb66d9b66b5aa01d232b10d788,"Avinaash M Vijayvargiya, Ahmad Jawid Muhammadi",The Mifos Initiative,"kotlin, MVVM, Coroutines, Jetpack Compose, hilt",Android Development,"Mifos Mobile is an android application built on top of the MifosX Self-Service platform for end-user customers to view/transact on the accounts and loans they hold. Data visible to customers will be a sub-set of what staff can see. The project aims to update and improve the technology stack of a self-service Fineract API system by migrating to Open Banking APIs, implementing Hilt for dependency injection, and adopting MVVM-Clean architecture with Navigation Graph and Coroutines. The project also requires integration with an external payment system such as Mojaloop or mPesa and unit and UI testing. The deliverables include an updated and efficient project with improved functionality and performance, Github workflows, and continuous integration and delivery.",https://summerofcode.withgoogle.com/programs/2023/projects/PVH24XE9
Smart City Dashboard for Liquid Galaxy,Prayag X,https://gist.github.com/Prayag-X/d436610ff922b9c6434797eb842da916,"Andreuibanez, Merul Dhiman, Mario Ezquerro, Deniz Yuksel",Liquid Galaxy project,"flutter, dart","networking, app development, google earth","The idea of the project is to utilize the space that Liquid Galaxy gives us to show the features of Smart Cities in a better way. There will be a mobile app which will interact with Liquid Galaxy to show various details of the Smart Cities like how much power the city produces and consumes, the amount of pollution in the air, waste management etc, through a dashboard and markers on the Liquid Galaxy.",https://summerofcode.withgoogle.com/programs/2023/projects/wC8xPFRk
Simulator Stability Improvements,Prerna Sharma,https://blog.circuitverse.org/posts/prerna-gsoc23-final-report/,"Ruturaj Mohite, Pulkit Gupta, Pranay Simejiya",CircuitVerse.org,"javascript, canvas",web,"The Simulator Stability Improvements project is focused on enhancing the stability and reliability of simulation environments. The project aims to address common issues such as crashes, slow performance, and unexpected behavior that can disrupt the simulation experience for complex circuits. The goals of the project are: 1. Find and fix Data integrity issues that cause data corruption for many users. 2. Implement a debug interface on the simulator that gives us more information about the simulator state from the dev console, allows us to load circuits, and dynamically load and unload parts of the circuit. 3. Find out the areas where we need to write code more defensively instead of expecting data always in the proper format. 4. Implement a safe recovery from simulator crashes. 5. Make a better system for high impedance (X) values.",https://summerofcode.withgoogle.com/programs/2023/projects/M6IuWv4f
Open API Web Search,priyanshu_sharma,https://github.com/postman-open-technologies/openapi-web-search,"Vinit Shahdeo, Himanshu_Sharma, Harshil Jain",Postman,"nodejs, elasticsearch, kibana, Figma, NextJs, Expressjs, HTML/CSS/JavaScript","web, crawling, apis, OpenAPI, Swagger, Postman, Common Crawl, Search Algorithm, Search Indexing","This project addresses developing a solution for extracting Swagger and OpenAPI definitions from less-known sources on the open web and common crawl. The solution must crawl through the common crawl Index files to search for API definitions, validate them, and index them which can be done by Elastic Search, which provides a simple and effective interface as a part of an easy search. The TLDR; is the solution that should function like a search engine for OpenAPI definitions. The proposal addresses the issue that the open-source strategy is attempting to address: finding Swagger and OpenAPI definitions on the open web, crawling websites, and common crawl for API definitions, validating them, and then consuming and indexing them for an ongoing search. The goal is to make it easier for developers to discover APIs by searching for documentation, repositories, and other common aspects of operating an API. This is part of an initiative called API First World Approach, which allows developers to easily discover APIs.",https://summerofcode.withgoogle.com/programs/2023/projects/eCay1Ozn
Proposal for contributing in LocationToolkit Integration,prvn2004,https://docs.google.com/document/d/1RN3Tr8iln-m9H7iBO7iNfKMGobrofhIyS5KWLqpB6ek/edit?usp=sharing,Benjamin Pross,52°North Spatial Information Research GmbH,"android, java, kotlin","mobile, location, SIMPORT","This proposal aims to implement a location privacy toolkit in the enviroCar app, a mobile platform for handling personal location information. The toolkit will enable users to make informed decisions about the location data they share by replacing the native Android location API and creating additional settings for fine-grained data selection. The expected result is the successful implementation of the location privacy toolkit in the enviroCar app. The project duration is estimated at 175 hours, and the mentor is Benjamin Pross from 52°North. The project will use the enviroCar code license, and the preparation will involve checking out the toolkit and discussing development with the mentor.",https://summerofcode.withgoogle.com/programs/2023/projects/tmfVId7S
Machine Learning Guided Ordering of Compiler Optimization Passes,Puneeth A R,https://github.com/Puneeth-A-R/GSoC2023/blob/main/README.md,"Tarindu Jayatilaka, Johannes Doerfert, Mircea Trofin",LLVM Compiler Infrastructure,"python, llvm, c++, clang","compilers, machine learning, programming languages, Code Optimization","Standard optimization pipelines are used by developers to compile programs in LLVM clang like (O1, O2, O3, etc…). These are based on heuristics that follow a one size fits all approach. These are not specifically tailored to any one type of program such as call heavy, pointer heavy, etc… which leads to suboptimal binaries being generated. We want to improve the optimization phases of the LLVM Clang compiler through the use of Machine Learning to select the minimum optimization pipeline, from a pre-set of options, that produces the exact same optimized code. Integrating the machine learning model into the existing LLVM compiler infrastructure is one of the key areas of this project.",https://summerofcode.withgoogle.com/programs/2023/projects/T8rB84Sr
VideoCutTool: Improve the functionality of VideoCutTool,PunithNayak,https://www.mediawiki.org/wiki/User:Punith.nyk/The_Final_Report,"Gopa Vasanth, Sohom Datta, Sgautam",Wikimedia Foundation,"postgresql, nodejs, reactjs",web,"Proposed features to improve VideoCutTool's user experience on the Wikimedia website: 1) Cloud storage to save work, and resume editing from anywhere 2) Advanced editing features like special effects, transitions, and text overlays using FFPMEG commands 3) Keyboard shortcuts to speed up the editing process 4) Undo and redo functionality to revert changes and reduce risk of data loss 5) Unit testing with Jest, React testing library, and API mocking for error, internationalization, and cross-browser testing 6) Persisting edited video through local storage or server-side database.",https://summerofcode.withgoogle.com/programs/2023/projects/aMCdJCoE
A Nextflow Pipeline for Repeat Annotation,Purav Biyani,https://docs.google.com/document/d/13o2FHhQOY1VaYZOa9rmceTd_MO1n6SmAn5rjJ8s5Onk/edit#heading=h.doruredts3f,"Fergal Martin, Leanne Haggerty, Thiago Genez",Genome Assembly and Annotation,"python, perl, nextflow","bioinformatics, cloud, containerisation","My proposal is to develop a NextFlow pipeline that will efficiently and accurately perform repeat annotation and masking on large genome sequences that are filled with repetitive elements. The pipeline will be designed to handle genome chunking and multiprocessing to ensure efficient use of computational resources. The pipeline will take a genome sequence in FASTA format as input and use the RepeatModeler tool to generate a de novo repeat library for the input genome sequence. It will then use RepeatMasker to mask and annotate the repeats in the input genome sequence. Additionally, it will use Dust to mask and annotate low complexity sequences and TRF to mask and annotate tandem repeats in the input genome sequence. The pipeline will combine the results from these steps to output a masked genome sequence in FASTA format and annotated repeats in GTF format. Furthermore, the pipeline will use the tool RED to perform additional masking and output an additional masked genome sequence in FASTA format. The pipeline will be deployed in the cloud using the Embassy Cloud within the EMBL-EBI infrastructure to allow for testing and scaling, with the aim of determining the cost of running it at scale. The main problem that this proposal aims to solve is the challenge of identifying and masking repetitive elements in large and complex genome sequences. The pipeline will provide a detailed and informative annotation of the repeats within the genome, making it easier for researchers to analyze the non-repetitive regions of the genome. The deliverables of this proposal will include a NextFlow pipeline for repeat annotation and masking, a de novo repeat library for the input genome sequence, a masked genome sequence in FASTA format with repeat, low complexity, and tandem repeat annotations, an annotated repeats file in GTF format, and an additional masked genome sequence in FASTA format generated using the tool RED.",https://summerofcode.withgoogle.com/programs/2023/projects/aFLAmznr
FASEROH : Building seq2seq model for mapping histograms to empirical symbolic representations,Pushpdeep Singh,https://pushpdeep.medium.com/gsoc-2023-with-ml4sci-faseroh-1d2bb96d727e,"Abdulhakim Alnuqaydan, Harrison Prosper",Machine Learning for Science (ML4SCI),"python, pytorch, sympy, Transformers","deep learning, symbolic mathematics, nlp, Transformers, Translation","The problem involves creating a seq2seq model for mapping histograms to empirical function sequences. I propose to tackle this in two steps. Step 1 involves creating random functions and normalizing them to get a set of function sequences, then generating histogram data and best-fit parameters for the function. This dataset is proposed to have a million examples. Step 2 involves experimenting with different seq2seq models like LSTMs, Transformers, and Pre-trained Transformers and training/evaluating their performance for our task. It also involves tuning hyperparameters and exploring the use of other transformer architectures like TabTransformer for this task. I also propose of stretch goal - checking the robustness of our model to distribution shift in the data.",https://summerofcode.withgoogle.com/programs/2023/projects/5kE1mg0m
GraphNet,Pushpendra Chandravanshi,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/07-Pushpendra-Chandravanshi-GraphNet.md,RavinduDeSilva,SCoRe Lab,"javascript, react","web, graphics","Graphnet is a Javascript graph library that will be created as a module for the semantic UI framework. Whereas Graphnet dynamically renders all nodes and edges via websocket connections, node and edge positioning algorithms such as force, random, circular, and others must be provided within the Graphnet as builtin modules. Throughout the summer, I will work on developing this library.",https://summerofcode.withgoogle.com/programs/2023/projects/oUeY8arQ
Mifos X Web App Enhancements,Pushpendra Kumar,https://gist.github.com/PC-11-00/8f726c2a6719c7493accbaa58bcfb047,"Bharath Gowda, Ramveer, Ashutosh Sharma",The Mifos Initiative,"Javascript, SCSS, HTML5, Angular 9, Angular Material, Flex Layout",web,"The project Mifos X Web App Enhancements aims to optimize the design of key flows, improve app localization, add in better context-sensitive help, improve dashboards and visualizations, and refactor the web app to consume a TypeScript client for better maintainability.",https://summerofcode.withgoogle.com/programs/2023/projects/C8LhVwKG
Adaptive MIRK BVP solvers,Qingyu Qu,https://erikqqy.github.io/2023/08/22/gsoc-final-report/,"Chris Rackauckas, Yingbo Ma, Avik Pal",NumFOCUS,julia,"hpc, BVP, ODE, SciML","Boundary value problems (BVPs) are mathematical models that arise in a variety of fields, such as economics and chemistry. BVPs are essentially ordinary differential equations (ODEs), but with additional constraints. The current implementation of MIRK solvers in BoundaryValueDiffEq.jl does not support defect control and mesh uniform refinement, which really hindered its application. To address this limitation, the goal of this project is to implement defect control for MIRK (Monotonic Implicit Runge-Kutta) solvers and to add mesh uniform refinement to BoundaryValueDiffEq.jl, thus enhancing the capabilities of SciML's differential equations solvers in solving BVPs。",https://summerofcode.withgoogle.com/programs/2023/projects/zLtIiHjs
shenyu-springcloud-plugin-e2e-testcase-proposal,QinHaiqi,https://gist.github.com/HaiqiQin/1825af8245210185d3d6f25b1fa52306,"moremind, likeguo, daming",Apache Software Foundation,"java, docker",end to end test,"E2e (End to End), also known as end-to-end testing, is a method used to test whether the application flow is executed as designed from beginning to end, which can simulate the integrity and accuracy of a software system under real user scenarios. Currently, Shenyu only supports e2e test cases for the divide plugin, so this task requires adding test cases for the spring cloud plugin.",https://summerofcode.withgoogle.com/programs/2023/projects/OeKmTy4J
Parameterized device layouts for GF180MCU,Qurrat ul ain Alam,https://medium.com/@qalam_89573/gsoc23-parameterized-device-layouts-for-gf180mcu-63a283439021,"Tim Edwards, Stefan Wallentowitz",Free and Open Source Silicon Foundation,"c++, tcl, magic","OpenLane, global foundary","Throughout this project, I hope to gain a firmer understanding of TCL scripting and the backend working of parameterized devices and hopefully make some new ones too these devices are used many times while using magic to makes our work easier. this project will help me in a deeper understanding of how each command in the command line works in magic and how we can make some changes in its scripts to make it to improve user inference. In terms of the project, the goal is to work in scripts to draw devices like LDNMOS, LDPMOS, bipolar transistors, photodiodes, Avalanche Diode, etc as well as fixing a few devices that are known to draw incorrectly for some parameter values.as far as working on this project is concerned as per my own rough timeline following is the methodology i would use while working on the project : The magic VLSI tool uses TCL scripts for the parameterized design layouts so we should start by going through some of the scripts to get a better understanding of what we are working with then we will be going through each of the mentioned devices and study its CMOS design and draw it on the magic tool using the magic command line TCL scripts, we will also be looking at the pre-existing devices to check if we were getting the required drawings of them or not if the drawings are not as required then we will be making changes to those scripts as well, in the meantime, we will be looking for improvements we could make on the user inference of magic tool too. to get a better understanding of how I would work on this project please go through the proposal I have attached below. thankyou soo much for your time, looking forward to working with you soon.",https://summerofcode.withgoogle.com/programs/2023/projects/ybNyzTnL
Exploring Open Source Sustainability via Agent based Modelling and Reinforcement learning,R.V.Rajagopalan,https://gist.github.com/rv602/9bd5c469e635075ffd27995514b5c24a,"Jesse Parent, Bradly Alicea",INCF,"python, Mesa, Next JS","web, agent-based-modelling, reinforcement-learning","The proposed project aims to address the sustainability challenges faced by open-source software projects by using an agent-based modelling and simulation approach. Open-source projects often face issues such as limited resources, difficulty in attracting and retaining contributors, and communication breakdowns, which can hinder their growth and sustainability. To address these challenges, the project will simulate various scenarios and identify the factors that contribute to the success or failure of open-source projects. The project will provide a framework that enables simulating different scenarios to assist project maintainers in making informed decisions that promote sustainability. This approach can offer a more detailed and context-specific understanding of the challenges open-source projects face and develop effective strategies for maintaining their sustainability.",https://summerofcode.withgoogle.com/programs/2023/projects/F504B01a
Chromium GSoC Proposal: Test History for wpt.fyi,Rachel Russell,https://racheljay.github.io/code-blog/2023/09/05/gsoc-wrap-up.html,"Kyle, Stephen, danielrsmith",Chromium,"python, javascript, golang","visualization, web, test history","Currently, there is a good visual for the results of the current and most up to date test runs, but there is not an intuitive way to easily view the results history of any given test, and the results data is not stored in a way that allows for easy viewing of a test’s historical results. A primitive way to view some historical test data exists, but it is not as ingestible and encompassing as it could be for users. This project’s goal is to improve the way in which historical test data is being shown for the Web Platform Tests suite. This improvement would include overhauling the user interface display of the historical data, as well as creating a new data format to easily reference test data history that is generated when processing incoming Web Platform Tests results.",https://summerofcode.withgoogle.com/programs/2023/projects/sU6WDtYa
Functional Enhancements to Mobile Wallet,Rachit Gupta - @rchtgpt,https://docs.google.com/document/d/1xHDVzmxuBj5KA0vHiJS_UGrs0Zb6IrpqwRmSdW3uExM/edit?usp=sharing,"Chirag Gupta, Avinaash M Vijayvargiya, Rajan Maurya",The Mifos Initiative,"mysql, java, kotlin, git, rest","Core development, Mobile - Mifos X, Mobile Native Android Development","My objective for GSoC 2023 is to elevate our Mobile Wallet to become a benchmark implementation of a cutting-edge and reliable mobile wallet application, designed specifically for fintech companies. The plan is to enhance its capabilities by seamlessly integrating the newest version of Payment Hub EE, implementing Mifos' recently launched design library, updating the wallet framework to utilize Mifos' Android SDK, refactoring the existing Java codebase to Kotlin, and aligning the overall architecture with the principles of the Open Wallet Foundation Framework. These initiatives will help us create a robust and secure Mifos Pay (v1) that is fully prepared for deployment to our valued users.",https://summerofcode.withgoogle.com/programs/2023/projects/esX4evaK
Mifos X Web App Enhancements,Radha Ravindra Thakare,https://gist.github.com/radhathakare/367e2aef18b206e3219ae9e6db06a56d,"Bharath Gowda, Ramveer, JoseAlberto",The Mifos Initiative,"javascript, bootstrap, html5, angular, SCSS, Angular Material, Echarts",web development,"The Mifos X Web Enhancements project seeks to enhance localization, internationalization, and adapt web app to consume Typescript client for improved speed and more user-friendly software.",https://summerofcode.withgoogle.com/programs/2023/projects/H1yeEAEQ
Parallel stacks for Kotlin Coroutines in the debugger,Raehat Singh Nanda,https://medium.com/@raehatsinghnanda/parallel-stacks-for-kotlin-coroutines-in-the-debugger-d3099eb3a9c2,Nikita Nazarov,Kotlin Foundation,"kotlin, Kotlin Coroutines, IntelliJ IDEA Plugin Development","concurrency, debugging, Kotlin, Asynchronous Programming, IntelliJ IDEA, Plugin Development","This project is focused on enhancing the functionality of Kotlin Coroutines by developing parallel stacks for use in the debugger. The goal is to provide developers with an effective means of debugging their asynchronous and concurrent code. To achieve this objective, an IntelliJ IDEA plugin will be developed that will communicate with the Kotlin compiler during a debugging session. The plugin will be able to retrieve relevant information about coroutines at any state of the program and leverage this information to generate a parallel stacks view. This will provide developers with a comprehensive overview of the execution flow of their coroutines, allowing them to more effectively identify and resolve issues in their code. Overall, this project represents a significant advancement in the toolset available to Kotlin developers, enabling them to build more reliable and performant coroutine-based applications.",https://summerofcode.withgoogle.com/programs/2023/projects/PVTFNSvL
Satellite Space Collision prevision,Rafel Salgueiro,https://docs.google.com/document/d/10pF6yFT35_TvV1RgtrKNj4I8XoyquvbY7CIpSRbbrdE/edit?usp=sharing,"Andreuibanez, Moisés Martínez, Ivan J, Pau Francino",Liquid Galaxy project,"python, java, kotlin, flask, docker","web, machine learning, Satellite","In this project, I am going to make a neural network which is going to predict the probability that one satellite will collide with another. With this information, I am going to compute what area of the earth may be affected by this collision.",https://summerofcode.withgoogle.com/programs/2023/projects/o4g0AJgd
Dynamic device registration for NetAnim simulation animations,Raghuram Kannan,https://www.nsnam.org/wiki/GSOC2023NetAnimFinalReport,"Tommaso Pecorella, Manoj Kumar Rana",The ns-3 Network Simulator Project,c++,"network simulation, NetAnim","NetAnim is a tool used to visualize a node's movement and messages between node's. The current NetAnim module implementation has one severe limitation-It requires events from the node's and the net-devices, and to do so it hooks on several callbacks. The goal of this project is to refactor NetAnim so that each module willing to use NetAnim will have a NetDeviceAnim class responsible for communication with the NetAnim module, enabled only if NetAnim is active. This will break the dependencies and will allow more flexibility for out-of-tree modules and modules migrating to the AppStore.",https://summerofcode.withgoogle.com/programs/2023/projects/EpacH0ct
User Management in Plone,Rahil Hastu,https://gist.github.com/rahilhastu/7e1b6d851f5960d8c54a222fada9cd0e,"Rob Gietema, Jakob Kahl",Plone Foundation,"python, react, css","web, cms, User Management","The Plones’ Volto user management system is missing several key features, such as the ability to edit existing users and groups in the frontend. This project aims to address these shortcomings by implementing robust and responsive UI techniques to improve the user experience and functionality. To achieve this, the existing user and group management screens will be redesigned using React, and new workflows connecting the frontend and backend will be developed using Python. Edit functionalities will be added across all three screens (User, Group and User Group Membership), ensuring a smooth user experience and minimizing errors. In addition to addressing the missing features, this project also aims to improve the overall appearance and responsiveness of the system. By thoroughly testing all pages and resolving any issues that arise, we can ensure that the final product is both visually appealing and highly functional. Overall, this project represents a significant step forward in Plone's user management capabilities, providing users with a more powerful and streamlined system for managing users and groups.",https://summerofcode.withgoogle.com/programs/2023/projects/gqN2Dzf7
An Integrated CONTROL-CORE experience,Rahul Jagwani,"https://github.com/Rahuljagwani/concore-editor/wiki/GSoC-2023-Department-of-Biomedical-Informatics,-Emory-University:-An-Integrated-CONTROL%E2%80%90CORE-Experience","NAN LI, Mark Arnold, Tony Pan","Department of Biomedical Informatics, Emory University","python, javascript, react.js",web,"At present, all the Concore methods such as build, debug, run etc. are executed from CLI by user and Concore-editor does not serve the functionality of performing these methods directly from frontend. Therefore, to achieve the following this project aims to integrate Concore-editor with Concore so that on studies developed in Concore-editor, the specific Concore functions can be performed straight away. This project implements the above using the approach of making custom API calls from Concore-Editor to Concore Backend with custom arguments which are essential for Concore Backend to function. Making necessary checks to execute API calls in order is another aspect of the approach taken.",https://summerofcode.withgoogle.com/programs/2023/projects/cRrCc5M4
PyElastica - Extending contact module capabilities,Rahul Joon,https://gist.github.com/Rahul-JOON/8772eca4aeaebf2e49504c3cadd41a96,"Noel, ArmanT, Ali-7800",Python Software Foundation,python,"robotics, Cosserat Rod, Physics/Dynamics","PyElastica is the Python version of Elastica, a project that uses Cosserat Rod theory to simulate assemblies of thin one-dimensional bodies. Currently, in PyElastica we can model the contact of rods with a frictional plane or rigid cylinder and themselves. The following are the deliverables : 1.) Develop an algorithm to import STL mesh and convert it into PyElastica Geometry. 2.) Develop a library that implements contact forces between the rod and the imported shape. 3.) Validate implemented features/craft examples.",https://summerofcode.withgoogle.com/programs/2023/projects/So4NtoyI
Fixing manifest parsers for SBOM generator,Rahul Tiwari,https://gist.github.com/ba11b0y/a9c7e76f5cace805340edc739ceb0f18,"nnk, puerco",SPDX,go,"compliance, licensing, SBOM","The spdx-sbom-generator tool helps generating SBOM information complying with the SPDX standard and relies heavily on the parsers project. This GSoC project aims at improving the existing parsers for Python's package managers namely pipenv, poetry and pyenv. The project also aims to add initial support for conda which is another dependency and environment manager for Python and other languages.",https://summerofcode.withgoogle.com/programs/2023/projects/cOOOA6XX
Unicode Support for GCC Rust Frontend,Raiki Tamura,https://hackmd.io/@tamaron/ryqNQUvj2,"Philip Herron, Arthur Cohen",GNU Compiler Collection (GCC),c++,"compilers, rust, Unicode","The Rust programming language supports Unicode in identifiers, similarly to other modern programming languages such as Go, C++, and JavaScript. The main goals of this project are supporting Unicode identifiers in GCC Rust and improving their location information for better error messages.",https://summerofcode.withgoogle.com/programs/2023/projects/mBU2ozBa
FaaS TypeScript Reimplementation,Raj Aryan,https://github.com/Creatoon/gsoc-2023/blob/main/submissions/creatoon.md,"Jose, TRGWII",MetaCall,"linux, javascript, docker, typescript, shell scripting, Mocha, Git & Github, Metacall Core","web apps, cloud, faas, Serverless, Lambda Functions","This project offers a reimplementation of MetaCall FaaS but with a simpler and less performant implementation. The objective of this FaaS reimplementation is to provide a simple and portable FaaS that can be run from the CLI in order to locally test the functions and complete projects that can be deployed into MetaCall FaaS. It mimicks the MetaCall FaaS REST API but without need of authentication and with only the required capabilities for development. This repository will share parts with MetaCall FaaS through MetaCall Protocol so code can be reused between the repositories. In the end, MetaCall FaaS will be integrated with MetaCall CLI, providing a self contained distributable with all the compiled code which can be launched or invoked from an external CLI via API.",https://summerofcode.withgoogle.com/programs/2023/projects/8pfFYrnv
Interactive Link Visualizer for XWiki,Rajat Khanduri,https://www.xwiki.org/xwiki/bin/view/Blog/RajatGSoCExperience,"Michael Hamann, Stéphane Laurière",XWiki,"javascript, java, typescript, npm, Apache Solr, XWiki, HTML/CSS/XML, Apache Velocity, Apache Maven, sigma.js, graphology","data visualization, network graphs, interactive link visualisation","The project aims to develop an interactive link visualizer application for XWiki which shows the end-users a network-graph of pages present in a wiki in the form of nodes and edges. The application will consist of many feature like a separate customizable panel for a local graph (i.e., visualization around only the currently opened document), search feature, etc. The nodes represents the various pages/documents and edges represents the links between them. For complete documentation of the application, see: https://extensions.xwiki.org/xwiki/bin/view/Extension/InteractiveLinkVisualizer End-users will get to visually interact, explore & analyze link relationships within XWiki pages & hence users will more easily: ● Understand the structure of the documents and the relationships between them ● Identify patterns and connections that may not be immediately apparent when looking at the documents in text format. ● Navigate through the platform and locate the information they need. The final solution has been published in the form of an XWiki extension on the XWiki Extension Store where the users can install & use it on their XWiki instance.",https://summerofcode.withgoogle.com/programs/2023/projects/SDsRPpLf
Add OpenVINO support to John Snow Labs Spark NLP,Rajat Krishna,https://github.com/rajatkrishna/google-summer-of-code/tree/main,"Junwen Wu, Ravi Panchumarthy",OpenVINO Toolkit,"java, c++, jni, SparkNLP","machine learning, optimization, Spark NLP","Performance-focused, production-level machine learning libraries need to leverage the resources at their disposal to the maximum extent to deliver efficient and effective machine learning workflows that ultimately result in improved user experience. SparkNLP, one such library widely adopted and used by 16% of enterprise companies(as of Feb 2019), is currently capable of taking advantage of CPU optimization capabilities using Intel-optimized Tensorflow. This coupled with other optimizations already allows it to run machine learning pipelines orders of magnitude faster than legacy libraries. Such a library would benefit from solutions like OpenVINO that offer extensive integrations in the ML ecosystem and even further optimization capabilities for inferring and deploying models on a range of hardware platforms. Exposing the OpenVINO API bindings in Java will allow integration with SparkNLP to enable the above-mentioned capabilities, and furthermore, open up avenues for a large community of developers to benefit from OpenVINO’s rich feature set in the future.",https://summerofcode.withgoogle.com/programs/2023/projects/4YM6Dr1f
Develop IO Routines for HNN-core outputs,Rajat Partani,https://github.com/jonescompneurolab/hnn-core/pull/651,"Nicholas Tolley, Stephanie Jones, Mainak Jas, R Thorpe",INCF,python,"simulation, networks, modeling","The idea of the project is to develop IO routines adapted from HNN-core objects while maintaining backwards compatibility with HNN-GUI. The requirement is to save various objects in newer formats while having capability to read both new and old formats. The proposed new format for HNN-core outputs is the Cross-language, flexible and binary format hdf5. It consists of groups (folder) and datasets (individual files) to store data modularly.",https://summerofcode.withgoogle.com/programs/2023/projects/1ERkgBbV
pg_statviz: Time Series Analysis & Visualization of Statistics,Rajiv Harlalka,https://github.com/rajivharlalka/gsoc23-postgres/blob/main/Final_Report.md,"Jimmy Angelakos, Pavlo, Boriss Mejías",PostgreSQL,"SQL, PL/pgSQL, Python, Matplotlib, Linux","PostgreSQL Extensions, Packaging in RPM and DEB Systems","pg_statviz is a PostgreSQL extension with a command line utility pair. The extension can snapshot cumulative and dynamic statistics of various PostgreSQL internal tables. These snapshots are stored in another schema, pgstatviz, which can be queried using SQL for analysis. The python command-line utility accesses the tables in this schema to perform time-series analysis and create visualizations. Using the packages, database administrators can efficiently perform sophisticated analysis of their PostgreSQL database statistics over different time intervals. The project includes the following deliverables: - increased number of modules to the extension. - addition of regression tests to the extension - implementation of a long term retention policy. - packaging of the tool for various Linux Distribution. - Add Documentation about the tool.",https://summerofcode.withgoogle.com/programs/2023/projects/4sndCuo0
High-level HTTP client library,Rajkumar Dongre,https://github.com/rajkumardongre/GSoC23-Final-Report-Rajkumar-Dongre,"Milan Curcic, Arteev Raina, Philipp Engel",Fortran-lang,"fortran, curl, libcurl, fortran-curl","network programming, HTTP/HTTP requests","The project aims to implement a High-level library for HTTP requests. The library would allow Fortran programmers to make all standard HTTP request methods (GET, HEAD, POST, PUT, DELETE, CONNECT, OPTIONS, TRACE, and PATCH). This project will use fortran-curl, a set of Fortran bindings to libcurl, under the hood. The outcome of this project is that consuming HTTP web services from Fortran applications would become significantly easier than ever before. Expected outcomes: Implemented a minimal but working capability to make HTTP requests from Fortran and parse data from the response body and headers",https://summerofcode.withgoogle.com/programs/2023/projects/i0udhZW2
Timeframe for Metrics,Rakshit Gondwal,https://github.com/rakshitgondwal/gsoc-2023/blob/main/README.md,"Thomas Schuetz, Florian Bacher",CNCF,"prometheus, golang, kubernetes, Observability","metrics, devops, cloud native, observability","Currently, the Metrics Controller in the Keptn Lifecycle Toolkit only allows querying a single value per metric. This project will enable users to define timeframes for metrics and get standardized aggregated results for the given timeframe. The addition of time frames for metrics would provide developers with a lot of flexibility when analyzing their application’s performance as they would be able to easily switch between different timeframes to get a better understanding of how their application is performing. This can be achieved by modifying the structure of the Metric CRD by adding certain fields and then modifying the APIs of our Metric providers to support these newly added fields. The metrics controller would be able to query metrics over a timeframe and then return raw values from the providers which can then be passed to the aggregation functions to calculate the desired aggregated value. These values would be updated in the Metric CRD.",https://summerofcode.withgoogle.com/programs/2023/projects/e7z3n3kH
Porting SeqToSeq and DTNN Model to PyTorch,Rakshit Kumar Singh,https://forum.deepchem.io/t/gsoc-23-porting-dtnn-and-seqtoseq-model-to-pytorch-report/1013,"Tony Davis, SPS",Open Chemistry,"python, tensorflow, pytorch",Deeplearning,"PyTorch is becoming increasingly popular as the preferred backend for developing algorithms, thanks to its sustainability. DeepChem has decided to port its TensorFlow and Jax Models to PyTorch. This project aims to successfully port two of DeepChem's models. SeqToSeq and DTNN Model are being ported under this project. SeqToSeq is a neural network that maps variable-length input sequences to variable-length output sequences. DTNN stands for Deep Tensor Neural Network, which is a deep learning architecture that uses tensors to represent molecular structures for predicting chemical properties and activities. The implementation will include documentation changes, usage examples, and a tutorial if required.",https://summerofcode.withgoogle.com/programs/2023/projects/Pu8up6x4
Extending E2E Automated Tests for the OpenMRS 3.0 RefApp,Randila Premarathne,https://medium.com/@randilamenukapremarathne/gsoc-2023-extending-e2e-automated-tests-for-the-openmrs-3-0-refapp-7f283d733db2,"Piumal Rathnayake, Anjula Samarasinghe",OpenMRS,"typescript, Playwright",QA automation,"At present, there are already a few E2E tests running for the openmrs-esm-patient-management repository and more coverage is expected. The goal of the project is for someone to extend the E2E tests for openrms-esm-patient-chart and openmrs-esm-core using the playwright framework. The tests will be set up to automatically validate the user interface based on specific workflows.",https://summerofcode.withgoogle.com/programs/2023/projects/V8hfX6Nt
re:Arch Unikraft,Rares Miculescu,https://github.com/unikraft/gsoc/tree/staging/gsoc-2023/work-product/Rares-Miculescu-Plat-Re-Arch,"RazvanD, Simon Kuenzer, SergiuM, Dr.-Ing. Marc Rittinghaus, Michalis E. Pappas",Unikraft,"c, Registers","Drivers cancel, Restructuring","Unikraft is an automated system for building specialized POSIX-compliant OSes (unikernels). These unikernels are configured for the needs of specific applications. It is based around the concept of small, modular libraries, each providing a part of functionality found in an operating system (e. g. memory allocation, scheduling, network stack etc.). All components of Unikraft’s architecture are micro-libraries. Despite its “everything is a library” concept, Unikraft should have some architectural changes that can improve the program’s modularity and everybody’s experience. For example, some of the changes that can be made are: source code’s layout to be changed, APIs written as libraries (e. g. paging.c), moving drivers outside ‘common/’, implementing per-platform configuration etc.",https://summerofcode.withgoogle.com/programs/2023/projects/L97cI91F
Matplotlib: Improvements to MathTeX,Ratnabali <devRD>,https://devrd.github.io/posts/gsoc_fin,"QuLogic, Kyle Sunden",NumFOCUS,"python, javascript, latex","data visualization, plotting, latex, mathematical typesetting","Matplotlib is a popular data visualization library that is used in multiple academic and industrial projects. LaTeX is a common tool for formatting mathematical symbols in most technical plots. Matplotlib supports mathematical typesetting through the ‘mathtext’ module. This LaTeX framework enables mathematical symbols, math fonts, and font encodings to fine-tune the usability of math texts inside a data plot. This project focuses on improving mathtext by examining the known/reported issues within the existing framework, expanding support for new Math-LaTeX-based features, and incorporating robust testing to track down unobserved issues. The overarching goal of this project is to improve the functionality and usability of mathtext for a wide spectrum of use cases.",https://summerofcode.withgoogle.com/programs/2023/projects/AWFpwnZK
Pocket Paint for Kotlin Android: Landing Page,RD Rama Devi,https://gist.github.com/Rd4dev/127b7233c367fecd5228c344e433138c,"Thorsten Bandel, SebastianGrief",International Catrobat Association,"xml, kotlin, ui/ux, Android studio, Glide, Room Persistence","Mobile App development, user interface design, Image gallery","The objective of this project is to design and implement a landing page for Pocket Paint on the Android Kotlin platform. The landing page will feature a gallery view where users can preview their saved images and quickly select one to continue editing or start a new drawing. By having a clear and organized landing page, users will have an intuitive and seamless experience with Pocket Paint. The landing page design will be inspired by the existing landing page in Pocket Code, ensuring consistency and familiarity for users. With the implementation of this landing page, Pocket Paint will become a complete app, providing a more comprehensive and efficient drawing experience.",https://summerofcode.withgoogle.com/programs/2023/projects/AVNo1eMy
Building Apache Beam Notebooks for Real-World ML Use Cases,Reeba Qureshi,https://medium.com/@reebaq2/real-world-ml-use-cases-apache-beam-gsoc-2023-report-edeb313d43ba,"Danny McCormick, Pablo E",Apache Software Foundation,"python, tensorflow, Google Cloud Platform, keras, Scikit Learn, Apache Beam","machine learning, cloud","In this project, I want to create Jupyter notebooks for a real-world machine learning use case, especially image processing using publicly accessible datasets. The goal is to create a reference guide that others can use to build ML pipelines for image processing or computer vision problems. I already have experience working with image processing to detect breast cancer cells in histopathological images and want to leverage that to build a similar pipeline using Apache Beam for image processing use cases. This can also be expanded to other computer vision problems like object detection, facial recognition, optical character recognition, and hand gesture recognition for disabled people. Following are some ideas on notebooks that I can build and contribute to : 1. Image Data Preprocessing: Apache Beam can be used to create a pipeline for different image pre-processing tasks like resizing, cropping, normalizing and filtering for different image file formats like TIFF, PNG and converting it into a more standardized format like JSON. 2. Model Inference: We can showcase how trained models can be used to make real time inferences in a Beam pipeline. 3. Model Evaluation: We can evaluate the model using Apache Beam, utilizing various metrics such as accuracy, precision, recall, and F1 score. 4. Stretch Goal: If time permits, we can do a similar process for video datasets and show how to preprocess videos using Beam. Deliverables Apache Beam notebook with working code to deploy a pipeline for image processing/video processing use case and supporting documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/tCKZoqmv
GWT Unit Testing,Reshu Kumari,https://reshukumari120.medium.com/google-summer-of-code-2023-mit-appinventor-reshu-kumari-38c0de6b9df4,Susan Rati Lane,MIT App Inventor,"java, gwt, junit, Ant","web, App building",The project aims to set up a code coverage metric with additional unit tests to test the GWT client code. We will be using Jacoco a as code coverage metric and writing the Junit tests to unit test the GWT client code.,https://summerofcode.withgoogle.com/programs/2023/projects/G4lhhRgz
Improving PostgreSQL Version Support for pgexporter,resyfer,https://github.com/pgexporter/pgexporter/discussions/63#discussioncomment-6771673,"Jesper Pedersen, Athila Mattos, Nikita Bugrovsky",PostgreSQL,"c, postgresql, prometheus, sql, YAML","metrics, database, Version Support","Pgexporter provides Prometheus metrics for PostgreSQL servers which include some core metrics, as well as custom metrics provided by users. The custom metrics are SQL queries that are run by the various servers, which subsequently may have a variety of PostgreSQL versions. If a query has parts of it not supported by a particular such server, then the whole query gets rejected. This proposal aims to solve this issue by enabling users to provide alternatives of the query of a metric along with the minimum PostgreSQL version on which each alternative query’s supported. Thus, whenever a particular server will need to be queried with a custom query, then based on the PostgreSQL version of the server, the corresponding query will be sent to the server, and the response will be formatted in the form of Prometheus metrics. This will greatly benefit both the users, as well as developers, to provide an out-of-the-box solution and would neither require the updation of codebases to cater to new PostgreSQL major version releases, nor would require the users to adapt to that change.",https://summerofcode.withgoogle.com/programs/2023/projects/Djrl5w5B
CVE-Bin-Tool: Introduce support for EPSS,Rexbeast2,https://gist.github.com/Rexbeast2/19adb5d66864499453c92a5dfed89cdc,"Terri Oda, DRAGON2002, aph, rhythmrx9",Python Software Foundation,python,cybersecurity,"The project will involve updating the database schema to accommodate EPSS data, adding EPSS data to the database through download in CSV format and parsing it for each CVE, updating database queries to retrieve EPSS data, and updating output reports to include EPSS data. The project will also include adding extra CLI commands to filter EPSS scores and updating documentation and tests to reflect the new changes. Overall, the integration of EPSS will enhance the precision and reliability of the CVE-BIN-TOOL, allowing users to better understand the severity of vulnerabilities and prioritize their remediation efforts. This is an overview of the tasks for this project: Update database schema Add EPSS to the database Update output reports to include EPSS data Add extra CLI commands to filter EPSS scores Update documentation and tests",https://summerofcode.withgoogle.com/programs/2023/projects/v3CVdLSD
Closing Credits Clip Generator,Rhythm Narula,https://medium.com/@rhythm.narula26/gsoc-pitivi-project-crafting-closing-credits-clip-generator-5454088a570d,"Alex Băluț, Thibault Saunier",Pitivi,"python, gtk, gstreamer",video processing,The ultimate goal of the proposal is to develop a feature that provides users the ability to effortlessly add closing credits to their edited video. This is achieved by making use of wpe plugin in gstreamer that is able to turn an HTML file into video,https://summerofcode.withgoogle.com/programs/2023/projects/4LQURy8D
Ultimate Alarm Clock,Rijuth Menon R,https://github.com/CCExtractor/ultimate_alarm_clock,Nishant Singhal,CCExtractor Development,"flutter, dart","mobile development, Dart, Flutter","Abstract Ultimate Alarm Clock is a mobile app that aims to provide features that other alarm clocks don’t have such as conditional alarms based on location, phone activity, weather, or shared settings. Besides these, the clock will also include unique features to dismiss the alarm such as scanning a QR/Bar code, solving simple math problems of varying difficulty or shaking the phone. This is an open-source, free, and ad-free project that's built with Flutter. Proposed Deliverables - A Flutter application that runs as a foreground service and uses Firestore as its database which would hold all the alarms created by the user. - This app would allow users to set conditional alarms by tracking their phone activity, location, weather or shared settings. - It would also enable users to set up unique challenges such as scanning a QR/Bar code, solving simple mathematical questions of varying difficulty or shaking the phone to dismiss the alarm. - Set up end-to-end testing using GitHub Actions to ensure that the application does not break in Android or iOS. Additionally, if time permits, I'd also like to work on the following features: - Implementing some other features such as showing the weather forecast or motivational quotes on the dismissed screen. - Making an option to allow users to set quick alarms (alarms relative to the current time, say 10 minutes from now) with intervals (say 6 alarms at an interval of 10 minutes between 10:00 AM and 11:00 AM) Plan of Implementation To implement the core functionalities, I will set up the application as a foreground service which will ensure that the alarms set will persist through reboots. The unique features such as conditional alarms or dismissal challenges can be implemented using open source packages such as weather, location, and so on.",https://summerofcode.withgoogle.com/programs/2023/projects/c7GIl1mf
Interface to interact with Brickschema,Riley Wong,https://gist.github.com/rileywong311/c5dd453740ac7e80107398032698b081,"Thomas Krijnen, Moult",BRL-CAD,"python, sparql, IfcOpenShell, Blender API, Brickschema, Resource Description Framework","big data, BlenderBIM, Building Information Modeling, Industry Foundation Classes, Smart Buildings, Building Management and Control Systems, BrickSchema","While Industry Foundation Classes (IFC)—the leading international standard for exchanging building data—offers generic descriptions for smart building equipment relationships, the BrickSchema semantic structure makes the format more scalable, simplistic, and fine-tuned. This project intends to further bridge the IfcOpenShell and BrickSchema open-source communities and shared mission to evolve the common exchange of building information. By upgrading the bare-bones BrickSchema module in IfcOpenShell’s Blender addon, BlenderBIM, this project will allow users to seamlessly edit Brick entities and relationships. Features include entity editing, feed relationship editing, undo/redo support, and save-to-file utilities. This is particularly important to the continued management phase of a building’s life cycle, so this project will contribute to BlenderBIM’s coverage over building lifetimes. Furthermore, although the IFC and Brick schemas exist separately, there is continued industry interest in utilizing IFC to enhance the granularity of BrickSchema—the project aims to contribute to this endeavor.",https://summerofcode.withgoogle.com/programs/2023/projects/bSgYCNuV
Tensor Execution engine on GPU,Rishabh Ballabh Singh,https://bitbucket.org/rishabhballabh/fasttensor/src/master/,"Bin, John Wu",UC OSPO,"github, c++, GPU Programming, GPU architecture","analytics, data management","My project proposal aims to optimize the FasTensor tensor computing library to work efficiently on GPUs to enable efficient tensor contraction while maintaining the structure-locality of tensor data. This project involves creating custom-defined computational operations on GPUs and is essential for many scientific applications, including advanced AI model training. My expected deliverables include a working implementation of FasTensor on GPUs, a report on the performance of the execution engine, and documentation of the execution mechanism. My implementation plan involves using a combination of programming languages, including C++ and CUDA, and managing memory and data movement efficiently. My project timeline includes research, planning, implementation, testing, documentation, and reporting. I have a relevant academic background and professional experience in software engineering and machine learning.",https://summerofcode.withgoogle.com/programs/2023/projects/1fYINR6E
Hacking the Blockchain: Building Web3 Challenges for OWASP Juice Shop,Rishabh Keshan,https://medium.com/@rishabhkeshan/google-summer-of-code-2023-building-web3-challenges-for-owasp-juice-shop-c821efcba161,"ShubhamPalriwala, Björn Kimminich",OWASP Foundation,"node.js, materialui, angular.js, Express, Solidity","penetration testing, blockchain, Web3","Juice Shop is an intentionally vulnerable web application designed for practicing security testing and improving security skills. Blockchain technology is becoming increasingly popular with adoption coming in within large MNCs as well, and there is a need for security experts who can test blockchain-based applications. This proposal aims to integrate blockchain-based challenges into Juice Shop to provide an opportunity for users to learn about blockchain technology and its security aspects in a fun way. As part of GSoC 2023, The aim is to integrate multiple blockchain based challenges including plain smart contracts to NFT based contract vulnerabilities into Juice Shop starting from very beginner level challenges to covering a few advanced challenges. I will be adding: 2 Easy 2 Medium 1 Difficult challenges as part of this GSoC.",https://summerofcode.withgoogle.com/programs/2023/projects/yabiWLkF
eRPC : An efficient Relay Partition Checker,Rishad Baniya,https://gitlab.torproject.org/rishadbaniya/erpc,GeKo,The Tor Project,"rust, arti_client","security, network, anonymity, Tor","Within a Tor Network, there are different computers which we term as ""Relay"" which creates a circuit(path) in a Tor Network, so that the user can surf the internet Anonymously. If these Relay's cannot communicate with each other, they seriously affect the Tor Network and the performance of the Network degrades, which ultimately affects the anonymity, bandwidth, latency the Tor Network aims to provide. My proposal aims to create a tool called eRPC(An efficient Relay Partition Checker), that can be used to scan for partitions among these Relays and provide an output that can be used to visualise the data further, so that the condition can be monitored properly.",https://summerofcode.withgoogle.com/programs/2023/projects/1EXXf3b5
Admin UI redesign,Rishav Jha,https://github.com/rishav-jha-mech/GSoC-2023,"Peter Harrison, anwersayeed, muskan399",The Palisadoes Foundation,"bootstrap, json, css3, graphql, typescript, react js, Node JS, express js","graphql, Frontend Development, Backend Development","The proposal suggests redesigning the UI of Talawa-Admin to make it more intuitive and user-friendly. The new design should be deployed incrementally and should be reactive to all screen sizes. The layouts should be coded in Typescript and standardized templates should be created for commonly expected functions. The expected outcomes include improved workflows for managing multiple organizations, CRUD activities, filtering people and tags, viewing organization events, requesting volunteers at events, doing event check-ins, and managing pinned posts on the newsfeed. The proposal also suggests adding a properly documented design system and style guide to the Talawa-Docs repository.",https://summerofcode.withgoogle.com/programs/2023/projects/FpVgaLtg
Serial Chapter Launch,Rishi Kejriwal,https://docs.google.com/document/d/1L375JW9zJgQSeJNYTYUXfIgayfv5ZRvyKr9GzaXxF4I/edit?usp=sharing,"Sahil jhangar, Nikhil_Agarwal",Oppia Foundation,"python, html, angularjs, css, angular, typescript",web,"The aim of the project is to implement launching of chapters incrementally and sequentially, to avoid the large time gap when publishing a topic as a whole. The curriculum admins can stay updated with the chapter publication notifications, and the learner can also identify the upcoming and newly published chapters, as well as subscribe to the new launches in a topic.",https://summerofcode.withgoogle.com/programs/2023/projects/7U1JV9n0
Adding moderation tool in Tokodon project under KDE,Rishi Kumar,https://community.kde.org/GSoC/2023/StatusReports/RishiKumar,Carl Schwan,KDE Community,"c++, qt, qml","Administration, Moderation","This project aims to enhance the functionality of Tokodon by integrating moderation tools which will allow moderators and administrators of Mastodon instances to efficiently manage their communities through the easy-to-use interface of Tokodon. This project aims to provide Mastodon instance owners with a comprehensive suite of admin tools, making Tokodon a more versatile and usable tool for the fediverse moderators.",https://summerofcode.withgoogle.com/programs/2023/projects/sGepI44u
Bypass assembler when generating LTO object files,Rishi Raj,https://github.com/rsh-raj/gcc-gsoc-submission/tree/main,"Martin Jambor, Jan Hubicka",GNU Compiler Collection (GCC),"c, c++, ELF","gcc, LTO","Link Time Optimization (LTO) enables GCC to dump its internal representation (GIMPLE) to disk so that a single executable can be optimized as a single module. The current implementation creates an assembly file, and the assembler is used to create the final LTO object file. This project aims to create Link-time-optimization (LTO) object files directly from the compiler to improve compile time performance significantly by bypassing the assembler. The GCC's LTO infrastructure has matured enough to compile large real-world applications. Thus, this project will significantly reduce their compile time once completed.",https://summerofcode.withgoogle.com/programs/2023/projects/1CgxstnB
Commons Android app: Make upload more reliable,Ritika Pahwa,https://medium.com/@RitikaPahwa4444/commons-android-app-make-upload-more-reliable-cb99ac2893ff,"Kaartic Sivaraam, Nicolas Raoul",Wikimedia Foundation,"android, java, kotlin, sql","database, ui, ux","Wikimedia Commons is an Android app that enables users to upload and view pictures from their Android phone/tablet on the Commons server. This project aims to fix uploads related issues and deal with location metadata loss. I plan to solve each issue by following various hints provided by the mentors and figuring out the potential points of failure in each of them. Deliverables: Report/Blog on findings, fix bugs, write/modify corresponding unit tests Issue #5196: Picture location is sometimes lost despite being present in EXIF Possible Implementation Strategy: Based on the hints provided, a number of scenarios can be analysed and the location loss may be fixed depending on the case. Issue #5128: Upload often fails, especially when uploading 5 or more pictures over a slow Internet connection. Possible Implementation Strategy: As described in the issue, the network parameters need to be experimented upon, and a retry loop may be incorporated. Issue #5136 (if time allows): Retried uploads stuck in queued state Possible Implementation Strategy: As observed by some users, the uploading process gets resumed when a new upload is performed. This means that the STATE_QUEUED needs to be updated appropriately to the same state as that of a new upload once the internet connectivity resumes/the paused uploads are started again.",https://summerofcode.withgoogle.com/programs/2023/projects/S9pg398q
MXMNet Model Implementation for DeepChem,RiyaSingh,https://medium.com/@riya-singh28/google-summer-of-code-2023-60391fda5a35,"Bharath Ramsundar, Vignesh, Aryan Amit Barsainyan",Open Chemistry,python,"machine learning, deep learning, cheminformatics, Graph Neural Network, Message passing neural networks","The DeepChem project aims to create high-quality, open-source tools to democratize the use of deep learning in drug discovery, materials science, quantum chemistry, and biology. Among its suite of various machine learning models, it has a wide variety of graphs-based neural network model implementations aimed to solve the applications such as predicting the solubility of small drug-like molecules, binding affinity for small molecules to protein targets, analyzing protein structures, and existing useful descriptors. This project seeks to bring a new tool to the DeepChem suite for solving message passing problems based on the recent advancements in the GNNs research. The project aims to implement a Multiplex Molecular Graph Neural Network (MXMNet) model, a Graph Neural Network (GNN) to Deepchem.",https://summerofcode.withgoogle.com/programs/2023/projects/TFXdEVvm
VLC iOS UI Update,Rizky Maulana,https://medium.com/@rizkymaul/my-experience-in-google-summer-of-code-2023-for-videolan-1ed806526cf2,Felix Paul Kühne,VideoLAN,swift,"graphics, user interface","This proposal purpose is for an introduction regarding me and my personal experience, and my plan to contribute for VLC, more specifically VLC-ios on it’s UI department. The goals is to catch up with the Android version of VLC in term of User Interface and features.",https://summerofcode.withgoogle.com/programs/2023/projects/jH7kVZNM
Develop a language pair for Highland Puebla Nahuatl (azz) and Western Sierra Puebla Nahuatl (nhi),Robert Pugh,https://github.com/apertium/apertium-azz-nhi,"Kevin Brubeck Unhammer, Francis Tyers",Apertium,"python, hfst, lttoolbox","machine translation, language technology, rule-based nlp","My idea is to develop a language pair for Highland Puebla Nahuatl (`azz`) and Western Sierra Puebla Nahuatl (`nhi`). Both are endangered variants of Nahuatl (`nah`, but different branches), and are in contact where they are spoken. `azz` is a higher-resource language with publications and government materials, whereas `nhi` is substantially more endangered with only some short stories available. There are monolingual repositories for both, so I'm interested in developing the bilingual dictionaries and transfer rules. This would really nice to have, especially since speakers of both languages often live in the same or neighboring areas, and there is interest in being able to translate materials from one variant to another.",https://summerofcode.withgoogle.com/programs/2023/projects/tREcCymk
PyLops: MPI backend for distributed inverse problems,Rohan Babbar,https://gist.github.com/rohanbabbar04/8d3b957fd359c4c14d1d3882b38967f9,"Yuxi Hong, mrava87",NumFOCUS,"python, sphinx, numpy, Pytest, CuPy, mpi4py, pylops",MPI Programming,"Pylops has been developed to solve large-scale inverse problems. Keeping in mind the memory size of a single machine, there is a need to perform the operations in a distributed fashion. The main goal of this project is to use the mpi4py package to exchange messages between different processes across distributed memory. The main outcomes of this project are to develop a DistributedArray class using mpi4py to broadcast or scatter numpy/cupy arrays and perform basic operations like sum, product, dot-product, element-wise product, etc in a distributed fashion. Additionally, MPI functionality will be added to BlockDiag, VStack, and HStack, and the code for forward, centered, and backward finite difference stencils will be updated using Distributed Arrays. Lastly, at least one of the CG, CGLS, and LSQR solvers will be modified to use Distributed Arrays. This will benefit the Pylops Codebase as integrating mpi4py into the codebase will enhance the operators' performance and prevent exceeding memory on a single machine.",https://summerofcode.withgoogle.com/programs/2023/projects/eNJTJO25
GitHub Actions - Optimizing CI Pipeline and Utilizing the Whole Docker Stack for Testing,Rohan Sasne,https://medium.com/@rohansasne30/gsoc-23-report-github-actions-pecan-project-b5a7feace163,Rob Kooper,PEcAn Project,"docker, YAML, GitHub Actions","automation, cloud, docker, CI/CD","Worked on optimising the CI pipeline, After reconfiguration and optimisation of the pipeline, I was successfully able to reduce the time taken for building by more than 70%. Created several Github Actions to automate nearly 60% of the tasks which were previously done manually and optimised the unnecessary use of resources to a large extent Successfully brought up the whole system against the full docker stack Fixed the API’s to connect in all environments on any runner machine",https://summerofcode.withgoogle.com/programs/2023/projects/etmBQV5Q
AI Model Service Auto Selection by Modality,Rohan Satya Isaac,https://rohanisaac.blogspot.com/2023/08/google-summer-of-code-2023-ai-model.html,sunbiz,LibreHealth,"python, java, flask, pytorch","computer vision, deep learning, radiology, Object Detection, Segmentation, Classification, Health Care","The LibreHealth Radiology AI Model service aids radiologists with AI to produce fast and accurate medical diagnoses. It communicates with LibreHealth RIS module to output labels on DICOM viewer. Currently, CheXnet model is integrated to the AI Model service, but the proposal expands to apply other models to imaging modalities like Mammo, Head CT, Abdomen CT. The project aims to understand what radiologists need in terms of AI and implement it. The goal is to help radiologists perform better by implementing algorithms for new imaging modalities. To tackle the problem we start by looking at research that have looked deep into model architectures and methods that work well with imaging modalities, for example Alexnet have proven to work on modalities like Head CT. We then collect the imaging data necessary to train out models and also decide on the method of training like transfer learning on pretrained models or do we go ahead with training a model from scratch. Appropriate feature engineering and tuning will be part of the problem solving process. Once we establish a model to perform well on a modality we proceed to integrate the model to the AI Model service application. The deliverables will include - Collate information on data sources, methods and models that will be used for implementation and review with mentor(s) - For any modality, start with data preparation, feature engineering, training and evaluation until satisfactory performance is achieved. Here we will trial different augmentation techniques and hyperparameter tuning methods. - Integrate the model inferencing code and retraining code to the application for all modalities - Add methods to the Flask API to appropriately call the specific AI model for a modality. Modify existing methods as necessary so as to include the new AI models - Perform unit tests, integration tests, functional tests and end to end tests for the implementations. Necessary coding standards will be used.",https://summerofcode.withgoogle.com/programs/2023/projects/iAPnNANk
QT Widgets Improvements,Rohit Bisht,https://www.gnuradio.org/blog/2023-08-28-GSoC-2023-Complete-Journey/,"Håkon Vågsether, noc0lour",GNU Radio,"python, c++, qt","software development, qt","The project's aim is to improve GNU Radio's gr-qtgui component, which offers QT widgets for signal viewing. This project is broken down into a number of smaller projects, some of which involve adding new widgets like the compass display, MPEG display, and matrix sink, as well as strengthening the existing widgets by improving their code structures, making them more extendable, and reducing redundant code. The project additionally intends to enhance the gr-qtgui component's user interface by making it more understandable and user-friendly and by giving the user more power and customisation choices. In order to enable the creation of complete GUI applications from GRC, the project also entails the integration and support for QT Creator and QML design.",https://summerofcode.withgoogle.com/programs/2023/projects/qsfXdcom
Falco: Web IDE for Security Rules with WebAssembly,Rohith Raju,https://github.com/Rohith-Raju/Gsoc-2023,Jason Dellaluce,CNCF,"javascript, c/c++, react","security, webassembly, Rule-based systems","This project aims to improve Falco's capabilities by adding WebAssembly as a new officially-supported compilation target. The objective is to create a new development environment for security rules in a web single-page application, allowing Falco to run directly inside the browser. The goal is to provide a more versatile and user-friendly tool for developing and testing security rules. The plan is to leverage the Emscripten toolchain to accomplish this. The result will be a web-based application similar to the Go Playground, but without requiring any backend. The deliverables will include a fully functional development environment, a detailed guide for using the application, and documentation for the project.",https://summerofcode.withgoogle.com/programs/2023/projects/urIdU9OC
[PySAL - spopt Development] P-Median Model with Near-Far Cost Allocation: Guided by Tobler's Law,Rongbo Xu,https://github.com/rongboxu/P-Median-Model-with-Near-Far-Cost-Allocation,"Levi John Wolf, James Gaboardi, Serge Rey, Qunshan Zhao, Germano Barcelos dos Santos",NumFOCUS,python,Spatial data modelling,"For now spopt has implemented several basic facility location models, providing the free open source for researcher, or organizations to use. However, there are still many useful improvements can be made. This proposal suggests improving the spopt package by implementing the P-Median model with Near-Far Cost Allocation. In the article by Church (2018), it proposed a new p-median model which can distinguish between near and far facilities, use both explicit and implicit variables for capacity allocations. Based on that, the writer plans to implement the p-median model with near-far cost allocation. By this, the spopt package can provide more accurate and efficient solutions to spatial optimization problems, typically for the problems with large data points, and large demand volume. This proposal will introduce the reason why the writer chooses this project, the technical details of this project, and the plan and delivery schedules.",https://summerofcode.withgoogle.com/programs/2023/projects/05jDO3IG
DBpedia Search API enhancement (SANTé),Ronit Banerjee,https://gist.github.com/ronitblenz/a7cde9b621e96a396cec2f74085843a2,"Edgard Marx, Paulo do Carmo, Ashutosh Kumar, Lahiru Oshara Hinguruduwa",DBpedia,"java, rdf, sparql, OWL, Reconciliation API, Lookup API, Knowledge Graph","semantic web, API Enhancement","This project aims to enhance the SANTE search API of DBpedia, a popular knowledge graph that provides structured data extracted from Wikipedia. The SANTE search API is an important component of DBpedia that enables users to search and retrieve information from the knowledge graph using natural language queries. However, like any search engine, the performance of the API can be improved by optimising the underlying technology, data quality, and user experience. Therefore, this project will focus on enhancing the search API by incorporating various techniques such as data quality improvement, indexing optimisation, query parsing enhancement, incorporation of external knowledge sources, relevance feedback, and the use of machine learning techniques. These enhancements will improve the accuracy, efficiency, and usability of the SANTE search API, making it a more valuable tool for knowledge discovery and information retrieval. There are several knowledge bases currently published in RDF format and exploring this information is still challenging for non-RDF neither SPARQL users. DBpedia-Search aims at facilitating information navigation, exploration, and seeking through DBpedia Knowledge base with natural language queries. This GSoC project consists of enhancing DBpedia Search APIs by including tests, benchmarks, and additional functionalities.",https://summerofcode.withgoogle.com/programs/2023/projects/XXtxuRIj
Search page for the Internet Yellow Pages,Roopesh Saravanan,https://roopeshsn.com/bytes/gsoc-2023-final-report,"Romain, Malte Tashiro",Internet Health Report,"python, javascript, neo4j, vue.js","web, networking, internet, data analytics","The users of IHR fall under the category of students, educators, professionals, network operators, policymakers, and researchers. The goal of this proposal is to visualize the internet resources through Internet Yellow Pages (IYP), which acts as an end-to-end solution for stakeholders to work on. Currently, IYP has data related to AS, IXP, Peer ASes, Sibling ASes, Countries, URLs, etc. The data can be visualized through tables, charts, and graphs (wherever possible) so that users can access much information. For example, a lot of information can be visualized about an AS including its Prefixes, IXP, Peer ASes, Sibling Ases, etc. I propose to develop a search page for the Internet Yellow Pages which is self-exploratory. The search page would let the user select either AS, Country, and IXP and correspondingly render tables, charts, and graphs to visualize the entity.",https://summerofcode.withgoogle.com/programs/2023/projects/jmLW9PFH
wlroots presentation scheduling,Rose Hudson,https://blog.krx.sh/gsoc23/final/,emersion,X.Org Foundation,"c, wayland","desktop, compositing, low latency","wlroots would benefit from a smarter frame schedule that reduces waiting between client commits and compositing, and between compositing and scanout. By learning how long rendering takes from previous frames, the compositor can adjust its schedule so that so that more user inputs can be collected without missing the render deadline. This project will implement frame scheduling in wlroots and adaptive logic for adjusting the schedule automatically, so that many Wayland compositors can benefit from lower latency.",https://summerofcode.withgoogle.com/programs/2023/projects/vRcNkDIJ
Invariant and Equivariant Quantum Graph Attention Transformers for HEP Analysis at the LHC,Roy T. Forestano,https://royforestano.github.io/blog/2023/2023-gsoc-ml4sci-qmlhep/,"Amey Bhatuse, KC Kong, Alkaid Cheng, Rui Zhang",Machine Learning for Science (ML4SCI),python,"machine learning, deep learning, nlp, quantum, transformer, CNN, graph, RNN, GNN, ENN, INN, Invariant, Equivariant, Convolutional, Attention, Attention Network","Machine learning algorithms are heavily relied on to understand the data generated at the European Council for Nuclear Research's (CERN) Large Hadron Collider (LHC) which produces immense amounts of data through the measurement of the products of particle collisions. Since data from these events can typically be formed into a graph structure, deep geometric methods, such as graph neural networks (GNNs), have been used as an approach to various HEP anlysis tasks. One such task is jet tagging, where jets are viewed as point clouds with distinct features and edge connections between their constituent particles. To enhance the validity and robustness of deep networks, embedded symmetries, which are present in many physically realizable datasets and fundamental physical theories, can also be discovered by the model through the use of invariant I(n) and equivariant networks E(n). However, due to the increasing size and complexity of these datasets, as well as the models which process them, an involved yet computationally inexpensive approach must be utilized. To handle an increase in the complexity of the data, I suggest the implementation of a classical attention (AT) transformer with the necessary modifications to incorporate, invariant or equivariant, and GNN layers. As the extension of classical algorithms via bit-wise processes to quantum algorithms via qubit-wise processes has been rapidly developing over the last few years, I propose the full development of general quantum invariant and equivariant graph attention transformer (QIGAT or Quantum Informer, QEGAT or Quantum Equiformer) architectures to meet the demands of requiring these machine learning algorithms to offer enhanced robustness through the adherence to fundamental physical principles while reducing their computational cost.",https://summerofcode.withgoogle.com/programs/2023/projects/1ERZ3hp2
Chatbot Interface for Drupal Documentation and Contributor Onboarding,Royal Simpson Pinto,https://medium.com/@royalpinto007/work-report-google-summer-of-code-2023-journey-with-drupal-146e91dd88fc,Yash Goel,Drupal Association,"javascript, html, php, css, drupal","web, cms, drupal module, drupal block","Developed the Drupal-Chatbot Module, delving deep into the Drupal ecosystem to create a module and block from scratch. This collaborative effort with a mentor and fellow developers led to the establishment of a user-friendly chatbot interface for Drupal documentation and contributor on-boarding. This interface provides interactive guidance for navigating intricate documentation, making it easier for new contributors to engage, and ultimately contributing to the accessibility and innovation of the Drupal community.",https://summerofcode.withgoogle.com/programs/2023/projects/V6n2jJa5
Geodesic Distance Computation Improvements,rp01052,https://github.com/CGAL/cgal/issues/7670,Mael,CGAL Project,"c++, git, CGAL","computational geometry, Discrete Geodesics, Propagation Algorithms","The goal of the project is to add the ""Virtual Source Propagation"" (Trettner, Bommes, Kobbelt 2021) algorithm to CGAL. This algorithm finds approximate geodesic paths and distance by propagating virtual geodesic sources along the mesh. By the time of the midterm evaluation, we intend to have a working algorithm, some tests and first optimisations. During the second coding phase, we want to further optimise the code and add CPU parallelisation. Afterwards, all the geodesic paths computation methods will be compared in term of accuracy, speed and how they scale with the mesh size and geodesic length so that CGAL users can choose the algorithm that is the best fit for their problem.",https://summerofcode.withgoogle.com/programs/2023/projects/Smrl9uML
Python Bindings for d-SEAMS under the PSF,Ruhila,https://gist.github.com/RuhiRG/9a33441072660bd62b987f77b9d88367,"czgdp1807, Rohit Goswami, Amrita Goswami",Python Software Foundation,"python, c++, meson, Pybind11","interoperability, molecular dynamics, Bindings, Library design","d-SEAMS currently uses an embedded Lua interpreter to provide user interactivity in tandem with YAML inputs for selecting workflows. The project seeks to replace this interface with a Python interface. This is expected to take place in two stages: - Replacing the Lua Interpreter with Python - Binding to C++ classes and functions directly With both of these milestones completed, feature parity will be kept with the existing code while also providing much more flexibility due to the Python library formed in the second deliverable.",https://summerofcode.withgoogle.com/programs/2023/projects/WAft7HXq
AI Code Completion for Apache Beam Java SDK.,Saadat,https://docs.google.com/document/d/e/2PACX-1vThb7Ig7i7SbjLNGSVpqeyYNiWf93E37U7PiX2dyYBiQfr5iyxaFJ88_TJXXpEpycjZC7REaIi5BNju/pub,Pablo E,Apache Software Foundation,"python, java, gradle","machine learning, generative AI","Currently, Beam has code completion plugins for Python and Golang SDKs in JetBrains IDEs. For example, Pycharm has a plugin called Alabaster that suggests beam transforms after typing a pipe character. However, IntelliJ IDEA does not have code completion for the Beam Java SDK. In this project, I will implement an IntelliJ Plugin to auto-complete beam transforms for Java SDK users using a Starcoder Language Model.",https://summerofcode.withgoogle.com/programs/2023/projects/rXHePT06
Support basic Sensor Things Api (STA) in istSOS,Saail Narvekar,https://saailn.github.io/Saail_GSoC23/,"Maxi, danistrigaro",OSGeo (Open Source Geospatial Foundation),"python, postgresql, FastAPI, postgREST","web, gis, OGC service, STA","The goal of my project is to add OGC standard of Sensor Things API(STA) to istSOS project. The OGC SensorThings API provides an open, geospatial-enabled and unified way to interconnect the Internet of Things (IoT) devices, data, and applications over the Web. The project aims to extend interoperability and implement some of the basic APIs from STA that could be adopted in a new revised version of istSOS. FastAPI can be used for the request and response of the istSOS STA services. As PostgreSQL is used as the primary data store or data warehouse in istSOS project, data can be managed using postGIS which is a spatial database extender for PostgreSQL object-relational database. PostgREST is a standalone web server that could be used to turn the PostgreSQL database of STA data directly into a RESTful API. Finally the STA service can be integrated with the istSOS project.",https://summerofcode.withgoogle.com/programs/2023/projects/TmvBTqrE
CB Geo: Differentiable Programming in MPM,Sachin Jalan,https://sachinjalan.github.io/,"KrishnaK, Chahak Mehta",NumFOCUS,"python, c++, Jax","machine learning, Material Point Method","CB Geo-Material Point Method is used to simulate particulate and fluid systems. In this method, particles are mapped to a background mesh, and calculations done on the mesh points are transformed into the original particles. In this project, we would implement 1-D and 2-D MPM code in python using the JAX library. We will abstract the code into classes to apply automatic differentiation and use just-in-time compilation. We will also implement 1D MPM code in C++ and apply auto diff. Currently, the MPM code does not have an inverse problem solver; hence in this project, we will implement an inverse problem solver using automatic differentiation and gradient-based optimizations to minimize the loss function.",https://summerofcode.withgoogle.com/programs/2023/projects/RZJ09HkH
GUI representation of monitoring System Activity with the system_stats Extension in pgAdmin 4,Sahil Harpal,https://github.com/Sahil1479/GSoC-23,"Khushboo, Aditya Toshniwal",PostgreSQL,"python, javascript, flask, sql, css, react js","web, data visualization, analytics",This project involves design and developing dashboard in pgAdmin 4 which shows the system level statistics for monitoring Postgres activity with the help of the system_stats extension. The system_stats extension is a library of stored procedures that allow users to access system-level statistics for monitoring Postgres activity. These procedures reveal a variety of system metrics to the database server.,https://summerofcode.withgoogle.com/programs/2023/projects/FHOwG5SU
Updating Appleseed: Python 3 and Dependencies,Sai Abhiram Alluri,https://brlcad.org/wiki/User:Abhiram/GSoC2023/Report,Morrison,BRL-CAD,"python, c++, boost, pyqt","application, update, codebase","The goal of this project is to update the Python codebase for Appleseed from Python 2 to Python 3 and update the PyQT code and GUI to PyQT6. This update is necessary to ensure that Appleseed continues to function correctly and avoid potential issues that may arise due to Python 2's deprecation. The project will include updating the Boost C++ Libraries to the latest version and ensuring compatibility with other dependencies, including OpenEXR, OIIO, Embree, and Qt. Updating Appleseed to Python 3 may affect some of its dependencies, including Boost, PySide/PyQT, PIL, and other Python dependencies. Overall, this project will help ensure the long-term sustainability of Appleseed by modernizing the codebase and improving the user experience.",https://summerofcode.withgoogle.com/programs/2023/projects/CZitD7g2
aris - Add a web user interface to GNU Aris,Saksham Attri,https://github.com/kovzol/aris/pull/15,"Zoltan Kovacs, AndreasEbets, Alexander Thaller",GNU Project,"javascript, qt, html, webassembly, Emscripten","education, web, logic","The project aims at extending GNU Aris by adding a web user interface. It involves some design changes in the GUI and migrating the current GTK based UI to Qt. Consequently, a WebApp based on HTML, Javascript and WebAssembly will be developed.",https://summerofcode.withgoogle.com/programs/2023/projects/DV8XVm5g
Red Hen Anonymizer,Saksham Gautam,https://medium.com/@gautamsaksham103/google-summer-of-code-final-report-72f31ac9a1aa,"Mark Turner, Peter Uhrig, Daniel Alcaraz Carrion",Red Hen Lab,"python, javascript, django, opencv, html, css, pytorch","computer vision, deep learning, security and privacy, Anonymization engine","The Red Hen Anonymizer is a software that uses deep learning and signal processing techniques to anonymize audio-visual data. The proposed project aims to expand the software’s capabilities by adding two new features for visual data anonymization, namely Level Wise Anonymization and Anonymization using StarGANv2. Additionally, the project proposes to add a new feature for audio data anonymization, namely Anonymization According to the Anonymized Face, while retaining the existing features. The new algorithms are based on deep learning and require GPU power for training. The objective is to create a versatile and robust software, with a user-friendly interface. The final deliverable will be a complete anonymization engine integrated into a web application, providing users with a convenient one-click anonymization options that meets their specific needs.",https://summerofcode.withgoogle.com/programs/2023/projects/zruME4ga
Arti API exploration to build example tools,Saksham Mittal,https://gotlou.srht.site/gsoc-final.html,Nick Mathewson,The Tor Project,rust,networking,"Some programs should be created and curated using Arti to illustrate to other developers how they can use its APIs and to also find bugs. This includes 3 example programs to let developers get their feet wet with Arti and 2 bigger projects which would have a legitimate, production use case and can benefit from all that Arti provides, even in its current infancy. There will also be documentation improvements made, especially to APIs that these example projects rely on, in order to more directly contribute upstream to Arti.",https://summerofcode.withgoogle.com/programs/2023/projects/UXQdBvLj
Extending the data structures and algorithms along with providing C++ backend.,Sakshi Oza,https://gist.github.com/sak-codes/2c2d948f8ec285360247db6606cb4ad3,"Saransh Chopra, czgdp1807, Smit Lunagariya, Ivan Ogasawara, Alex de Siqueira",NumFOCUS,"python, c++","algorithms, data structures","PyDataStructs is a high-performance python package for data structures and algorithms providing C++ backend via Python C-API as well as a parallel computation that provides lightning performance. a) Single package for all data structures and algorithms. b) Consistent APIs and Clean Interface. c) Supported on all three platforms - Windows, macOS, and Linux. I aim to work on the following during the project duration - 1) Increase the scope of missing data structures and algorithms 2) Adding methods to current data structures to extend their support in other research and engineering backgrounds 3) Implementing the C++ backend to provide high performance 4) Enhancing the documentation for make it more user friendly and easy to follow 5) Aggressively test the newly added as well as the existing code to achieve 100% coverage which currently is at 99%.",https://summerofcode.withgoogle.com/programs/2023/projects/42ye2zYO
Automation tools for LibreMesh firmware build and monitoring,samlo,https://gitlab.com/a-gave/libremesh-ansible-playbooks,"Ilario Gelmetti, stefca",freifunk,"prometheus, grafana, openwrt, ansible, LibreMesh","monitoring, automation, firmware","Create a set of automated tasks to install services on a Raspberry Pi to meet the needs of small community-network with an administration/tech team, e.g. a set of commonly needed monitoring tools, such as Prometheus, Prometheus-node-exporter, Blackbox-exporter, Altermanager, Grafana, VPN and an editing map service. Create a set of tasks to replicate the OpenWrt build-system, to provide a reproducible and automated set of instructions, to speed-up the process of self-building images for OpenWrt and/or LibreMesh for newcomers, and to easily setup a dedicated machine. These Ansible roles would include tasks to build for: different architecture and targets, different Openwrt and Libremesh versions, keeping trace of devices with specific packages or particular needs and related patches; keeping a local list of supported targets. With the possibility to later extend the process of build to other automated tasks, like a pub-keys-exchange needed for configuring a VPN, update documentations, or to update the configurations of monitoring services.",https://summerofcode.withgoogle.com/programs/2023/projects/JXudSn3E
Creating a reproducible VRS mapping and validation library for MaveDB,Samriddhi Singh,https://docs.google.com/document/d/1EUEP5cK7HewCuROnYepY4AOAKoT59CJOZr9tJGWRM5Q/edit?usp=sharing,"Alan Rubin, Alex H. Wagner, PhD",Global Alliance for Genomics and Health,"python, Relational Databases","bioinformatics, genetics","The aim of this project is to make it easier to use MaveDB datasets for clinical use, as most of the MaveDB datasets are not annotated in a way that allows them to be combined with other genomic data. Datasets in MaveDB will be mapped to the human genome using the GA4GH Variant Representation Specification (VRS). This can be achieved by mapping sequences using alignment algorithms, transforming the results into VRS objects, and validating the results.",https://summerofcode.withgoogle.com/programs/2023/projects/DM4cjHXv
Implementing Scalable Bayesian Optimization in Julia,Samuel Belko,https://blog.belko.xyz/posts/BayesianOptimizationGSoC23/,Johanni,The Julia Language,julia,optimization,"The main task of this project is to implement a modern Bayesian optimization method TuRBO in Julia, extending BayesianOptimization.jl package. The implementation will be based on paper [1]. It will be well tested, documented and integrated into the above mentioned package. The Julia ecosystem and open source community will benefit from this project in various ways since solvers are a key technology used by many methods from the applied sciences. For instance, as mentioned in [1], Bayesian optimization can be used for hyperparameter tuning in machine learning, calibrating a simulator to real world data, chemical engineering and materials discovery and many others. [1] David Eriksson, Michael Pearce, Jacob Gardner, Ryan D Turner, and Matthias Poloczek. Scalable global optimization via local bayesian optimization, 2019",https://summerofcode.withgoogle.com/programs/2023/projects/oJe84fwV
Deriving planetary surface composition from orbiting observations from spacecraft,Sandeepan Dhoundiyal,https://medium.com/@dsandeepan995/gsoc23-with-ml4sci-deriving-planetary-surface-composition-from-orbiting-observations-from-46f81885c9be,ppeplowski,Machine Learning for Science (ML4SCI),"python, tensorflow","machine learning, Planetary Science","Multiple robotic spacecraft have been sent by NASA to collect orbital remote sensing data, which is used to analyze surface composition. Gamma-ray spectrometers are among the sensors used for this task. They collect position-dependent energy spectra whose shape is a function of the components from different elements present in the area observed by the sensor at a particular time. This data can be used to infer the relative abundance of each element (through a process called unmixing) and to map their distribution across a planet’s surface. However, accurately deriving abundance just from gamma-ray spectra is an intractable problem. Machine learning (ML) has been widely used to address intractable problems, including the unmixing of spectral signatures in the visible and near-infrared (VNIR) region of the electromagnetic spectrum. Therefore, this proposal outlines the development of an ML model for estimating elements from gamma-ray spectra. This goal consists of two sub-objectives: (i) identification of the best model/architecture using data from the Lunar Prospector Gamma-Ray Spectrometer (GRS); (ii) a trained model for estimating elemental abundances from GRS data.",https://summerofcode.withgoogle.com/programs/2023/projects/AVoivIHy
Customizable Appearance of Canvas Controls,sanidhyas3s,https://inkscape.org/%2Amembership/blog/customizable-canvas-controls/,"Mc, Ted Gould",Inkscape,"c++, css, Cairo, libcroco","ui, ux","The proposed project aims to improve the visual appearance of canvas controls like nodes and handles, which are currently very unappealing and outdated, by introducing a customizable CSS file that will specify the styles of the controls. A default CSS file will be shipped with Inkscape, which can be overridden by a user-customized CSS file. The technical implementation would involve parsing the CSS file through libcroco and rendering the controls using cairo. The project aims to write simple and extensible code improving upon the existing hard-coded implementation.",https://summerofcode.withgoogle.com/programs/2023/projects/t7Xn0iW6
Improving LORIS data platform,Sanjay Thiyagarajan,https://sanjay-thiyagarajan.github.io/GSoC/,"Christine Rogers, racostas, Laetitia Fesselier",INCF,"mysql, javascript, php, rest","api, web development, data management","Deliverables - Improving existing LORIS Codebase and API features, Write test cases for code changes - handling and serving the data efficiently, Develop additional features based on the need, Documentation for the new changes",https://summerofcode.withgoogle.com/programs/2023/projects/WZ4csMDW
Support Vespucci preset extensions in JOSM,Sarabjeet Sodhi,https://www.openstreetmap.org/user/Sarabjeet%20Sodhi/diary/402268,"Simon Poole, Taylor Smock",OpenStreetMap,"java, xml","geocoding, Geographic Information System","Vespucci, the Android editor for OpenStreetMap, uses the JOSM-compatible presets for tagging. Vespucci, however, has evolved to support far greater functionalities than those supported in JOSM. These functionalities include attributes like 'deprecated', which indicates a deprecated preset item, 'regions', and 'exclude_regions' for localisation, and 'value_type' to indicate the type of value, among many others. The project aims at adding these additional attributes to JOSM. Incorporating these attributes will provide a better user experience across the editors, improving the usability and functionality of JOSM.",https://summerofcode.withgoogle.com/programs/2023/projects/2ef3Fr1d
Backend System for Historical Audio Tour Application,SarahA,https://github.com/monum/history-tour-server,"Michael Lawrence Evans, Maddie Webster",Mayor's Office of New Urban Mechanics,"python, typescript, aws","web, api, civic tech","We want to build an audio tour application that highlights sites visible from MBTA's (Massachusetts Bay Transportation Authority) public transportation routes. Each tour consists of a mixture of crowd-sourced audio clips produced by Bostonians and MONUM's staff members. As the user moves along the route, the audio will automatically play based on their location. This project aims to research, design, and implement a backend system for this application, including the APIs the client will use and AWS infrastructure, managed with the AWS CDK, that will support those APIs (Lambda, API Gateway, DynamoDB, and S3).",https://summerofcode.withgoogle.com/programs/2023/projects/v3JUl21a
Updating the DeepLense Pipeline,Saranga Kingkor Mahanta,https://medium.com/@saranga.boo/updating-the-deeplense-pipeline-part-2-gsoc-2023-with-ml4sci-299a48d0dd23,"Yurii Halychanskyi, Michael Toomey, Anna Parul, PG Guan",Machine Learning for Science (ML4SCI),"python, pytorch, WandB","machine learning, computer vision, deep learning, anomaly detection, Regression, Classification","Studying the substructures of dark matter holds promise in solving the longstanding problem of determining the true nature of dark matter. By using strong gravitational lensing, it may be possible to gain insights into the fundamental properties of dark matter and its substructures. Advanced deep learning techniques can accurately identify images with substructures and distinguish between different models of dark matter, such as WIMP particle dark matter, dark matter condensates, superfluids, and vortex substructures. The DeepLense pipeline combines cutting-edge deep learning models with strong lensing simulations using lenstronomy. The project's goal is to train and test deep learning models with various architectures on new dark matter simulations (such as WDM and SIDM) to improve the previous classification, regression, and anomaly detection results of the DeepLense Pipeline.",https://summerofcode.withgoogle.com/programs/2023/projects/i3gCtDUx
Parameterized Packages for GNU Guix,Sarthak,https://github.com/cel7t/parameterized-packages.org,"g_bor, pjotrp",GNU Project,"guix, scheme, guile",package management,"Parameterized packages will provide users with a simple way to configure many aspects of packages, à la Gentoo USE flags. This project will add two new values to the Guix package record, ""parameters"" and ""parameter-transforms"" which will let package maintainers declare alternative versions of packages that will be built with or without specified features. For example, a user running Guix on a server may choose to build their packages without X11 and Wayland support, and they will now be able to do so easily with the help of these parameters. This project will also implement the logic and user interface for parameters, and specify a number of parameter symbols to serve as examples.",https://summerofcode.withgoogle.com/programs/2023/projects/heQYLzrz
Thumbnail preview when seeking,sashachka,https://medium.com/@aspasparagus/gsoc-2023-at-videolan-vlc-media-player-ba4c61831bc5,Thomas Guillem,VideoLAN,"c/c++, qt, qml","gui, VLC, Multimedia Player, Thumbnail preview","The idea is to add thumbnail preview on the UI while seeking. Tasks to be accomplished include: extend the preparser to take snapshot of a video every few minutes/seconds, and adding qt and/or macOS support: display the snapshot taken by the prepaser while seeking.",https://summerofcode.withgoogle.com/programs/2023/projects/5WkMXiJe
Expand the species search functionality for the ensembl beta website (Metazoa).,Satya.Adda,https://github.com/Asrst/taxon-search,"Jorge Alvarez, Sarah Dyer",Genome Assembly and Annotation,"python, mysql, django, elastic search","genome, search, Taxonomy","The objective of this project is to create a standalone Elasticsearch tool that can handle taxonomic-related requests. This tool helps to expand the Ensembl beta’s search functionality to include and support searching based on taxonomic information. In particular, to provide the users a list of close relatives when a given species is requested and it is not part of Ensembl (yet), return the list of species available given a taxonomic clade instead of a species name, or find a species even when a (homotypic) synonym is provided instead of its current scientific name.",https://summerofcode.withgoogle.com/programs/2023/projects/05i92ZEc
TypeScript Migration and UI/Integrations Improvements,Satyam Bansal,https://gist.github.com/sbansal1999/3fbd057945f8c1ec47de513e8fcf570a,punchagan,Zulip,"python, javascript, django, typescript","user interface, Type Checking, Migrations, integrations","The Zulip messaging app currently relies heavily on JavaScript, which lacks certain types and safeguards for developers. To improve the experience and speed of creating modules, the project aims to migrate to TypeScript, which provides missing types and additional safeguards. In addition to the migration, improving the UI and Integrations of the Zulip Web App could bring significant enhancements to the app.",https://summerofcode.withgoogle.com/programs/2023/projects/omRubSOY
Data Retriever: Tree health and mortality from NEON data,Satyam Sinha,https://gist.github.com/satsin06/e3bd59a5b69df7dc5b38cf848b8f5b8f,"Henry Senyondo, Ethan White, marconiS",NumFOCUS,"machine learning, Git/GitHub, Software Testing, Python and Python package deployment",machine learning,"The project aims to build a new function that populates the NEON field and remote sensing data for deepforest which will help us build a baseline classification for tree health status. NEON DATA API provides access to open-access ecological data where neonwranglerpy package helps in retrieving the data, cleaning, and providing a ready format for ecological analysis for researchers. With the help of this project, we will be able to train multi-class classification in deepForest. By this, we will improve the automated alignment of deepForest boxes to NEON individual tree coordinates, provided as stem location.",https://summerofcode.withgoogle.com/programs/2023/projects/HooCVkAe
Streamline Instructor Configuration of Automated Grading,saumyaborwankar,https://submitty.org/developer/google_summer_of_code/2023_Saumya_Borwankar,"Barbara Cutler, Matthew Peveler, Shail Patel, Jasmine Plum, Chris Reed, William Allen, Jensen Li",Submitty,"python, javascript, c++, php, postgres",web,"The overall UI design of Submitty can get a little overwhelming for the general public. Submitty is feature-rich but lacks simplicity for non-technical users navigating the application. The autograding feature of submitty is an important and mature feature allowing instructors to assign points for various checkpoints in the student-submitted code. All the autograding details are contained in a config.json file The autograding configuration is however a little difficult task for non-technical users. They have to make sure that the format is correct and that all the fields are valid, which can be overwhelming. Hence a GUI page can help more people be accustomed to designing their own configuration files. I am willing to introduce some more features in the GUI which will allow richer and greater engagement with the configuration file for the instructors. Additional features Add test cases automatically for programming/non-programming courses. Add plagiarism check of 2 types: 1) student vs student 2) student vs internet Verify if the config file created is valid or not Add a verification process for the input form text field Edit an already existing configuration file with the GUI interface. Deliverables GUI for technical and non-technical interface Plagiarism checker for all categories Additional features implementation (as discussed above) in the GUI Documentation and tutorials for all implemented features",https://summerofcode.withgoogle.com/programs/2023/projects/nwwlQpp7
Adding a menu to Scribe-iOS application and expanding keyboard languages,Saurabh Jamadagni,https://saurabhjamadagni.hashnode.dev/gsoc-23-final-work-submission,Andrew McAllister,Wikimedia Foundation,"swift, sparql, Figma, UIKit, Wikidata Query Service","machine learning, mobile","Scribe is a keyboard application for language learners. It sources its data from Wikidata. 1. Adding a menu to the application: - Currently, the Scribe application only displays the installation guide and a link to the open-source repository. - The design for the menu as seen in the figma file found in the repository of Scribe-iOS suggests the creation of multiple different screens that navigate to sections -- Installation, Settings, About and further sub-sections. - We can assume a simple navigation stack where the bottom most layer is the main ViewController. This is achieved using a NavigationController on the first view that is presented. 2. Adding more languages to the application - The data used by Scribe-iOS is generated and processed in the Scribe-Data project repository. - The deliverables here will include generating data for all the planned languages that need to be added to Scribe, cleaning and processing data to obtain language data files, creating and assigning corresponding files and variables in Xcode for all languages and user testing.",https://summerofcode.withgoogle.com/programs/2023/projects/Ai7B85Cp
CC LEGAL TOOLS: MACHINE READABLE LAYER,Saurabh K,https://github.com/0saurabh0/GSoC-23-Report,Timid Robot,Creative Commons,"python, django, RDF/XML, rdflib","web, XML, machine readable","The Creative Commons (CC) legal tools are composed of three parts: a legal code, a deed written in simple language, and a machine-readable layer. Unfortunately, the machine-readable layer has not been updated in some time and contains unresolved issues. To address this, the task at hand is to extend the CC Legal Tools App to generate deterministic RDF/XML files for all of the legal tools. This will bring the machine-readable layer up to date with current specifications and ensure that the legal tools are well-organized and consistent, also the end result will be an improved user experience and a more reliable and efficient system for those utilizing the CC legal tools.",https://summerofcode.withgoogle.com/programs/2023/projects/9m8Ttuvo
Optimizers in a deep learning framework,Saurabh Suresh Powar,https://gist.github.com/Spnetic-5/9d06fd264180693215757c811d0cf615,"Milan Curcic, Jeremie Vandenplas, Umashankar Sivakumar, Federico Perini, Henil Panchal, Damian Rouson",Fortran-lang,"Linear Algebra, Fortran-Lang",deep learning,"This project aims to enhance the capabilities of neural-fortran, a parallel Fortran framework for deep learning, by implementing additional optimization algorithms. While the framework currently supports training and inference of dense and convolutional neural networks using stochastic and mini-batch gradient descent optimizers, more versatile learning and training from a broader range of problems and datasets require the use of other optimization algorithms such as RMSprop, Adam, and others commonly used in popular deep learning frameworks like Keras. The project will also require work on implementing, documenting, and testing these optimizers, which will broaden the applicability of neural-fortran and allow it to be used for a wider range of deep learning tasks. The successful implementation of these optimization algorithms will provide users with more flexibility and choice when training their models, ultimately improving the performance and capabilities of neural-fortran.",https://summerofcode.withgoogle.com/programs/2023/projects/zVM00eKK
Dashboards to get quick statistics,Saurav Kumar Jha,https://cwiki.apache.org/confluence/display/AIRAVATA/Dashboards+to+get+quick+statistics,"SureshMarru, Eroma Abeysinghe",Apache Software Foundation,"django, mariadb, apis, VueJS, Apache Thrift, UI Development, Database Queries, Apache Superset","web, data visualization, Dashboards","The Airavata Django Portal is a web interface to the Apache Airavata API implemented using the Django web framework. Gateway admins need period reports on user count, running experiments, resource usage, and other relevant information to aid in their reporting and planning activities. The primary task is development of dashboards where admins can get quick statistics. Data to be displayed on the dashboard is to be taken from Airavata databases making use of Airavata APIs. Apache Superset along with other libraries can be employed to create the required dashboards using Vue.js.",https://summerofcode.withgoogle.com/programs/2023/projects/ZptJgBGs
"Add ""Autofix"" feature for common linting errors (w/ spectral)",Savio Dias,https://medium.com/@diassavio629/google-summer-of-code-final-evaluation-9e2658dc7f33,"acethecreator, divy.khare, Ivan García Sainz-Aja",Postman,"json, typescript, YAML, Spectral, VscodeAPI","api, Extension","My proposal aims to improve the user experience and developer experience for AsyncAPI-Preview extension. The main problem being solved is the difficulty in identifying and resolving common and custom linting errors in AsyncAPI documents. By leveraging the VSCode API for providing quick/autofixes for linting errors, my proposal plans to add an ""Auto Fix"" feature for most common and standard Spectral linting errors in AsyncAPI documents. The proposed deliverables for this project include: -Integration of AsyncAPI-Preview and Spectral for VSCode extensions -Implementation of Code Actions for standard Spectral linting errors in AsyncAPI documents -Support for computing json-path to source code and vice versa -Investigation on loading autofix rules from external files to support custom (non-standard) Spectral linting rules Overall, this project aims to streamline the AsyncAPI-Preview process and improve the quality of AsyncAPI documents by providing developers with a more user-friendly and efficient way to identify and fix common and custom linting errors.",https://summerofcode.withgoogle.com/programs/2023/projects/QFVcX71B
Showcase performance of PyTorch Image Models (Timm) with OpenVINO,Sawradip Saha,https://github.com/huggingface/optimum-intel/pull/404,"Liubov Talamanova, Alexander Kozlov",OpenVINO Toolkit,"python, deep learning, pytorch","Model Optimization, Timm Models","My proposal aims to optimize PyTorch Image Models (Timm) using OpenVINO and NNCF libraries. The problem at hand is that these models are computationally intensive and require a lot of resources, making them challenging to deploy in resource-limited environments. To solve this problem, I plan to implement optimization techniques such as quantization, pruning, and compression on a selected subset of models from the Timm library. I will evaluate the performance of these optimized models on different hardware platforms and compare them with the baseline models. The deliverables for this project include optimized Timm models, a tutorial notebook detailing the setup and usage of OpenVINO and NNCF libraries, and documentation and tests for the code developed during the project. If my proposal is accepted, I am excited to work on this project and contribute to the community by making these models more accessible and efficient to deploy.",https://summerofcode.withgoogle.com/programs/2023/projects/WIZaWTq5
Auto-growing layers,sbdaule5,https://gitlab.gnome.org/GNOME/gimp/-/merge_requests/961,Jehan,GNU Image Manipulation Program,"c, GEGL",Auto growing layers,"GNU Image Manipulation Program, or GIMP in short, is one of the most popular image editing programs that is Free and Open Source. But currently, the image layers need to be resized manually which is inefficient and degrades user experience. This can be particularly frustrating when using a brush tool. Also, beginners might find it hard to use. So this project aims to add support for Auto growing layers in GIMP and other features required for implementing it.",https://summerofcode.withgoogle.com/programs/2023/projects/6mh7rn5o
Eye-tracking data support in MNE-Python,scott_huberty,https://mne.tools/dev/auto_tutorials/preprocessing/90_eyetracking_data.html,"Britta Westner, Eric Larson",Python Software Foundation,python,"neuroscience, Eye-Tracking, signal-processing","Eye-tracking devices are widely used in neuroscience research. Studies of visual perception and attention in particular are increasingly integrating eye-tracking and EEG/MEG devices, in order to gain a better understanding of these processes and their neural correlates. However, the Python community has yet to coalesce around a well-supported package for analyzing eye-tracking signals. This project proposes to integrate support for reading, visualizing, and analyzing eye-tracking signals in MNE-Python. By incorporating the ability to analyze eye-tracking data into MNE-Python, researchers would be able to analyze both neural and eye movement data within the same software environment, making MNE-Python more versatile and useful for a wider range of research questions. Finally, MNE-Python has a large community of developers and users, making it likely that eye-tracking integration will prove useful for many in the scientific Python community. This project will focus on building a robust I/O routine for eye-tracking data and developing functions for preprocessing, visualization, and analytical routines that are commonly required in eye-tracking research. This includes the ability to interpolate eye-position data during blinks, produce heatmap plots of eye-position across trials, and estimate the deconvolved pupil response.",https://summerofcode.withgoogle.com/programs/2023/projects/nUP0jGKi
VPN Support Project,Sean Brady,https://github.com/Swangeon/HCC,"scottmc, Korli",Haiku,"c/c++, openvpn, VPN, TUN/TAP Driver, TUN/TAP Interface","vpn, driver development, userland development, TCP/IP","The current Haiku OS lacks a functional Virtual Private Network (VPN) implementation, which is essential for secure internet communication. The primary objective of this project is to enable Haiku OS to establish secure internet connections via VPNs, such as WireGuard through a TUN Virtual Interface. To achieve this, the project will deliver two key contributions: 1. Develop a driver and interface that facilitates data transmission between the network stack and applications through TUN and TAP virtual driver and interface. 2. Port a fully functioning OpenVPN implementation to Haiku OS, laying the groundwork for other potential VPN and tunneling software in the future.",https://summerofcode.withgoogle.com/programs/2023/projects/9qBna62P
Improving Civic Technology to Achieve Equity Goals,Sebastian O.,https://github.com/sebastian-orozco/Google-Summer-of-Code-2023/tree/main,Maddie Webster,Mayor's Office of New Urban Mechanics,"python, javascript, html, css",web,"This proposal is to assist the City of Boston in achieving in equity goals, either by helping implement a city chatbot powered by large language-learning models, building a dashboard for equity in city infrastructure, or expanding translation for the city’s 311 app with machine learning.",https://summerofcode.withgoogle.com/programs/2023/projects/j7CMjD81
Implementing an out-of-band identity verification system for Kanidm,Sebastiano Tocci,https://gist.github.com/Seba-T/8852d396e5d0e589512a844dcda13db0,William Brown,openSUSE Project,"rust, sqllite","Public key cryptography, Access Control, IDM, out-of-band authentication, ECDH","As of now, Kanidm doesn't provide a way to allow two users to mutually authenticate each other. I would like to design and implement such feature, building upon and further polishing the design already discussed between the maintainers and me (see pull request #1416). The idea is to use ECDH to compute a unique TOTP for each user, make the users exchange said TOTPs with an out of band channel and then verify if they are correct, with no online communication required between the involved kanidm servers. To begin with I'll have to implement a feature that allows kanidm to store ECDH keys for its users, as they are required for the Identity verification system to authenticate subjects. Afterwards I will work on the core server-side logic of the system, and finally, if time will allow it, I am going to implement a frontend interface in the kanidm client for the identity verification system. I also plan on writing a journal of my experience with this project.",https://summerofcode.withgoogle.com/programs/2023/projects/fifdSblc
Steam Workshop SDK/Third Party Integration For ENIGMA,Seif Kandil,https://k0t0z.github.io/posts/2023/GSoC_2023_final_evaluation_report.html,"Josh Ventura, jeleve, R0bert, rpjohnst",The ENIGMA Team,"c++, cmake, make, GTest, Steamworks SDK","extensions, cloud, networking, build systems, game engines, computer graphics, Steamworks API, Steam, Platforms","ENIGMA currently lacks third-party integration with various digital distribution platforms such as Steam, Xbox, or Origin. First-class support for these services would make it easier for Indie developers to publish ENIGMA-created games. Developers would like for it to be easier to monetize their games and enable them to release bigger and better updates to their users. An integrated architectural layer will be created between Steamworks ENIGMA's extension APIs and Steamworks SDK. ENIGMA's Asynchronous system will be updated. Currently, ENIGMA's Networking system is not stable so Steam Networking features will be postponed for later for now I will add support to these APIs: Management, General, Overlay, Leaderboards, Achievements, Cloud, and Social.",https://summerofcode.withgoogle.com/programs/2023/projects/kHDskccO
Create a text summarization model by fine-tuning a pre-trained model with a custom dataset,Seungjun Lee,https://docs.google.com/document/d/1vqR8TA_QkDzizoBcdRLlULVO8775HyEIbNgLShluzl0/edit?usp=sharing,Shilpa Kancharla,TensorFlow,"python, tensorflow, KerasNLP","machine learning, nlp, fine-tuning","This project aims to create a high-quality custom dataset using PaLM API and create a high-quality text summarization model by fine-tuning a pre-trained model with the custom dataset. The custom dataset will be a CSV file with 10K rows and 4 columns: id, prompt, document, and summary. The document should vary in different writing styles such as news articles, blog posts, legal papers and so on, and the length of a summary will be between 1/3 and 1/4 of the length of the original document. This will make the custom dataset to be far superior to most publicly available datasets like CNN-Daily-Mail or XSUM, which typically generate 1-2 sentence summaries. Then I will create a few text summarization models with different pre-trained models, improving each fine-tuned model’s accuracy by implementing strategy driven from bias/variance and error analysis. After creating a few fine-tuned models, I will pick the best performing one based on the evaluation metric. Based on this, I will work on creating a tutorial covering the whole process, such as creating a custom dataset using PaLM API, fine-tuning pre-trained models using Keras API, and selecting the best performing one based on a evaluation metric. As a result, by creating this comprehensive tutorial, the project will encourage other developers to explore/use Keras API and PaLM API in their projects.",https://summerofcode.withgoogle.com/programs/2023/projects/qjSsWX86
Enhancing and Validating LiveHD's Power Modeling Flow,Shahzaibkashif,https://medium.com/@shahzaibceo/decoding-power-analysis-livehd-vs-sta-in-vlsi-design-11a756c921c1,"Jose Renau, Sakshi_Garg",UC OSPO,"verilog, c++, git, bazel, Verilator, Yosys, OpenRoad, gnuplot, Slang, LiveHd, Netlists, VCD (Value Change Dump), Liberty Files, Sky130 PDK (Process Deisgn Kit)","simulation, digital design, Hardware Design, Power Estimation, Energy Efficiency, VLSI (Very Large Scale Integration)","The primary goal of this project is to enhance and validate LiveHD's power modeling flow, a critical feature for estimating power consumption in modern hardware designs. The existing flow requires further refinement to ensure its stability, accuracy, compatibility with a wider range of netlists and VCD files, and overall performance. To address these challenges, the project will focus on methodically debugging the current implementation, establishing a comprehensive validation methodology for verifying the accuracy of power estimates, and optimizing the flow to handle larger netlists and VCD files efficiently. Additionally, the project aims to improve existing documentation by providing detailed explanations, examples, and tutorials to facilitate user adoption and understanding. Upon successful completion, the project will deliver a more reliable, accurate, and efficient power modeling flow within LiveHD, contributing to the development of energy-efficient hardware designs. This refined flow will not only enhance the capabilities of LiveHD but also encourage wider adoption and utilization by the hardware design community, fostering innovation in the field of energy-efficient devices and systems.",https://summerofcode.withgoogle.com/programs/2023/projects/ua987TH3
Pajamas Migration - GitLab Foundations Team,Shane Maglangit,https://gitlab.com/-/snippets/2580388,James Rushford,GitLab,"javascript, ruby on rails, vue, HAML","developer tools, frontend, design system","GitLab has been pushing initiatives such as Pajamas Migration Days, Hackathons, and Internal OKRs to ensure that the platform’s interface aligns with the specifics of the Pajamas Design System. However, there is still more work to be done to ensure that both the existing code and new changes, such as the new navigation redesign, adheres to the design standards. This project paves way for the Google Summer of Code 2023 participants to join the GitLab Foundations team and take on the challenges of completing this migration process.",https://summerofcode.withgoogle.com/programs/2023/projects/Bm648ysU
PEcAn Packages to CRAN,Shashank-Singh,https://medium.com/@shashanksingh819/gsoc-2023-pecan-packages-to-cran-final-report-c1d43c090a,"Mike Dietze, Chris Black",PEcAn Project,"r, CRAN, package development","data science, analytics","Currently, PEcAn packages are not available to download from CRAN, this makes it harder to install on systems since it requires the user to manually download all the PEcAn packages and their dependencies. Adding PEcAn packages to CRAN will not only make it easier to install but also easier to find and easier to use as standalone modules. This will require fixing warnings in the build process, removing unnecessary dependencies, splitting modules, refactoring code, adding tests, and removing test failures.",https://summerofcode.withgoogle.com/programs/2023/projects/icaSUgyg
Improve Programs & Events Dashboard UX for Article Scoped Programs,Shashwat,https://gist.github.com/TheTrio/6d1f60303259483f76558a3aa92e6dbc,Sage Ross,Wikimedia Foundation,"javascript, ruby on rails, react, ruby",web,"Wiki Education Dashboard is a complex web app for keeping track of contributions to Wikimedia projects. It's widely used by the global Wikimedia community for edit-a-thons, classroom wiki writing assignments, and a variety of other initiatives. The dashboard currently supports a variety of methods to track articles within the “Article scoped program” event type - namely categories, PetScan, PagePile, and templates. In a nutshell, all of these scoping methods make it easier to group and track a set of articles with a single condition, greatly reducing the effort for tracking related or similar articles. However, currently, these tracking options are not obvious to find. This project aims to remedy that by incorporating these features into the course creation modal window itself - along with adding new features(like auto-complete, presets, etc) - to make discovering and editing these values easier",https://summerofcode.withgoogle.com/programs/2023/projects/bYYS2TTa
GPU Support for QuantumClifford.jl,Shayan Pardis,https://docs.google.com/document/d/1ypJ2dnmMar_9vflwJLsSU99jnwP03q43a6yFBVjhKMA/edit?usp=sharing,Stefan Krastanov,The Julia Language,"julia, CUDA.jl","Quantum Computing, GPU acceleration","QuantumClifford.jl is a package designed for simulating Quantum Clifford circuits, circuits that consist of Clifford gates. QuantumClifford.jl can be highly useful for designing Quantum error-correcting codes. Since applying Clifford gates to Stabilizer states is mathematically similar to Linear Algebraic operations, we can utilize GPU to parallelize the process and make it significantly faster. This Summer of Code project consists of implementing the aforementioned Clifford gate operations in GPU kernels, and then seamlessly integrating them into the rest of the QuantumClifford library.",https://summerofcode.withgoogle.com/programs/2023/projects/7KTadSTv
Scan8 - Realtime frontend,Shelly Suthar,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/08-Shelly-Suthar-Scan8.md,"RavinduDeSilva, Isuru Vishwanath",SCoRe Lab,"flask, reactjs, sockets",web,"Scan8 is a distributed scanning system for detecting trojans, viruses, malware, and other malicious threats embedded in files. The system will allow one to submit a list of URLs or files and get the scan results in return. Currently the user interface of this project is outdated and does not support real time data updates from the database. The aim of this project is to resolve the problem of real-time data orchestration by integrating websockets and by updating the user interface to make it more user-friendly",https://summerofcode.withgoogle.com/programs/2023/projects/KK8mBdNH
Having Versioned Atomic Data Repositories,Shikha Rathi,https://gist.github.com/s-rathi/5ece9b45b03d43cc7ad4c53d9da24c6c,"Wolfgang Kerzendorf, Atharva Arya, Andreas Flörs, Ezequiel Pássaro, Joshua Shields, Isaac Smith",TARDIS RT Collaboration,"python, pandas, GitHub Actions","data science, physics, astrophysics","Carsus generates an HDF file by combining data from various sources. This HDF file can be used by Tardis to generate Atomic Spectra. However, when a new version of the atomic source rolls out, there is no way of determining the changes in the datasets. The goal of this project is to create a repository integrated with CI pipelines to periodically check for changes in the upstream data sources and maintain a repository of semantic versioned datasets along with a report on the changes in each version update. The Carsus project will be updated to use the latest data source by default by checking for updates in the data repository. Additionally, a utility function will be implemented in the Carsus to support using the older version of the datasets available on the data repository by passing the dataset version number.",https://summerofcode.withgoogle.com/programs/2023/projects/tXpWIPLe
DIPY: Correlation Tensor Magnetic Resonance Imaging,Shilpi Prasad,https://github.com/shilpiprd/GSOC_2023,"Shreyas Fadnavis, Rafael Neto Henriques, Ariel Rokem",Python Software Foundation,"python, git, Testing, PEP8, MRI, DIPY, Neuroscience, dMRI","data analysis, python, medical imaging, Diffusion MRI, CT-MRI, Microstructure","During my project, I will successfully implement a module for Correlation-Tensor Magnetic Resonance Imaging (CT-MRI) in DIPY, which provides advanced diffusion acquisition techniques for characterizing healthy and pathological brain alterations. This implementation is significant because DIPY previously provided limited modules to process this type of diffusion MRI data. By expanding DIPY's capabilities, researchers and clinicians can now gain unique insights into tissue microstructure, making DIPY a more complete and useful tool for a wider range of MRI data users.",https://summerofcode.withgoogle.com/programs/2023/projects/Y4ykGV6H
Outliner Tree Element Refactoring,shinbay,https://devtalk.blender.org/t/gsoc-2023-outliner-tree-refactoring/29355/14?u=shinbay,Julian Eisel,Blender Foundation,c++,"object-oriented programming, Refactoring, enhancement","This project aims to port the remaining tree elements to the new object-oriented design of the Outliner codebase. The project will involve creating new subclasses, modifying existing code, thoroughly testing changes, and documenting the modifications made. The deliverables for this project include a detailed report and updated code of new AbstractTreeElement sub-classes representing the remaining tree elements. The project will contribute to the ongoing development efforts of the Outliner by providing a necessary refactoring that will make future development work easier and more efficient, and the Outliner module's documentation will be improved.",https://summerofcode.withgoogle.com/programs/2023/projects/GkBeWVCw
Implementing Vision Models using Ivy for Hugging Face Model Zoo,Shireen Chand,https://docs.google.com/document/d/14AWfWCFbPZkW7qFE4gQF9XHvrw90undGXes2KSU-UXc/edit?usp=sharing,"Suvaditya, Guillermo SB, Rashul Chutani",Ivy (lets-unify.ai),"python, tensorflow, pytorch, Hugging Face, ivy","machine learning, vision, deep learning",My project proposal for GSoC in Ivy is to work on building Vision Models using Ivy and creating demos and tutorials to showcase the implementation of these models. These models include PSMNet and MLP-Mixer.,https://summerofcode.withgoogle.com/programs/2023/projects/gdj9BHzh
MultiCopter Swarm Avoidance,Shiv Tyagi,https://discuss.ardupilot.org/t/gsoc-2023-multicopter-swarm-avoidance/102108,"Peter Barker, Rishabh S",ArduPilot,"python, c++, networking, Mavlink, esp8266","robotics, drones, Object avoidance","Ardupilot is an advanced and versatile flight control software that has many features, including an obstacle avoidance feature that can successfully avoid any obstacles in the path of the vehicle. Ardupilot is used in various applications, including swarming. Improving the existing avoidance libraries to avoid vehicles in the vicinity of a vehicle would be a great enhancement to the software. This would reduce the number of in-air accidents during swarming and lead to safer flights. This project aims to enable a vehicle to gather information about the vehicles near it using various sources like mavlink multicast, absb, droneid, etc., and feed the data into the avoidance libraries to avoid them.",https://summerofcode.withgoogle.com/programs/2023/projects/wJVH7lKg
Frontend and Backend Integration in Codelabz,Shiva Nanda Reddy Gumma,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/09-Shiva-Nanda-Reddy-Gumma-Codelabz.md,"Mohammad Sarfraz Alam, Thanda Mahender Goud",SCoRe Lab,"react, redux, Firebase, Firestore","web, Tutorials","CodeLabz is a platform where the users can engage with online tutorials and the organizations can create tutorials for the users. I'll design new screens and improve the design of existing screens. Many features in CodeLabz are currently static, so I'll render data from the backend and make them dynamic. I'll also connect the front to the backend, design backend in an optimized way.",https://summerofcode.withgoogle.com/programs/2023/projects/glRDYyLP
Administration System - BookBrainz,Shivam Awasthi,https://blog.metabrainz.org/2023/08/27/gsoc23-administration-system-for-bookbrainz/,"Monkey, Ansh Goyal",MetaBrainz Foundation Inc,"postgresql, javascript, react, Chai, BookshelfJS","Admin panel, Administration System","BookBrainz currently has no administration system, or any good way of giving users special privileges. This project involves devising and implementing a basic admin system allowing for a flexible privilege hierarchy. This project will also include creating relationship and identifier editors which allow privileged users to edit and add relationships and identifiers.",https://summerofcode.withgoogle.com/programs/2023/projects/STzV7VWb
Patch based test coverage for quick test feedback,ShivamGupta123,https://gist.github.com/xgupta/a601723644d28406bc019842ba316aa7,Henrik Olsson,LLVM Compiler Infrastructure,"llvm, llvm-lit, llvm-cov","compiler, Code Coverage","Most of the day to day tests in LLVM are regression tests executed by Lit, structured as source code or IR to be passed to some binary, rather than test code directly calling the code to be tested. This has many advantages but can make it difficult to predict which code path is executed when the compiler is invoked with a certain test input, especially for edge cases where error handling is involved. The goal of this project is to help developers create good test coverage for their patch and enable reviewers to verify that they have done so. To accomplish this we would like to introduce a tool that can be fed a patch as input, add coverage instrumentation for the affected source files, runs Lit tests, and records which test cases cause each counter to be executed. For each counter we can then report the number of test cases executing the counter, but perhaps more importantly we can also report the number of test cases executing the counter that are also changed in some way by the patch, since a modified line that results in the same test results isn’t properly tested, unless it’s intended to be a non-functional change.",https://summerofcode.withgoogle.com/programs/2023/projects/TMnF4MqC
Cypress Migration,ShivamJha,https://medium.com/@sssvjha/google-summer-of-code-2023-5767487e505d,"Hugo Dueñas, Juan Gomez",omegaUp,"typescript, vue.js, Cypress, Pyhton","E2E testing, Web Devlopement","This project aims to migrate all the end-to-end tests from selenium to Cypress and increase end-to-end test coverage by covering more CUJs. Currently, the end-to-end tests are written using the Selenium framework which has become slow, flaky, and expensive to maintain. We aim instead of directly migrating those tests, first clearly write down the CUJs and write the test according to them.",https://summerofcode.withgoogle.com/programs/2023/projects/TuVv99jM
Improve JKube user experience,Shivang Mishra,https://gist.github.com/ShivangMishra/eb7f066ec2ad7fce003b1d0c015bf62e,Sun Tan,Eclipse Foundation,"java, gradle, kubernetes, Maven, OpenShift","devops, cloud native","Currently, the JKube repo has ten open issues with the label ‘UX’. From a user perspective, these issues unnecessarily complicate trivial tasks like OpenShift console login or finding what a user needs in JKube docs. In many cases, our logs do not give enough information and hints like ‘what went wrong’, making it hard for the users to find fixes. As a mature plugin catered towards developers, we must work on more helpful logging, showing hints and giving the users an overall better experience. The JKube website needs work, and we need to improve quickstart guides to help new developers getting started with our plugin. These measures will definitely improve JKube’s adoption, and thus are of utmost importance.",https://summerofcode.withgoogle.com/programs/2023/projects/JrxqxQmW
Kubectl plugin for Armada,Shivang Shandilya,https://github.com/ShivangShandilya/GSoC-2023,"Kevin Hannon, Geoff Wilson",CNCF,"go, kubernetes, kubectl",cloud,"The proposal deals with the problem of the creation of a kubectl plugin for Armada, the creation of the desired plugin will allow users to communicate with Armada via kubectl. The solution this proposal provides is that in order to create a plugin for kubectl we need the help of armadactl i.e. command-line utility for Armada through which users submit their jobs to the Armada server. To develop a plugin for kubectl, we first must develop a base plugin for armadactl in Go that performs basic tasks such as submission and cancellation of jobs, creation of queues, etc. After the necessary coding for the plugin is finished, we now distribute that plugin over at Krew so that it is globally accessible. Once it is distributed at Krew, a user can install this plugin as a kubectl plugin and can interact with the Armada server and perform the aforementioned tasks.",https://summerofcode.withgoogle.com/programs/2023/projects/tQdgYCVe
A real-time computing support for concore.,Shivang Vijay,https://shivangvijay.github.io/GSoC/index.html,"Pradeeban, Mark Arnold, Mayuresh V. Kothare","Department of Biomedical Informatics, Emory University","python, c++, sphinx, raspberry pi, os, Linux/POSIX for real-time computations, Doxygen","iot, c++, python","To achieve real-time execution in Concore, one approach is to optimize the existing codebase. However, implementing the system with straightforward C++ implementations may offer even better results in terms of efficiency and speed, due to the language's closer proximity to hardware. As Concore involves multiple processes, an IPC mechanism should be developed to replace the current file-sharing communication method, in order to enable efficient data transfer. Finally, it's necessary to ensure that Concore with optimized C++ programs can run on an affordable hardware device that supports real-time computation.",https://summerofcode.withgoogle.com/programs/2023/projects/ZrOpJIc7
Implementing RateLimit Plugin for Coraza WAF,Shivansh Verma,https://gist.github.com/VermaShivansh/fc973a635f81c452acc6b922e735f49a,"fzipitria, José Carlos Chávez",OWASP Foundation,"golang, SecRule","security, web, firewall","Rate limiting is a technique used by computer systems to control the rate of traffic sent or received by a particular entity (such as an application or a user). The goal of rate limiting is to prevent a single entity from overwhelming the system with too many requests at once causing resource exhaustion, security vulnerabilities, API abuse, and unpredictable behavior. The objective is to develop a plugin for Coraza WAF which prevents ‘rate-based attacks’ and provides more security and stability to the applications behind the wall. In brief, this is to be accomplished by creating a new directive `SecRateLimitOptions` for specifying the rate limit options(no. of requests allowed per minute, the algorithm used, when to clear rate limit, default action if rate limit exceeds) and a new non-disruptive action `rate limit` which enforces rate-limit on the matching chains of SecRule. A more detailed explanation can be found in the proposal PDF. The set of deliverables, in the end, would be the plugin itself, support for distributed systems, and well-written documentation with examples, benchmarks, and recommended settings.",https://summerofcode.withgoogle.com/programs/2023/projects/cArjq2A4
Dockerize Oppia,Shivkant Chauhan,https://medium.com/@shivkantchauhan2002/google-summer-of-code23-with-oppia-foundation-66c77412d9a1,"Praneeth Gangavarapu, ib",Oppia Foundation,"python, docker, GitHub Actions","web, devops","The objective of this project is to streamline the installation of Oppia's development server by utilizing Docker to containerize the application. Additionally, all GitHub Actions will be consolidated into a single build step that generates a cached docker image, speeding up the testing process on GitHub-hosted servers. By dividing the application into several Docker containers, users can enjoy a more seamless and efficient experience when setting up their development environment, removing the existing installation process that poses a significant barrier for new contributors.",https://summerofcode.withgoogle.com/programs/2023/projects/12F2fE3Q
Okular - Improve Okular For Android,Shivodit,https://community.kde.org/GSoC/2023/StatusReports/ShivoditGill,Albert Astals Cid,KDE Community,"c++, qt",graphics,"Okular is a document viewer that is developed by the KDE Community. It has an Android version, but it has some issues. PDFs with unembedded fonts don’t display properly due to the lack of an Android-specific font API in the Poppler backend which is used by Okular. Icons also do not render, due to problems in KDE Frameworks or the Kirigami UI framework. This project aims to implement an Android-specific font API in the Poppler backend, as well as solving the issue of icon rendering in Okular’s Android version.",https://summerofcode.withgoogle.com/programs/2023/projects/O0ndeDYr
Import and Store NNDC Deposition Data,Shreyas Singh,https://sites.google.com/view/shreyas-gsoc2023-tardis/home,"Jack O'Brien, Andrew Fullard, Atharva Arya, Andreas Flörs, Christian Vogl",TARDIS RT Collaboration,"python, github, pandas","data analysis, astrophysics","TARDIS has a new module that transports gamma rays created by nuclear decay. The NNDC stores nuclear decay data in a format that is difficult to read and compile called ENSDF. But NNDC also provides a parser for this data online called “radlist”. This project will use the ENSDF archives from NNDC and the parser to download, process, and store nuclear decay data for all available isotopes in the Carsus HDF output.",https://summerofcode.withgoogle.com/programs/2023/projects/F7C111oc
Makerchip Flows: A Suite of EDA Flow integrations for TL-Verilog ecosystem,Shrihari,https://blog.xlogic.in/makerchip-flows,Steve Hoover,CHIPS Alliance,"python, verilog, fpga, make, bash, System Verilog","fpga, eda, Hardware Design","Makerchip Flows aims at developing EDA flows for TL-Verilog leveraging Edalize backend, for open source tools/flows like yosys, Openlane, F4PGA, Silicon Compiler, and also commercial ASIC Synthesis and Simulation tools. The project involves developing Flows with TL-Verilog (Makerchip IDE or SandPiper-SaaS) and integrating them into the website or use as a standalone flow. This involves developing support for tools and creating flows in Edalize. This effort Makerchip Flows also extends to adding TL-Verilog frontend for Silicon Compiler. This wide range of support and ecosystem developments will make TL-Verilog and its ecosystem the go-to for Design, Simulations, FPGA visualizations, and other explorations just within the browser, creating a low cost and low barrier to entry for beginners and engineers.",https://summerofcode.withgoogle.com/programs/2023/projects/f2iyC3J6
Track R Translation Status,Shrish Shete,https://gist.github.com/shrish-shete20/d96c878b38d330f5995c2583b225a4a5,"Ben Ubah, Heather Turner",R project for statistical computing,"r, css, java script, DBMS, ShinyR, gettext, Web 2.0","web development, Data Visualizations",This R project aims to create a dashboard that provides an overview of the current status of language translations in the R community. This tool can benefit developers and organizers who are seeking information on language translations and can support the planning of diversity packages. It will recognize the contributions of regional volunteers who devote time and effort to translating messages into their native languages. The project aims to establish a framework for monitoring the translation status of R,https://summerofcode.withgoogle.com/programs/2023/projects/rhj23wU8
Mission Support System(MSS) : UI-improvements,Shubh Gaur,https://github.com/Open-MSS/MSS/wiki/UI%E2%80%90improvements-GSOC-2023,"Christian, joernu76, SonjaG, Reimar Bauer",Python Software Foundation,"python, qt, git, Pytest","UI Improvement, enhancement","Modernize fs_filepicker: The fs_filepicker is a GUI used for selecting files in the msui_settings.json configuration file. Currently, the GUI only offers a basic set of navigation elements for selecting a file and returns the fs URL for accessing it. The goal of this project is to modernize the GUI using the Pyfilesystem module to make it more user-friendly and efficient. Pyfilesystem is a Python module used for accessing different types of file systems. It provides a common API for working with various file systems, such as local, remote, and cloud-based storage systems. The Pyfilesystem module is easy to use and has many features that can be used to improve the functionality of the fs_filepicker. View Layout and Restoring:: The mscolab project is a collaborative software platform that enables multiple users to work together on a shared project in real-time. The project is written in Python and uses the PyQT GUI library for the user interface. Currently, the PyQT Gui of the MSS client can handle different views by one flight path. However, once a new flight path is loaded and activated, all views change to this flight path. This is inconvenient for users who want to work on multiple flight paths simultaneously. Additionally, the view configuration consists of many windows with a complex set of configuration options that are tedious to re-create after shutting down the application. This proposal aims to improve the mscolab user interface by adding the ability to store and restore the view configuration of multiple windows for the user. Additionally, the proposal seeks to add a layout option for any participant on the same flight path, as well as the ability for the creator of an operation to set the layout of all participants.",https://summerofcode.withgoogle.com/programs/2023/projects/Fwp7HUHy
Scaled Botpress Connector,Shubham Bhardwaj,https://github.com/BotpressXRocketChat/Botpress-Super-Connector,"Yash Rajpal, Duda Nogueira",rocket.chat,"javascript, mongodb, typescript, meteor.js, react.js, JEST, Botpress, Rocket.Chat Apps",web,"The project's objective is to create a Rocket.Chat app that can create multiple bots with the ability to give all of the essential Botpress features inside of all key chat spaces (Direct, Channel, and Omnichannel).",https://summerofcode.withgoogle.com/programs/2023/projects/6VbpCqlD
Prototyping Support for Content Addressable Systems like IPFS in TUF,Shubham Nazare,https://gist.github.com/shubham4443/dcbdf72d3311f4e709fbe02a89d0b8c9,"Aditya Sirish A Yelgundhalli, Ericson2314",CNCF,python,Secure Software Updation,"The TUF specification provides explicit guidelines for how artifacts should be hashed and later verified to guarantee their integrity. However, Content Addressable Systems like Git, IPFS (InterPlanetary File System) and OSTree have their own mechanisms for ensuring the integrity of artifacts. When TUF is used with these systems, it is redundant for it to also ensure artifact integrity. This project provides solution to this issue by delegating the responsibility of artifact integrity verification to the underlying content addressable systems themselves, while still using TUF to manage the metadata and provide additional security measures.",https://summerofcode.withgoogle.com/programs/2023/projects/vT5PhNL0
OpenMRS Android SDK,Shubham Sharma INDIA,https://gist.github.com/shubhamsgit/fa5e778aa06f77440373fe15208f6ee5,"abertnamanya, Rishabh Agarwal",OpenMRS,"android, kotlin, Android-Library",android,The Project aims to add more functionalities to the existing OpenMRS SDK and thus helping the developers making the android client customizable and reduce the boilerplate code in production.,https://summerofcode.withgoogle.com/programs/2023/projects/cCzpODuq
Apache EventMesh EventMesh official website docs by version and demo show,Shukun Zhang,https://github.com/apache/eventmesh-site/pull/126,"Eason Chen, Mike Xue",Apache Software Foundation,"java, go, distributed systems, markdown, cloud-native, messaging","documentation, Quick Start Guides, Tutorials and Videos, User Guides, Feature Documentation, How-To Guides","Improve and maintain EventMesh documentation, including archiving Chinese and English content for different release versions, enhancing project quick start documents, providing feature introductions and display videos, etc.",https://summerofcode.withgoogle.com/programs/2023/projects/00W2TfS9
More Sparse Index Integrations,SHUQI LIANG,https://cheskaqiqi.github.io/2023/08/22/Final/,Victoria Dye,Git,"shell script, git, c language","version control, dvcs","The ""sparse-index"" is a feature that reduces the size of the working directory's index to function effectively with ""sparse-checkout"", resulting in significant performance improvements. Integration with ""sparse-index"" may require changes to git command logic and git's internal data structure. When enabling the sparse index, it is essential to carefully analyze its interaction within the git test suite to ensure proper functionality and compatibility with the git command. Continue integrating the remaining commands with the sparse index.",https://summerofcode.withgoogle.com/programs/2023/projects/Rkbc1Abe
Implement a R Shiny module for Network Analysis in CellMinerCDB,Siddharth Chaudhary,https://github.com/sidd-2203/cellminercdb/tree/GSoC-Staging,AugustinL,National Resource for Network Biology (NRNB),"r, RShiny, cyjShiny","network biology, webapplication","CellMinerCDB provides a web-based resource for integrating multiple forms of pharmacological and genomic analyses, and unifying the richest cancer cell line datasets (the NCI-60, Sanger/MGH GDSC, and Broad CCLE/CTRP).CellMinerCDB enables data queries for genomics analyses and exploration of pharmacogenomic determinants of response. It leverages overlaps of cell lines and drugs across databases to examine several biological questions. CellMinerCDB is built using R Shiny which provides a modular framework. This proposal is aiming towards adding an additional module in CellMinerCDB for Network Analysis that will provide an easier visualization of averaged genetic profiling data on top of a curated set of pathways.",https://summerofcode.withgoogle.com/programs/2023/projects/9bSOdy71
SimTools: Output Analysis for Monte Carlo,Siddharth_Pathak,https://github.com/dvats/SimTools/tree/Siddharth-Pathak,"Dootika Vats, James Flegal",R project for statistical computing,"c++, r, latex, Rcpp, Roxygen2","visualization, simulation, statistics, Markov Chain Monte Carlo (MCMC), Output Analysis, Confidence Interval","I propose completing the R package ""SimTools"" before it's ready for CRAN submissions. To equip the user with almost all types of output analysis of MCMC, SimTools is here. SimTools is an R package (not completed) that provides users with an enriched analysis of MCMC simulations (also iids) and facilitates the generation of Markov Chains. This project shall affect both beginners and well-experienced users. More examples of how to write complicated simulation and analysis methods will help beginners, and they will be able to use the models in their projects directly. Importing simulated chains from other libraries will help the experienced users perform transfer learning on their Simulated Markov Chains. This tool provides a range of MCMC algorithms and diagnostic tools to help users evaluate the performance of their models. As the Package is Partially developed, I need to implement six significant tasks to complete this package(Reference - Project webpage). These tasks are Improving Multiple chain compatibility, Implementing Summary function for output, Compatibility for discrete state space Markov Chains, Efficient trace plots, Export to C++(CI Calculations), and Rich Documentation of the Package. I have already gone through all these problems and developed possible approaches to solve them.",https://summerofcode.withgoogle.com/programs/2023/projects/pFv8IPY0
Dockerization of Visual Circuit,Siddheshsingh Tanwar,https://theroboticsclub.github.io/gsoc2023-Siddheshsingh_Tanwar/blogs/2023/08/27/week14.html,"José María Cañas, Toshan Luktuke",JdeRobot,"python, javascript, react, ros, docker","robotics, Dockerization","The goal is to enhance the accessibility of Visual Circuit by creating a Docker image and integrating it with Robotics Academy. To accomplish this, we can use the robotics-academy image as the base image and add the necessary Visual Circuit dependencies and execution commands to the Dockerfile.Users can easily access and use both applications through a single container once the Docker image has been created, making it more convenient for them. Additionally, to streamline the process of incorporating new blocks into Visual Circuit, we plan to establish a workflow for adding them. Contributors can initiate a pull request based on provided guidelines, and the maintainer will review and approve the working before merging it. Deliverables : A dockerized version of Visual Circuit, a new repository and workflow for adding blocks to Visual Circuit, good documentation for both of the above.",https://summerofcode.withgoogle.com/programs/2023/projects/SPqrs4g7
Progressive Page Cache Improvement for Apache Doris,Siyang Tang,https://github.com/apache/doris/pull/23546,"Zaki Lu, Yongqiang Yang",Apache Software Foundation,"java, c++, In-memory Storage","database, OLAP, In-memory Storage","In the process of this task, a more comprehensive page cache system will be completed progressively for Apache Doris, aiming at better cache performance in large queries and more flexible cache GC. More reasonable cache eviction policy, more flexible GC trigger policy and more user-friendly configuration ways will be supported for better adaptation to OLAP scenarios.",https://summerofcode.withgoogle.com/programs/2023/projects/mfXgmxdQ
Benchmark tooling for common models and operations,skyleaworlder,https://docs.google.com/document/d/1mVEFSlEbtmZec8C3SRJ0CX1Sp3gIYQPjRY2iaktr9H4/edit?usp=sharing,"Brian Chen, Kyle Daruwalla",NumFOCUS,"julia, GitHub Actions","machine learning, devops","FluxML is a deep learning stack built in 100% Julia code, which aims to provide high-speed and light-weight abstraction of GPU, auto-differentiation and deep learning model composites. This project will introduce a specific benchmarking system to adapt to the current requirements of the FluxML community. The system includes GitHub Actions workflows that are triggered by specific events, a FluxML-specific benchmarking tool and a repository for benchmarking code.",https://summerofcode.withgoogle.com/programs/2023/projects/whO3fAS8
Enable cross-talk between Python and C++ kernels in xeus-clang-REPL by using Cppyy,Smit Shah,https://gist.github.com/Smit1603/628b56019d19bfb6dd3bd5ee53f0eab1,"Baidyanath Kundu, Vassil Vassilev",CERN-HSF,"python, c++, Cppyy",compiler,"xeus-clang-REPL is a C++ kernel for Jupyter notebooks using clang-REPL as its C++ Interpreter. Cppyy is an automatic, run-time, Python-C++ bindings generator, for calling C++ from Python and Python from C++. Allowing C++ and Python to talk between themselves in a Jupyter notebook will allow users to switch between Python and C++ at will. This means that data analysts can set up their analysis in Python while running the actual analysis in C++. Thus reducing the time to write and debug their analysis pipeline. Initial support of cross talk between the two kernels has been implemented but this only supports passing primitive data types. This project aims to use Cppyy to extend this to support classes and functions.",https://summerofcode.withgoogle.com/programs/2023/projects/GGwZBrTf
CI Test Harness for bootloader,smk,https://wiki.freebsd.org/SummerOfCode2023Projects/CITestHarnessForBootloader,Warner Losh,The FreeBSD Project,"python, lua, bash","virtualization, scripting, qemu, Build infrastructure","FreeBSD supports multiple architectures, file systems, and disk-partitioning schemes. Currently, there is a script named full-test.sh located in src/tools/boot/ that creates several of these environments but does not test all of them. The proposed idea is to rewrite the script in a language such as Python or Lua, which would allow for testing of all the architecture combinations supported in the first and second-tier support, and provide a report on any broken combinations and expected functionality. Additionally, providing Linux Boot support using Linux EFI shim(EDK) II for amd64 and arm64. If time permits, further exploration could be done to integrate the script into the existing build infrastructure (either Jenkins or Github Actions) to generate a comprehensive summary of the test results.",https://summerofcode.withgoogle.com/programs/2023/projects/aa1ptICD
"STARDIS Parallelization and GPU with Numba, C/C++ Extensions, and CUDA",smokestacklightnin,https://sites.google.com/view/smokestacklightnin-gsoc-2023/home,"Atharva Arya, Sona Chitchyan, Jaladh Singhal, Alexander Holas, Vicente Amado Olivo, Joshua Shields, Isaac Smith, Bea Lu",TARDIS RT Collaboration,"c, python, cython, c/c++, c++, cuda, numba","astronomy, parallel computing, gpu computing, Refactoring, GPU Accelerated Computing, Data Vizualization","The main goal for this project is to improve the speed of STARDIS, a Python library that generates synthetic spectra for stars. An easy way to accomplish this quickly is to add Numba JIT compilation. Because this can be accomplished so rapidly, a next goal would be to reimplement parts of STARDIS with C/C++ or Cython extensions. This project proposal therefore consists of four implementation phases, the first pair using Numba and the second pair using C/C++ or Cython extensions, with each pair consisting of a CUDA and a Non-CUDA implementation. I intend to make these improvements incrementally and systematically. I will also benchmark the performance before and after each time I reimplement portions of the STARDIS codebase to both understand how much speed was gained and prioritize what to focus on in each next step.",https://summerofcode.withgoogle.com/programs/2023/projects/sm8D0H9D
REST API Completion and improvement,Soham Banerjee,https://github.com/soham4abc/GSOC23,"Gaurav Mishra, Shaheem Azmal M MD, Kaushlendra, Rohit_Pandey",FOSSology,"postgresql, php, api, Slim, PHPUnit","web, api, backend",Developing the remaining REST APIs that are required to expose the database for the new FossologyUI. This proposal also focuses on implementing test cases for the existing and upcoming APIs for the Fossology server.,https://summerofcode.withgoogle.com/programs/2023/projects/7bIMZdQi
Improve Chromecast Support (subtitles),Soham Gupta,https://gupta-soham.github.io/gsoc23/,Alaric Sénat,VideoLAN,"c, c++, api, Chromecast Protocol","subtitles, Chromecast","VLC Media Player is one of the most popular and widely used media players in the world. While it already supports Chromecast, there are several issues with subtitle support that need to be addressed. The goal of this project is to improve Chromecast support in VLC Media Player by adding support for image subtitles (DVD, Blu-ray, MKV) and text subtitles.",https://summerofcode.withgoogle.com/programs/2023/projects/465XuPyw
Efficient app-based measurement of visual functions in infants and young children,Soham Mulye,https://github.com/Shazam213/automated-preferential-looking#apl-automated-preferential-looking,"Suresh, Arvind Chandna, Yohaï-Eliel BERREBY, Floris van Vugt",INCF,"python, opencv, psychopy","machine learning, computer vision, image processing, health ai, Infant vision","The measurement of visual function in infants and young children is crucial for early detection and treatment of eye conditions that can lead to visual deprivation and affect visual development. However, the limited cooperation and inability to provide verbal responses in infants make the accurate and efficient measurement of visual function challenging. This project aims to develop a ready-to-deploy application suite that will address these limitations by integrating hardware devices or deep learning-based infant eye trackers, and visual stimuli analysis into a user-friendly graphical user interface (GUI).",https://summerofcode.withgoogle.com/programs/2023/projects/NNz2NNsS
"PyAr : PyZombis : Enhancement in ActiveCode to Progress offline, Pygame lectures & PyScript modules",Soma Sujith,https://github.com/PyAr/PyZombis/wiki/GSoC'23-PSF-@-PyAr-PyZombis-Final-Submission-Report,"reingart, Sando, Ramiro Gallo, Federico Zuccolo",Python Software Foundation,"python, javascript, sphinx, pygame, Runestone, PyScript","python, pygame, Web Improvement, JS Local Storage","PyZombis is a community course to teach Python to the Spanish-speaking community. It is based on a Brazilian MOOC Python para Zumbis. The idea is to make an improved version of the course in Spanish, with an interactive environment for the students, that allows them to visualize and try active code on the site. I'm going to add the browser's local storage functionality which helps when in downtime/remote network connections. This will allow students to work in the course offline or with a bad internet connection. Along with this improvement in Pygame lectures and other improvements in project lectures",https://summerofcode.withgoogle.com/programs/2023/projects/ZLW0is7N
Out of Core Calculations to reduce memory uses[RADIS],Somesh Verma,https://medium.com/@1someshverma/gsoc23-openastronomy-radis-implementing-out-of-core-calculations-c67a3863c0d6,"Anand Kumar, Erwan, MinouHub",OpenAstronomy,"python, pandas, Vaex",Spectroscopy,"RADIS is a fast line-by-line code for synthesizing and fitting infrared absorption and emission spectra, such as encountered in laboratory plasmas or exoplanet atmospheres. It uses a line-by-line approach, where each absorption or emission line of a molecule is computed by accounting for the influence of environmental parameters. High-temperature spectral calculations require resolving the shape of tens of millions of lines, which is the usual performance bottleneck. RADIS implements a new algorithm to compute these lineshapes and is already one of the fastest line-by-line spectral codes available. It can also compute many different types of spectra (absorption/emission/equilibrium / non-equilibrium). However, although the algorithm is very CPU/GPU efficient, the RADIS code is still memory hungry. Databases are currently loaded in RADIS using the VAEX [3] package, but the operations to calculate the spectra are performed using the PANDAS library. VAEX is a similar table management tool to PANDAS but uses memory mapping, a zero-memory copy policy, and lazy computations for the best performance. The main goal of the current project is to refactor RADIS so that dataframes are only manipulated via the VAEX format. Potentially, this work would make it possible to compute spectral databases of up to billions of lines (hundreds of GB or terabyte-scale databases).",https://summerofcode.withgoogle.com/programs/2023/projects/pnYY9W0j
Improving the sense of scale and navigation in high energy physics event visualization,Somya Bansal,https://github.com/Somya-Bansal159/GSoC-2023,"Edward Moyse, Juraj Smieško",CERN-HSF,"angular, typescript, threejs",3D visualization,"This project aims to improve the scale and navigation inside the Phoenix application which is basically an Angular-based web application written in the ThreeJS library to visualize high-energy physics events in 3D. The application renders a detector that detects the collisions of particles that have been accelerated up to speeds comparable to that of light, along with the event data that consists of tracks, jets, missing energy, etc. after the collision. The problem statement is to improve the visualization of the event, for example, by developing a customizable and interactive cartesian grid functionality, so as to better give the idea of the locations and distances of the particles to the researchers. Also, the user should be able to view the dimensions of the individual detector parts. Apart from this, the users should be able to navigate to the individual detector parts. My plan for the first problem is to introduce a 3D cartesian grid with multiple equally spaced XY, YZ, and ZX planes, as well as, to be able to display the 3D coordinates of a point on clicking. For this, I will make use of the ThreeJS raycaster intersects. Also, I am planning to render the Euclidean distance between any two points clicked. To view the dimensions of the detector, I am planning to render the dimensions of the bounding box of the component. The solution for the second problem would be to list the detector parts and let the user select any one of them, after which it will be highlighted using a ThreeJS outline pass.",https://summerofcode.withgoogle.com/programs/2023/projects/lZhAZStY
Tor’s SnowFlake: Revitalising Snowflake's Landing Page for a Better User Experience,SoniAshish,https://gist.github.com/ashishsoniii/d139cd9b427d340342ef1ff04fae8960,"Raya راية, donuts",The Tor Project,"bootstrap, html, css, Lektor",web,"Snowflake is a pluggable transport that helps users bypass censorship and access the Tor network. It uses webRTC technology to create a peer-to-peer connection between the user's browser and a volunteer proxy server. The Tor project aims to create a new and improved website for Snowflake that provides a better user experience for both new and existing users. As the Snowflake has gained a lot of popularity recently, it has seen a significant increase in the number of visitors with various doubts and queries The existing website does not effectively address these concerns, so our goal is to create a user-friendly static & secured website that is easy to navigate and provides clear information about Snowflake and its proxies. At the End of this summer: 1. A new static website with a modern and intuitive layout for desktop and mobile devices integrated with other Tor Web products & follows tor's brand guidelines. 2. Improved Snowflake proxy guide for new and existing user 3. Ensuring the website is sustainable and easy to maintain by new contributors & developers over the long term.",https://summerofcode.withgoogle.com/programs/2023/projects/zQRvTgia
Integrate mfsBSD into the release building tools,Soobin Rho,https://wiki.freebsd.org/SummerOfCode2023Projects/IntegrateMfsBSDIntoTheReleaseBuildingTools,"jrm, Juraj Lutter",The FreeBSD Project,"C, make, Bash Shell",Build infrastructure,"This project integrates mfsBSD into the FreeBSD release tool set, creating an additional target of mfsBSD images (.img for disc and .iso for optical images) into the `/usr/src/release/Makefile`. Until now, mfsBSD only existed outside the FreeBSD release tool chain, and only the -release versions have been produced. With this project, mfsBSD images are now available at the official FreeBSD release page, and you can also build mfsBSD yourself by invoking `cd /usr/src/release && make release WITH_MFSBSD=1`, which will then create `mfsbsd-se.img` and `mfsbsd-se.iso` at `/usr/obj/usr/src/${ARCH}/release/`.",https://summerofcode.withgoogle.com/programs/2023/projects/Pw6wO1Ng
Linux backend for Virtual Desktops on Meta Quest Headsets,Soumya Ranjan Patnaik,https://github.com/SoumyaRanjanPatnaik/VirtualDesktopQuest,"Carlos Fernandez Sanz, Candela",CCExtractor Development,"rust, wayland, webrtc, Wayland Roots","vr, Virtual Desktop","Some VR headsets such as Meta's Quest 2 come with a Virtual Desktop tool that lets you connect your computer to the headset and get virtual desktops. There's a client-side application (Meta Horizon Workrooms) and a desktop-side component. The desktop-side component exists for Windows and Mac, but not for Linux. That's what we want to build. The goal is to come up with a working prototype that is good enough for early adopters to play with and other developers to join the effort.",https://summerofcode.withgoogle.com/programs/2023/projects/60fNTaAh
Move R Interface of Volesti to a New Repository,Soumya Tarafder,https://geomscale.github.io/Progress-of-Rvolesti-GSoC23/,"Vissarion Fisikopoulos, Apostolos Chalkis",GeomScale,"python, github, c++, r",Process Optimization,"The main goal of this project is to create a dedicated repository for the R interface code of Volesti, a tool developed by GeomScale for volume computation and sampling in high dimensions. Currently, both the C++ and R interface code reside in the same repository. To achieve this, the existing codebase will be split into two separate repositories. This separation will involve modifying the package description file, R documentation files and R source code files in the new R interface repository. Additionally, the existing tests will be adjusted to match the new package structure and a comprehensive set of test cases will be developed to cover all the essential features of the R interface. Furthermore, the R interface code will be updated to ensure compatibility with the latest versions. Lastly, thorough documentation will be created for the new R interface, explaining the functionality of various functions and arguments, providing practical examples of package usage and demonstrating how the R package integrates with the wider Volesti ecosystem.",https://summerofcode.withgoogle.com/programs/2023/projects/Ju6SPJP1
"Democratizing Government Documents: A Comprehensive System for Access, Discovery, and Analysis",SoumyaGupta,https://git.archive.org/soumya/gsoc_ia_1/-/blob/main/finevadoc.md,Jamie Joyce,Internet Archive,"python, postgresql, sql, spaCy","machine learning, object extraction, database administration","The objective of this project is to create a document retrieval and recommendation system powered by NLP, with an emphasis on allowing effective token extraction from massive amounts of text data. In addition to automatically identifying and retrieving related or quoted documents, the system will enable users to look for and retrieve pertinent documents based on author, date, and other metadata. To do this, we will create a set of APIs and ingestion protocols that allow text data to be parsed and tagged while utilising ensemble learning, W2V, and LSA/LDA algorithms to produce tailored suggestions based on user preferences. Additionally, we'll put in place a user-friendly front-end interface that allows API-based queries, extensive unit testing, and optimisation. A completely working document retrieval and recommendation system, as well as a strong set of APIs and ingestion protocols for processing sizable amounts of text data, will be included in our deliverables. In-depth documentation outlining the system's design, implementation, and usage policies will also be made available. Our overall goal is to offer organisations looking to extract valuable insights from their text data a creative and practical solution that will allow for improved business outcomes and more informed decision-making.",https://summerofcode.withgoogle.com/programs/2023/projects/pKvq93oa
Maintain and Port Sugar activities to Flatpak,Sparsh Goenka,https://github.com/sugarlabs/GSoC/blob/master/archives/2023/student-reports/Maintain-and-Port-Sugar-Activities-to-Flatpak.md,"Chihurumnaya Ibiam, tchx84",Sugar Labs,"python, gtk, pygame",vision,"A number of Sugar activities are bundled with Flatpak as a way to reach a broader audience within the Linux community. This project aims to keep those activities up to date and also port new sugar activities to Flatpak, including the two popular activities Pippy and Physics.",https://summerofcode.withgoogle.com/programs/2023/projects/GUSDsFPO
Astronomy using Unevenly Sampled Data,Sri Guru Datta Pisupati,https://pupperemeritus.github.io/gsoc_blog/projectreport/,"Matteo Bachetti, dhuppenkothen",OpenAstronomy,python,"astronomy, astrophysics, Time Series Analysis, X-Ray Astronomy, spectral timing, unevenly spaced time series","Stingray is a python package that provides X-ray spectral timing analysis tools to the community of astronomers around the world. X-ray data may not always be evenly spaced. For example when Earth regularly blocks the object of interest as the space telescope orbits the Earth or when the instrument has faults due to system malfunction or cosmic rays hitting the instrument sensors. When the data is evenly spaced, we can use the Fourier domain methods such as power spectrum and cross spectrum in practical time frames to decompose the signal into its various periodic elements. But when the data is unevenly spaced we cannot use the same methods. Lomb Scargle Periodograms and Cross Spectra can be used for analyzing unevenly spaced data. There are various ways to optimize the Lomb Scargle Periodogram's runtime speed such as those introduced by William H. Press and George B. Rybicki. Deliverables include Lomb Scargle Power Spectrum, Lomb Scargle Cross Spectrum, helper functions(to setup an object with certain inputs for example) and statistical functions(like time lags and phase lags).",https://summerofcode.withgoogle.com/programs/2023/projects/C8Rwdz3J
Project Explainer: Summarization using Large Language Models,Sripravallika,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/10-Sripravallika-Project-Explainer.md,Mehant K,SCoRe Lab,"python, redis, flask, html/css, pytorch, HuggingFace, Accelerate","data science, systems, Language Models, Fondation Models, Natural Language Processsing","Large Language Models are picking pace very quickly and they are turning out to be extremely good in multiple tasks. With the help of zero-shot, few-shot, and fine tuning techniques we could effectively specialize a language model for the use case. Summarization is one such use case that has been widely researched for a couple of years now. Broadly there are techniques such as Abstractive and Extractive approaches. The motive of this project proposal is to handle the summarization task (mostly Abstractive + Extractive hybrid approach) through the language model’s (foundation model) lens. This project aims to cover everything from data collection, EDA, experimenting with different language models to developing production-scale system that can take GitHub repo as reference and provide summary. One of the challenges that is novel is to use smaller sized models to achieve great performance in summarization. SCoRe Lab has been into developing solutions in the space of making user life easier with products such as D4D, Bassa, Track Pal, and others. This project will add to that portfolio and would be a great reference for AI practitioners and system developers which aims to work right from data to production-grade end product using AI and Systems.",https://summerofcode.withgoogle.com/programs/2023/projects/eJoLPhgw
Improving the Bundle Creator,Srirupa Datta,https://community.kde.org/GSoc/2023/StatusReports/SrirupaDatta,"Halla Rempt, Emmet O'Neill, Dmitry Kazakov",KDE Community,"c++, qt",end user application,"The primary format to share resources in Krita is a Resource Bundle, which is a compressed file containing all the resources together. It also contains some other information like metadata and a manifest so Krita can check there’s no errors in the file. Krita’s Bundle Creator allows one to create their own bundle from the resources of their choice. The project aims to improve the user interface of the current Bundle Creator, and allow the ability to edit bundles (which is currently not supported in Krita).",https://summerofcode.withgoogle.com/programs/2023/projects/SB6pWpuy
Make GNOME Platform Demos for Workbench,Sriyansh Shivam,https://sonichere.hashnode.dev/gsoc-2023-final-report,"Sonny Piers, Andy Holmes",GNOME Foundation,"c, linux, javascript, gtk, glib, GIO, GJS, Libportal","graphics, user interface, gtk, user experience, GLib, GIO, GJS","GOAL OF THE PROJECT: 1) Create beginner-friendly and easy-to-understand examples/demos for all widgets of GTK 4.10 and Libadwaita 1.3 to help newcomers understand how to use them effectively. 2) Provide ready-to-use code snippets of the widgets/APIs covered, making it easier for developers to integrate them into their projects. 3) Cover GLib/GIO and Libportal APIs and create relevant examples to help developers understand how to use them in their applications. 4) Create demos while taking UI and UX design concepts into account to showcase how to make aesthetically pleasing and functional user interfaces. 5) Cover GNOME HIG Patterns to ensure that the examples and demos follow the GNOME Human Interface Guidelines, making them consistent with other GNOME applications and user-friendly for users. 6) Implement Search function in Workbench 7) Implement the Keyboard-Shortcuts feature in Workbench to ease the development-workflow Overall, by providing detailed examples and demos for these APIs and widgets, developers will be able to learn how to use them more effectively, resulting in more efficient and user-friendly apps. The project would be very beneficial to GNOME and its community in the following ways: 1) Showcase GNOME platform capabilities 2) Provide an alternative to lengthy tutorials and dense API references 3) Provide quick and ready to use snippets for GNOME Developers 4) Help on-board new developers and lower the barriers to enter the community 5) Cover the widgets that lack documentation in the official documentation",https://summerofcode.withgoogle.com/programs/2023/projects/3Bjrr6So
Create a gprMax custom kernel and that can be installed in Jupyter notebook,srutanik,https://github.com/srutanik/GSoC_23,"Rania Patsia, John Hartley",gprMax,"python, cython, git, jupyter notebook, Matplotlib, PyVista","simulation software, model building, visualiztion in jupyter notebooks",gprMax is CLI interface software which is used to solve electrodynamics problems by solving Maxwell's Equations using FDTD method. It is also used to simulate Ground Penetrating Radar for various industry and academia purpose. But it's installation can become a bit cumbersome and nowadays people prefer a GUI interface. Hence I helped to develop a custom gprMax kernel which can be used to build and run models in Jupyter Notebooks. I also developed a python function that can be used to visualize the 3D geometry of the models in notebook environment.,https://summerofcode.withgoogle.com/programs/2023/projects/9kFAAx7H
Classification of body-keypose trajectories of gesture co-occurring with time expressions using GNNs,SSP,https://medium.com/@f20200731/google-summer-of-code-23-red-hen-labs-6bc683056ebf,"Peter Uhrig, Ilya Burenko",Red Hen Lab,"python, pytorch, Openpose, PRAAT","computer vision, deep learning, graph neural networks, Gesture recognition, Multimodal","This project aims to improve the previous iteration of the project where the hypothesis of it was the existence of a relation between the body gestures and the time expressions we speak and using neural networks we try to accept or reject this hypothesis. So, I proposed a new multimodal graph-based neural network architecture to classify the body keypose points by constructing a spatio-temporal graph and audio features are fused with it to converge the model to test this hypothesis. Also, suggested transfer learning to overcome the lack of data.",https://summerofcode.withgoogle.com/programs/2023/projects/989BTxO8
Refactoring Staggering Drupal CSS Codebase,stanzin norzang,https://stanzin7.github.io/myPortfolio/bondPeriod,Aditya Bathani,Drupal Association,"github, html, git, php, css, PostCss",web,"The Drupal CSS Modernization Initiative aims to upgrade Drupal's core CSS codebase using modern CSS techniques. Given the many files of CSS within the Claro theme of Drupal, the process of refactoring is expected to take several weeks. By utilizing new selectors and properties such as is(),: where(), CSS custom properties, and CSS Grid, the project will enhance Drupal's frontend design and improve the user experience. The project plan includes in-depth research, thoughtful recommendations, thorough implementation, rigorous testing, and comprehensive documentation to ensure efficient management and timely delivery. Ultimately, the project will contribute to Drupal's long-term sustainability and success by making its CSS more maintainable and robust. As part of a large-scale project for GSOC, this initiative represents an important step forward in improving Drupal's frontend development capabilities and ensuring its continued relevance in the rapidly-evolving web development landscape.",https://summerofcode.withgoogle.com/programs/2023/projects/furG843S
Development of Attractors.jl,Stefan Vayl,https://gist.github.com/StefanVaylBX2023/24e9d8bf54315e217fc272181da9b7d8,Datseris,The Julia Language,"github, julia","Numerical Analysis, Time Series Analysis, dynamical systems, Attractors, Basins, Nonlinear dynamics","The main aim of this project is to expand the capabilities of Attractors.jl. We are specifically targeting three features, which are the Minimal Fatal Shock Algorithm, Automatic Attractor Characterization, and Optimizations of the recurrence algorithm. To be more specific, these three features encompass the following aspects: a novel algorithm for predicting the behavior of arbitrary systems under critical conditions, optimization, and improvement and optimization of the existing algorithms to expand their functionality and cover the weak points. We are confident that incorporating these new features will result in substantial improvements of the Attractors.jl library and will be highly valued by the nonlinear dynamics community in Julia.",https://summerofcode.withgoogle.com/programs/2023/projects/GSsHIPiy
Automated Documentation Generation,Stoyan,https://checkstyle.org/checks.html,"Roman Ivanov, Nick Mancuso",checkstyle,"python, java, bash, Maven","automation, documentation, javadoc, Xdoc","The goal of this project is to automate the generation of documentation for checkstyle modules - checks and filters. To achieve that, multiple Doxia macros are implemented - for the examples, properties, parent module, and violation messages. These macros are then used in XDoc templates that generate the final website. Moreover, the class Javadoc of every module is to be removed in order to avoid having to keep the same documentation in sync in two places. All this achieves more accurate examples in the documentation website and less workload for developers who have to maintain the documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/IOtzfIPj
Improving Automatic Reviewer Assignment using Large Language Models For NBDT Journal,Subhankar Panda,https://medium.com/@neutrino334455/gsoc-2023-improving-automatic-reviewer-assignment-using-large-language-models-for-nbdt-journal-a-11e0068b7a0d,"Titipat Achakulvisut, Daniele Marinazzo, Björn Brembs",INCF,"python, tensorflow, numpy, pytorch, pandas, keras, HuggingFace, Google Colab, LLMs","machine learning, natural language processing","Matching papers to reviewers based on topics is a crucial task for the Neurons, Behavior, Data Analysis, and Theory (NBDT) journal. However, the current automatic reviewer assignment tool that uses SciBERT embeddings, cosine similarity, and linear programming may not capture the semantic meaning of the text accurately. This project aims to address this limitation by finetuning SciBERT on the relevant corpus of data and selecting the appropriate optimization objectives. SciBERT can learn from both the left and right contexts of words and has a vocabulary that is more suitable for scientific texts than BERT. The project will involve creating a training dataset, pre-processing it, generating the appropriate features, selecting and fine-tuning SciBERT, generating the word embeddings from the fine-tuned SciBERT and choosing the appropriate optimization objectives (Contrastive Learning, Learning to Rank Diversely, and LambdaRank) according to the dataset obtained and the subsequent evaluation of its performance. The expected outcome is an improved tool that more accurately matches papers to reviewers for the NBDT journal and can potentially be useful in other domains as well.",https://summerofcode.withgoogle.com/programs/2023/projects/4PUfTQfh
Improving and adding features of Zulip Terminal,SUBHASISH BEHERA,https://gist.github.com/Subhasish-Behera/d4401b4b140df5c0d9aea53ed1b98680,Mounil Kamlesh Shah,Zulip,"python, Urwid","MVC architecture, Client-Side Architecture","Zulip Terminal is a TUI which caters to users who use Zulip through their terminal. But, many functionalities in Zulip Web App are not currently implemented in Zulip Terminal. The features/areas this project will focus on are a) Achieving the same level of notification functionality as Web App. b) Add the feature of file upload along with other related issues. c)Support muting/unmuting of users d)Support Alert-Words. Most of the issues need work on multiple areas such as event handling, UI changes/additions, Migrations etc.",https://summerofcode.withgoogle.com/programs/2023/projects/lsL9rlTY
Implement the Feature to Create and Manage VPNs in Cockpit,Subho,https://subhoghosh.com/blog/gsoc-2023,"mmarusak, Martin Pitt",Cockpit Project,"python, linux, javascript, react","web, linux, operating system, vpn, Server Administration","This project aims to develop a user-friendly interface for configuring and managing popular VPN protocols like WireGuard and OpenVPN on Linux servers within the Cockpit web interface. By simplifying the process of setting up and managing VPNs on Linux servers, this project will enable users to easily and securely connect to their servers. I will collaborate with the Cockpit community to develop the necessary backend functionality and user interface features for the project.",https://summerofcode.withgoogle.com/programs/2023/projects/SF3rQQZc
Qt5 Application to Visualise/ Simulate CAN bus traffic using Kuksa.val,Suchinton Chakravarty,https://suchinton.github.io/articles/final-report/,"Walt Miner, Jan-Simon Möller, Scott Murray, Marius Vlad",The Linux Foundation,"python, qt5, Kuksa.val, AGL","Embedded Linux, CAN bus, Kuksa","The objective of this project is to develop a Qt5 application that will allow the end-users to emit signals using Kuksa.val to visualize and interact with AGL Demo applications, such as the IC, IVI, HVAC and the Green Machine, that display CAN data through Kuksa.val.",https://summerofcode.withgoogle.com/programs/2023/projects/4GykHUGj
pgagroal: Query Cache,Sudeep Reddy,https://github.com/agroal/pgagroal/discussions/376,"Jesper Pedersen, Nikita Bugrovsky",PostgreSQL,"c, postgresql, valgrind, uthash, linux perf","database, System Design, Cache","This project involves adding a query caching feature to pgagroal, a high-performance connection pool for PostgreSQL. The goal is to enhance application performance by reducing data retrieval time, minimising database load, cutting down on network traffic, and achieving cost savings. This project is experimental and involves testing different query caching methods and comparing their effectiveness to not having one.",https://summerofcode.withgoogle.com/programs/2023/projects/5S8jEX0h
LG Gesture and Voice Control,Sudhanyo Chatterjee,https://github.com/Sudhanyo/LG-Gesture-And-Voice-Control,"Andreuibanez, Gabry, Merul Dhiman, Alejandro Illán Marcos",Liquid Galaxy project,"android, java, kotlin, flutter, dart","machine learning, android, ux, Gesture Control, Mobile application","The LG Gesture and Voice Control Project aims to improve the control of the Liquid Galaxy Rig by providing a more comprehensive solution using voice commands, body poses, and hand gestures. The project will consist of two parts: the LG Gesture and Voice Control App and the LG Gesture and Voice Control Library. The core technology used to make the above would be Flutter (Dart), and incorporate various APIs, especially ML Kit and Geocoding. The app will offer a more intuitive approach for users to interact with the Liquid Galaxy setup, making it simpler to explore and navigate. Users will be able to control the Liquid Galaxy without physically touching any devices, increasing the immersive experience. The LG Gesture and Voice Control Library will allow for the implementation of the app's key functionalities in other Liquid Galaxy apps and projects, providing a wider range of situations for implementation. One potential application for the library is incorporating it into the previously built Liquid Galaxy Controller to provide additional functionality for voice and gesture control, enhancing the user experience.",https://summerofcode.withgoogle.com/programs/2023/projects/q7XviTSE
Expanding Support for GCP Resources with Modularized Crawler,Sudipto Baral,https://summerofcode.sudiptobaral.com/,"Maksim Shudrak, underhill, Guillaume",GCP Scanner,"python, gcp, cloud","Infrasturcture as Code, security tool","GCP Scanner is a crucial tool for security engineers, providing insights into the access levels of various GCloud credentials. This project proposal focuses on enhancing the GCP Scanner by supporting scanning for additional GCP resources such as Cloud Run, Cloud DNS, Datastore, etc. Additionally, a plan for refactoring the crawler and unit tests for better maintainability and scalability is proposed. It also includes my relevant experience, contributions, and qualifications to maintain and improve the GCP Scanner.",https://summerofcode.withgoogle.com/programs/2023/projects/mt5Rm2H9
Interactive Quiz Game for Beginner Coding Education using Luna&Cat IDE,Sufeen Shaikh,https://share.catrob.at/pocketcode/project/f2c8723b-b9fa-49aa-89cc-7a5b7ea44663,"Maria Seiser, Sarina Gursch",International Catrobat Association,"Luna&Cat IDE app, Catrobat's visual programming language, 2D game design principles, Smart TV compatibility","mobile app, visual programming, game development, Licenses and open-source development.","The principal objective of this GSoC project is to conceive and develop an educational game that will serve as an interactive and captivating medium for introducing novice learners to the fundamental principles of coding, leveraging the Luna&Cat IDE app. By integrating interactive challenges and a visually captivating interface, learners will be provided with hands-on experience in utilizing the Catrobat language, thereby fostering the development of their problem-solving acumen and logical reasoning abilities. The overarching aim of this endeavour is to empower aspiring learners with the essential skills and knowledge required to embark on their coding journey, thus rendering programming an accessible and enjoyable pursuit.",https://summerofcode.withgoogle.com/programs/2023/projects/MQ4HCoij
Improved Continuous Integration for Reactome,Sukanya Krishna,https://docs.google.com/document/d/1-XuX4gTXukKFAE-t_H5ZYC2auqsg7EO3Tq9jQIEACZs/edit,adamjohnwright,Open Genome Informatics,"java, github, docker, kubernetes, jenkins, bash, aws","web, continuous integration, Continuous Deployment","Currently, at the Ontario Institute of Cancer Research, Jenkins is being used to run the release pipelines and this project proposes moving the system into a more automated format – to use Docker containers with a CI/CD-based system. In the standard release process, as project code will be built and pushed to the main branch for each GitHub repository, as a result, multiple dependencies would also be triggered to be built as well. In this way, we will know if a change in a dependency has correctly integrated into the broader code base. A lot of this testing is done manually, so automating this system can make the time frame for making a release much smaller. With a continuous integration system, we will integrate these artifacts with the release ETL (Extract Transform Load) pipelines.",https://summerofcode.withgoogle.com/programs/2023/projects/FNZtunYS
Real-time lossless data compression for the FASER experiment,Sumalyo Datta,https://gist.github.com/Sumalyo/1fbb17299c3dd3195cde10786409dd27,"Brian Petersen, Claire Antel",CERN-HSF,c++,data compression,"This project aims to add support for real-time lossless compression libraries and algorithms in the data acquisition system that is being used for the FASER experiment, to reduce storage costs. This would be done after thorough exploration and experimentation, identifying suitable compression libraries which can be integrated seamlessly into the system. Detailed documentation of the entire process and support for the decompression of compressed data (for physics analysis) will also be provided.",https://summerofcode.withgoogle.com/programs/2023/projects/6JxnmPQ0
Implementation of Web Interface of Retroshare,Sumit Kumar Soni,https://blog.freifunk.net/2023/08/27/gsoc23-implementation-of-web-interface-of-retroshare-final-report/,"Cyril Soler, G10h4ck",freifunk,"javascript, c++, Mithril.js","web, Decentralized Social Network","RetroShare is a C++ software program that comprises a headless lib called ""libretroshare"". This lib is utilized to implement Retroshare application for various platforms. Retroshare also has a web interface which communicates with libretroshare using a JSON API that is automatically generated and contains all necessary functions for sending and receiving data from the software. The aim of my involvement in this year’s GSoC program is to create the remaining interface of the Retroshare's Web Interface. I will develop a list of features such as creating panels for software configuration, managing shared files, directories etc and will also fix the existing ones such as Files, Mail, Forums, Channel section etc.",https://summerofcode.withgoogle.com/programs/2023/projects/tFSIOQNm
Re-optimization using JITLink,Sunho Kim,https://gist.github.com/sunho/bbbf7c415ea4e16d37bec5cea8adce5a,"Vassil Vassilev, Stefan Gränitz, lhames",LLVM Compiler Infrastructure,"llvm, JIT","compiler, Code Optimization","In Just-In-Time compilers we often choose a low optimization level to minimize compile time and improve launch times and latencies, however some functions (which we call hot functions) are used very frequently and for these functions it is worth optimizing more heavily. In general hot functions can only be identified at runtime (different inputs will cause different functions to become hot), so the aim of the reoptimization project is to build infrastructure to (1) detect hot functions at runtime and (2) compile them a second time at a higher optimization level, hence the name ""re-optimization"". There are many possible approaches to both parts of this problem. E.g. hot functions could be identified by sampling, or using existing profiling infrastructure, or by implementing custom instrumentation. Reoptimization could be applied to whole functions, or outlining could be used to enable optimization of portions of functions. Re-entry into the JIT infrastructure from JIT’d code might be implemented on top of existing lazy compilation, or via a custom path. Whatever design is adopted, the goal is that the infrastructure should be generic so that it can be used by other LLVM API clients, and should support out-of-process JIT-compilation (so some of the solution will be implemented in the ORC runtime).",https://summerofcode.withgoogle.com/programs/2023/projects/4vqXC8Ez
Improvements in EvalAI User Interface,Suryansh Pathak,https://medium.com/@suryanshpathak5545/gsoc-2023-with-cloudcv-8cf9c8ae3d05,"Gunjan Chhablani, Rahul-Singh, Gautam Jajoo",CloudCV,"python, docker, angularjs, Dajngo",VQA,"This project aims to enhance and optimize the existing platform by implementing several important features and improvements. These changes include the addition of domains, tags, and a prize and sponsor page, as well as the introduction of a deregister process, a revamped profile page with a new tabular UI design, a participant team approval feature, and the inclusion of GMT time stamps and many more features.",https://summerofcode.withgoogle.com/programs/2023/projects/oPOQoAJ7
Support CycloneDX report,Sushant Kumar,https://github.com/its-sushant/GSoC-23,"Gaurav Mishra, Avinal Kumar, HastagAB, Kaushlendra",FOSSology,"python, postgresql, c++, php","license compliance, SBOM","Currently, FOSSology generates SBOM in SPDX format, which allows for integration with various tools. However, CycloneDX is another popular format for generating SBOMs. By integrating CycloneDX report generation in FOSSology, it will be possible to work with other tools that use CycloneDX. Although a PHP library exists for generating CycloneDX reports, it cannot be used because it is licensed under Apache-2.0, while FOSSology is under GPL-2.0. Therefore, a custom implementation of CycloneDX report generation in FOSSology is necessary. So the main goal of this project focuses on the implementation of CycloneDX report generation in FOSSology.",https://summerofcode.withgoogle.com/programs/2023/projects/DrUld2iF
Advancements in 3D Cellular Microscopy Imaging Through Fine-Tuned CellSAM and DevoNet Models,Sushmanth Reddy Mereddy,https://gist.github.com/sushmanthreddy/618e642d2adfc6b58b6b5df0e9dbd3cd,"Jesse Parent, Bradly Alicea, Jiahang Li, Mayukh Deb",INCF,"python, pytorch, chainer, topological data analysis","machine learning, computer vision, deep learning, Graph Neural Network","This project centers on the enhancement and integration of the CellSAM and DevoNet models to elevate the analysis of 3D microscopy images stored in TIFF format. CellSAM, initially a segment-anything model, was fine-tuned to allow promptable segmentation of cellular structures in microscopy images. Conversely, DevoNet, a dual vision encoder model, operates seamlessly on 3D TIFF files. One encoder is trained on segmentation maps while the other specializes in analyzing the centroid position of cells. This synchronized operation aids in the precise calculation of cellular volume, area, and centroid locations. The collaborative mechanism between the fine-tuned CellSAM and DevoNet models provides a robust framework for more accurate and insightful analysis of 3D cellular microscopy images, thereby broadening the understanding of cellular morphologies and interactions within a three-dimensional space.",https://summerofcode.withgoogle.com/programs/2023/projects/ecYYjkHc
Enhance CMA-ES,Suvarsh,https://docs.google.com/document/d/1v3YDuYgO4iW2FKMdtpjkEjGUtgkf35lOi-DdSWk689w/edit?usp=sharing,Marcus Edel,mlpack,c++,"machine learning, linear algebra, optimization, CMA-ES","Covariance Matrix Adaptation Evolution Strategy (CMA-ES) is an evolutionary strategy which updates the covariance matrix of a normal search distribution. It is used for the optimization of non-linear and non-convex functions. The aim of this project is to implement the following algorithms which enhance the performance of (vanilla/plain) CMA-ES: Self-adaptive surrogate-assisted covariance matrix adaptation evolution strategy (saACM-ES), a Restart CMA Evolution Strategy with increasing population size (IPOP-CMA-ES), and Active Covariance Matrix Adaptation (Active-CMA-ES). The API design of each should match that of the rest of the code base. In addition to these, appropriate tests and documentation shall be implemented.",https://summerofcode.withgoogle.com/programs/2023/projects/8OY3OEEn
Bug Logging Tool,Swapnil Shinde,https://gist.github.com/AtmegaBuzz/512a85827b5cc993e35c274dcbada669,"Aryan Ranjan, DonnieBLT",OWASP Foundation,"python, django, Ethereum, Tailwind","backend, blockchain, smart-contracts","The primary objective of this proposal is to: 1. Enhance the user interface for new designs in Tailwind, thereby optimizing the user experience. In order to achieve this, we will be developing APIs for BLT Flutter, which will provide greater flexibility and scalability to our system. 2. Additionally, I plan to implement an independent blockchain, which will enable us to create our own cryptocurrency, BACON coin. This will allow us to incentivize our testers whenever they receive likes on the bugs they post, thereby driving greater engagement and participation on our platform.",https://summerofcode.withgoogle.com/programs/2023/projects/FrMdpNvR
IDE Plugins for editing vela applications,Swastik Gour,https://gist.github.com/swastik959/913bdca221f6f4c5283c4104846d834b,Somefive,CNCF,"golang, kubernetes, KubeVela, CUElang","web, cloud, Parsing, Plugins, Vscode, jetbrains","One possible way to use the Kubernetes API to connect to the KubeVela Control Plane in the background and fetch the required information like X-Definitions, ComponentDefinitions, TraitDefinitions, PolicyDefinitions, and WorkflowStepDefinitions. The plugin can then use this information to provide syntax highlighting and autocompletion for these definitions in the YAML files. To preview the rendering result of components and traits, the plugin can use the Kubernetes API to create a dry-run of the KubeVela application on the remote cluster. The output can be displayed in the IDE to give users an idea of how the application will look when it's deployed. To compare the difference between the current application configuration and the corresponding one on the remote cluster, the plugin can use the Kubernetes API to fetch the current configuration and compare it with the local one. The differences can be highlighted in the IDE for easy identification. To preview the selected clusters by the topology policy, the plugin can use the Kubernetes API to fetch the list of clusters and display them in the IDE. The plugin can also use the Kubernetes API to fetch the topology policy and apply it to the list of clusters to display the selected clusters. For ComponentDefinition and TraitDefinition, the plugin can use the CUE language to provide validation for the CUE input and preview the rendering result. The plugin can also use the Kubernetes API to fetch the ComponentDefinition and TraitDefinition and display them in the IDE for reference.",https://summerofcode.withgoogle.com/programs/2023/projects/ne8pFt1F
Rust bindings for libnbd,Tage Johansson,https://gist.github.com/tage64/73972c2452092c05e6d0017cd448c75d,Richard Jones,QEMU,"c, rust, qemu, ocaml",virtualization,"Network Block Device (NBD) is a protocol for exporting block devices, either between processes or across the network. Libnbd is a client library for talking to NBD servers. Currently, this library has bindings in various languages, including C, Golang and Python, but not in Rust. This project aims to make ergonomic Rust bindings for libnbd. The bindings should be automatically generated from the API of libnbd, so they will keep in sync as the library evolves. Apart from the actual bindings, several tests and examples will be created and good documentation will be written.",https://summerofcode.withgoogle.com/programs/2023/projects/nh7sGpK6
Improvements in Clang Diagnostics,Takuya Shimizu,https://docs.google.com/document/d/1k4Jxh6ATzpFSaDgfkT7ALBCcuj6lRE-PKblt9UGuYu8/edit?usp=sharing,Timm Bäder,LLVM Compiler Infrastructure,"c++, compiler","programming language, diagnostics, compiler","Clang diagnostic is an interface for programmers that assists them in writing bug-free, efficient source codes. The aim of this proposal is to improve overall clang diagnostics and its usability by resolving existing issues labeled clang:diagnostics and possibly uncovering and resolving new issues we encounter throughout the project.",https://summerofcode.withgoogle.com/programs/2023/projects/wxRFR261
On-machine Inspection for FreeCAD,Tanausú Hernández Yanes,https://forum.freecad.org/viewtopic.php?t=78215,"Chris Hennes, sliptonic",FreeCAD,"python, G-code","optimization, 3d printing, CNC, Machining, Digital Fabrication, Measurement","On-machine Inspection (OMI) is a valuable tool used in CNC commercial manufacturing to ensure proper tolerances of the manufactured piece. This is done by attaching a probe to the tool head of the machine and scanning the surface of the finalised product to see if there are discrepancies between the expected result and actual measurements. Including such a tool on FreeCAD, which already has a dedicated set of tools for CNC milling in the Path Workbench, will not only bring it closer to proprietary solutions but even surpass some of them that don't have this feature. This would save time for the machinist and also increase the inherent accuracy of the whole process. Building upon this, sensing solutions can introduce novel approaches to improve the CAM workflow and even generate new solutions not seen before. This proposal argues for an automatized post-processing of, for example, 3D prints by milling them to correct tolerances and inherent defects of the manufacturing process like layer patterns, over-extrusion or limited resolution. For On-machine inspection, there are already commercial solutions available so it's a matter of replicating their implementations on Python for FreeCAD. For the post-processing tool, a more involved overview of optimization algorithms for closely-matching volumes will be needed but it's surely available in the literature. If not, my background in mathematics and physics should prove valuable in the development of such an algorithm. Thus, the main goals for the proposal are to prodive the FreeCAD Path Workbench with two new tools, On-machine Inspection and automatized post-processing of already manufactured pieces, and also to properly test and document these new tools in the FreeCAD wiki.",https://summerofcode.withgoogle.com/programs/2023/projects/gqlTqNAb
FURY: SDF-based uncertainty representation for dMRI glyphs,Tania Castillo,https://gist.github.com/tvcastillod/4587f68cd6d6072e3932da799fc119ff,"Javier Guaje, Eleftherios Garyfallidis",Python Software Foundation,"python, Vtk, GLSL, FURY","sdf, Computer Graphics and Visualization, dMRI glyphs, ray marching","This project aims to implement a methodological approach to further improve the visualization of DTI tensors and HARDI ODFs glyphs by using well-established techniques in the field of computer graphics such as billboarding, signed distance functions (SDFs), and ray marching. In addition, it is proposed to visualize the uncertainty associated with the DTI model.",https://summerofcode.withgoogle.com/programs/2023/projects/ymwnLwtT
Add Acrostic Puzzles to GNOME Crosswords,Tanmay Patil,https://docs.google.com/document/d/1EPvboKOfs8Ry9fWKEUzOI7metTBehOkF2mfus4SIr5w/edit,jrb,GNOME Foundation,"c, gtk","game, gui, application","This project would start by extending a library called libipuz. This library loads and saves puzzles from the free ipuz file format. They would add support to load Acrostics from disk. Testing support will also be added. Once the files are loading, they would add support to the game itself through widget work. They'd have to write two custom widgets. First, they would write an answer widget that contains a sub-grid and links styles with the main grid. Then they'd modify the clue row widget for acrostics to support the different types of clues. As a final step, a separate widget will be written to add a custom layout for acrostics. Given those acrostics behave differently than crosswords, we want to lay them out differently. This can be done either by extending the existing custom widget, or them writing their own.",https://summerofcode.withgoogle.com/programs/2023/projects/Dj3YZXU4
Improve the development experience,Tanmoy Sarkar,https://blog.circuitverse.org/posts/tanmoy_sarkar_final_report/,"Vedant Jain, SGarg",CircuitVerse.org,"ruby, docker, bash, rails, Gitpod, github codespaces","Development Experience Improvement, remote development platform integration","This project is dedicated to streamlining and enhancing the CircuitVerse development experience. Our primary objective is to simplify the setup of the development environment and streamline the coding process, ultimately making it more efficient. Furthermore, we aim to bolster the quality of our test cases and optimize the continuous integration (CI) workflow, which will, in turn, reduce the time required for code reviews by our maintainers. -- Throughout this project, our key objectives include: 1. Integrating the Ruby Debugger 2. Incorporating Solargraph Language Server Protocol (LSP) and Crafting YARD Documentation 3. Integrating Vite Rails for Improved Development Workflow 4. Incorporating RBS in the Project and Implementing Static Type Checking in CI 5. Implementing Undercover CI for Enhanced Code Coverage Analysis 6. Enhancing Unit Testcase Coverage 7. Adding Missing Integration Testcases 8. Enhancing the Remote Development Platform (GitHub Codespaces, Gitpod) 9. Improving the Docker Development Setup 10. Enhancing Setup Documentation for Developers",https://summerofcode.withgoogle.com/programs/2023/projects/HREzTBkH
Expanding Reinforcement Learning in mlpack: DDPG and TD3 Agents Integration,Tarek Elsayed,https://github.com/tareknaser/GSoC23-mlpack-RL-Report,"Marcus Edel, Shubham Agrawal",mlpack,c++,"reinforcement learning, Policy Gradients","This project's primary objective was to enrich the mlpack reinforcement learning framework by incorporating new agents, specifically DDPG and TD3, complemented by comprehensive testing and documentation.",https://summerofcode.withgoogle.com/programs/2023/projects/mun1rpuI
Replace OpenGL by a multi-API rendering library in Splash.,Tarek Yasser,https://sat-mtl.gitlab.io/collaborations/google-summer-of-code/posts/2023-contributions/knockerpulsar/replace-opengl-by-a-multi-api-rendering-library/,"Christian Frisson (SAT), Emmanuel Durand, Jean-Michaël Celerier, Christian Frisson, paperManu",Society for Arts and Technology (SAT),"opengl, c++, cmake, raspberry pi, ImGui, port","graphics, Porting, Refactoring","The Splash projection mapping software allows for controlling multiple video projectors together to build a single projection. It is able to adapt to virtually any real geometry, as long as the surface is diffuse. Its rendering engine is built using the OpenGL API. It currently runs on platforms capable of running Linux and handling an OpenGL 4.5 context, and has been tested successfully on x86_64 (with NVIDIA, AMD and Intel graphic cards) and aarch64 (with NVIDIA graphic cards). However to be able to: a) optimize it further and b) support more platforms (for example Raspberry Pi), it would be interesting to support more graphics API. To do this it is envisioned to replace direct use of OpenGL with an intermediate, multi-API rendering library. Work Done: 1) Investigating available rendering libraries and APIs supported by the Raspberry Pi 4. 2) Modifying Splash's OpenGL 4.5 code to work with OpenGL ES and thus the Raspberry Pi 4. 3) Merging the old OpenGL and the new OpenGL ES codepaths to allow one binary to run both. 4). Pulling out graphics code such that application classes are only responsible for application logic, they just use the provided graphics API specific implementation. 5) Rudamentary performance profiling. 6) Bug fixes to application and graphics code.",https://summerofcode.withgoogle.com/programs/2023/projects/UlGCj7qL
The Sample Platform Project,Tarun Arora,https://github.com/CCExtractor/sample-platform,"canihavesomecoffee, thealphadollar",CCExtractor Development,"python, gcp, sqlalchemy","web, cloud","This proposal outlines several key areas for improvement in the Sample Platform, which is CCExtractor's platform for managing tests, uploading samples, running regression tests, and more. The proposal highlights the need to regularly update code with stable packages for compatibility and security, address bugs and improve functionality such as status reporting to GitHub, implement effective CI/CD, enhance artifact download, and introduce a regression finder feature. The proposal also discusses the importance of Sample Platform in maintaining the stability of CCExtractor and ensuring safe changes in pull requests. To implement these goals, the proposal suggests deprecating support for Python 3.7 and supporting Python 3.10 and 3.11, replacing outdated software, upgrading to Flask 2, and fixing various technical issues with the platform.",https://summerofcode.withgoogle.com/programs/2023/projects/AZXlLugd
Sibling VM communication in vhost-user-vsock,techiepriyansh,https://gist.github.com/techiepriyansh/d11a56152abb496f009c0b3b374a91fd,"Stefano Garzarella, German Maglione",QEMU,rust,virtualization,The vhost-user-vsock Rust application emulates a virtio-vsock device in an external process and provides the hybrid VSOCK interface over AF_UNIX introduced by Firecracker. The goal of the project is to extend this application to support sibling VM communication.,https://summerofcode.withgoogle.com/programs/2023/projects/MYtudh2C
Borg Collective: Vorta Testing and UI Improvements,TedLawson,https://docs.google.com/document/d/1QaIWhVH5N3BUE-XpPOkTrQeSe7ivKmYTipYydtlLJgE/edit?usp=sharing,"Manuel Riel, Thomas Waldmann",Python Software Foundation,"python, shell, unix, pyqt, Pytest","gui, unit testing, Integration testing, Backup","In this proposal, I outline three projects. The following is a brief outline of each project problem, solution, and set of deliverables: Project 1) Improving Test Coverage Problem: Vorta has a current test code coverage of 72%, and we would like to get this in the 80% - 85% range. Additionally, current testing files need more a consistent file structure and organization. Solution: Work with organization mentors to prioritize test code coverage. Create unit and integration tests to reach our target code coverage. Reorganize and restructure testing file. Deliverables: At least 80% code coverage, with a stretch goal of 85%. Test files separated into unit tests vs integration tests. Consistency in file naming and structure across all test files. Project 2) Implement Profile Sidebar Problem: The current profile selector and setting tab implementation mixes global setting with profile specific settings. Solution: Move the profile selector and settings button to a collapsible sidebar. The settings button opens a new interface with options relating to global settings and profile management, while the individual profile buttons open to profile specific settings. Deliverables: A new sidebar with profile selector and setting button, as well as a new setting interface. Unit and integration testing accompanying all new features. Project 3: Test on Live Borg Binary Problem: Currently we test on static mock files of Borg JSON output. This task would improve testing to run on actual Borg versions/binaries. Solution: Test multiple versions of Borg using Tox to simplify testing. Implement these changes in setup.cfg Deliverables: CICD running tests on live Borg binaries with > 99% success rate. Include the option to run existing integration tests locally. Include thorough documentation of this process.",https://summerofcode.withgoogle.com/programs/2023/projects/tPPTWXia
Improve maritime support in Gazebo,Tejal Barnwal,https://gist.github.com/tejalbarnwal/3367d8ff93ae48c7df949e4cca60c27c#file-work_summary-md,"Carlos Aguero, Michael M",Open Robotics,"linux, git, cpp","robotics, maritime simulation","The goal of this project is to extend the simulation capabilities of Gazebo in the maritime domain. Some examples of potential ideas are wave rendering, reference worlds, etc. See LRAUV, MBZIRC, VORC, or VRX for examples of maritime projects.",https://summerofcode.withgoogle.com/programs/2023/projects/G0iveggC
Eclipse Vert.x client for Apache Pinot,thefallenangel,https://vertx.io/blog/soc-vertx-pinot-client/,Thomas Segismont,Eclipse Foundation,"java, Vert.X, Apache Pinot","web, big data",Eclipse Vert.x is a toolkit to build reactive applications on the Java virtual machine. It provides asynchronous and non-blocking clients for different types of databases. Apache Pinot is a realtime distributed datastore for analytics workloads. The Apache Pinot Java Client uses AsyncHttpClient as the default transport and is cumbersome to use in Eclipse Vert.x applications. This project proposes to create a vertx-pinot-client extension. This extension will be a lightweight wrapper around the existing Pinot Java client. It will also offer an alternative transport for the client using vertx-web-client. This will make the Apache Pinot more accessible to Vert.x users.,https://summerofcode.withgoogle.com/programs/2023/projects/av8RmOiu
Draw On Body Diagram,Thembo Jonathan,https://medium.com/@jonathanthembo123/gsoc-2023-project-o3-draw-on-body-diagram-app-final-evaluation-81655820d0bc,"Jayasanka Weerasinghe, Heshan Andrews",OpenMRS,"javascript, java, react, sql, typescript, Microfrontend","web, graphics, ui/ux, Microfront-end, Design Thinking","OpenMRS is a medical record system that has previously allowed the uploading and visualisation of patient conditions through diagrams. This feature has been critical in helping doctors better explain patient conditions to their patients. However, the module lacked certain essential functionalities that could improve the user experience. Therefore, this project aims to improve the diagramming feature in OpenMRS by allowing the upload of any diagram as an image, annotation of certain areas of the diagram with different shapes, saving and retrieving these diagrams, and additionally downloading them as an image with the edited annotations. The project has two parts, essential and desirable objectives. The essential objectives aim to provide the basic functionalities for uploading and editing diagrams while the desirable objectives enhance the user experience by adding more features. Essential Objectives: Allow users to upload any diagram as an image to the module Enable users to annotate certain areas of the diagram with different shapes such as circles, squares, and single points, etc.. Allow users to save the annotated diagrams for future reference Enable users to retrieve diagrams from a list of already saved ones Desirable Objectives: Allow users to draw free shapes on the diagram and annotate them with a description text Enable users to download the diagrams as images with the edited annotations, allowing for easy sharing and printing.",https://summerofcode.withgoogle.com/programs/2023/projects/kLIvQ2VW
Linux Syscalls: A Tale of Two Binaries,Theodore Preduta,https://github.com/6167656e74323431/gsoc-netbsd-linux-emulation/blob/trunk/README.md,zoulasc,The NetBSD Foundation,c,"operating systems, emulation","NetBSD's syscall emulation was implemented with individual programs in mind, and so lacks predictability. By taking a more systematic approach to testing and syscall implementation, this project aims to add support for Go binaries.",https://summerofcode.withgoogle.com/programs/2023/projects/HkphWKeE
RocketMQ DLedger Controller Performance Optimization,TheR1sing3un,https://github.com/TheR1sing3un/GSoC,"RongtongJin, nize",Apache Software Foundation,"java, big data, Raft, chaos, Message Queue","big data, message queue","Based on the performance bottleneck issues in the current mode of RocketMQ, implement a high-performance, highly maintainable new version of the Controller module that provides low-latency master-slave switching capabilities, improves the upper limit of the number of brokers that a Controller node is responsible for, and uses the high-performance optimization of DLedger. I plan to optimize its performance in four directions：refactor the usage of DLedger on the Controller side, refactor the request interaction logic, multithreaded optimization, comprehensive correctness testing and performance testing. After this optimization is completed, the community will be provided with a high performance controller module and complete documentation and test reports",https://summerofcode.withgoogle.com/programs/2023/projects/ShSzQCKe
IoT Physics lab,Thomas Kampouris,https://github.com/tkampo/DIY-Physics-IoT/tree/patch-1/GSoC%202023,"Panagiotis Koustoumpardis, Hariton Polatoglou",Open Technologies Alliance - GFOSS,"c++, mqtt, Sensors, esp8266, Actuators, Circuits","education, iot, ThingsBoard, Physics Lab, Physics Experiments","The project idea aims at making the code for the ESP8266 based NodeMCU, in order to make an IoT network of sensors and actuators for different experiments. This network will receive and send data from and to the microcontroller and transmit them through the Internet with the MQTT protocol to the user. This will be achieved with the help of ThingsBoard Community edition, where the microcontroller will send and receive data which will be displayed in an online interface. A total of five different sensors and actuators will be implemented in this project, each controlled independently from their own microprocessor and displayed in five different online dashboards. Extensive documentation and step-by-step instructions on how to build all the different experiment setups will be written and provided for everyone.",https://summerofcode.withgoogle.com/programs/2023/projects/18LbT5uc
Automatic Differentiation in the Faust Compiler,Thomas Rushton,https://github.com/grame-cncm/faust/pull/939,"sletz, Agathe Herrou, David Braun",GRAME,"c++, Faust","machine learning, digital signal processing, Audio synthesis",Support for differentiable Faust algorithms is currently provided by an external JAX backend. The aim of this project is to add automatic differentiation capabilities to the Faust compiler with a view to enabling a variety of machine learning approaches to digital audio synthesis and signal processing directly within the Faust language.,https://summerofcode.withgoogle.com/programs/2023/projects/v91Az2k0
Expanding binary compatibility mode,Tianyi Liu,https://github.com/i-Pear/GSoC-Expanding-App-Compat,"RazvanD, Simon Kuenzer, Stefan Jumarea",Unikraft,"c, operating systems","operating systems, cloud, Binary Compatibility, Unikernel","One of the weak points of most unikernel projects has always been application support, often requiring that applications be ported to the target unikernel OS. In this area, Unikraft has made significant progress by prioritizing POSIX compatibility. Through its binary compatibility mode, Unikraft allows unmodified ELFs to be executed, with resulting syscalls wrapped and redirected to the Unikraft core via the app-elfloader. Currently, Unikraft supports loading both statically and dynamically linked ELFs in binary compatibility mode. However, Unikraft has not been able to fully support all behaviors of glibc and user applications, which causes certain programs to fail in initializing or crash. Additionally, running applications in binary compatibility mode incurs performance loss compared to ported programs, due to the TLS switching and system interrupts caused by binary syscalls. To address the issues mentioned above, this project focuses on expanding Unikraft's binary compatibility mode by: * Using vDSO (virtual dynamic shared object) and vsyscall (virtual system call) to bypass binary syscalls. * Expanding supported syscalls to provide compatibility for a wider range of applications. * Adding AArch64 architecture support for app-elfloader and syscall-shim layer. * Implementing a faster way to port new applications by externally compiling. * Establishing a CI/CD system to ensure that new commits do not break libc compatibility.",https://summerofcode.withgoogle.com/programs/2023/projects/Bl7ARfep
Unlocking the Full Potential of OpenCV with G-API and Python,Tianyu Yang,https://github.com/tianyu-yang1998/tutorials-py.git,Dmitry Matveev,OpenCV,"Python, Jupyter, Doxygen, CMake, English, presentation and storytelling skills.",vision,"The objective of this project is to create a comprehensive Python tutorial on G-API, a graph execution framework for OpenCV. The tutorial will cover fundamental and advanced concepts related to G-API, such as defining and executing graphs, developing custom operations and kernels, and utilizing numpy inter-op. The anticipated result is a series of new tutorial chapters integrated into the OpenCV documentation, ideally structured in a similar format to the existing documentation. This tutorial will enable users to leverage the power of G-API more effectively, along with optimized image processing tasks and improved performance. The G-API framework, developed by OpenCVQ, is designed to streamline image processing algorithm flow. Its primary objective is to create graphs that can support multiple backends, resulting in lightweight and fast image processing tasks. For instance, when running the algorithm flow on a GPU, optimized video memory access can reduce system overhead and enhance computational speed. To use G-API effectively, it is essential to (1) understand the framework's overall architecture and features, (2) compare its processing algorithms to those of other common frameworks, identify the unique benefits of each G-API function, and (3) combine these advantages and new features to enhance existing tutorials.",https://summerofcode.withgoogle.com/programs/2023/projects/vLUI85cB
Improving Relational Assumptions in SymPy’s New Assumptions,Tilo Reneau-Cardoso,https://github.com/sympy/sympy/wiki/GSoC-2023-Report-Tilo-Reneau%E2%80%90Cardoso:-Improving-Relational-Assumptions-in-SymPy%E2%80%99s-New-Assumptions,"Aaron Meurer, Francesco Bonazzi",SymPy,python,"logic, Computer Algebra System, Assumptions","The assumption system underlying SymPy is very important to the library's function. However, it has several flaws, including sluggish performance and being overly interconnected with the core of SymPy. As a result of its flaws, a new assumption system, the ""new assumptions,"" was proposed about a decade ago. Since then, the community has made slow but incremental progress in transitioning to and improving this new system. One of the main reasons for this change is that the old assumption system doesn't allow for relation assumptions to be expressed. While the new assumption system does support relational assumptions, the current implementation is very limited. My project aims to address this limitation by enabling the new assumption system to make inferences based on equalities and inequalities, such as ""if x > 0, then x must be positive.""",https://summerofcode.withgoogle.com/programs/2023/projects/vqchZ67V
PixelationFilter,Tim Celec,https://gist.github.com/exland/40ac1e469f9785c8f69d09a9be733828,"Thorsten Bandel, Julia Herold",International Catrobat Association,kotlin,vision,"The idea of the project is to create a Tool that pixelates the photo/layer. The user would have the possibility to change the number of colors, the filter would sample. My inspiration for the project comes from a paper I found while browsing google schools: https://www.sciencedirect.com/science/article/pii/S0097849313000046.",https://summerofcode.withgoogle.com/programs/2023/projects/h9pclpzH
Flatpak synching between machines,Tim F. Brüggemann,https://gitlab.gnome.org/Cogitri/flatsync/-/merge_requests?scope=all&state=merged&author_username=TibiIius,Rasmus Thomsen,GNOME Foundation,"rust, Flatpak, Dbus, GTK4","desktop, cloud, Synchronization","Currently, it’s rather bothersome to sync the Flatpak packages installed on multiple systems: One either has to manually keep them in sync or use the CLI to get a list of installed Flatpaks. As such, it would be useful to have an application that can do this for users. The go-to approach would be a D-Bus daemon that automatically (either on changes or periodically) creates a list of installed Flatpaks and pushes it to a service like GitHub Gists. If a new version is detected (which comes from a different system), the daemon would fetch it and adjust the local installation accordingly. Additionally, there should be a GUI application that can interface with the daemon for setup and configuration. A CLI application for usage independent of the DE and manual syncing would be a plus.",https://summerofcode.withgoogle.com/programs/2023/projects/NZ9FuzQL
B0Bot - CyberSecurity News API,Tingyuan(Leon) Cui,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/11-Tingyuan-Leon-Cui-B0Bot.md,"Seniya, Niweera",SCoRe Lab,"python, OpenAI, Flask API, ChatGPT, Langchain, MongoDB Atlas","web, api, LLM","In this project, our objective is to develop a CyberSecurity News API tailored for automated bots on social media platforms. It is a cutting-edge Flask-based API that grants seamless access to the latest cybersecurity and hacker news. Users can effortlessly retrieve news articles either through specific keywords or without, streamlining the information acquisition process. Once a user requests our API, it retrieves news data from our knowledge base and feeds it to ChatGPT. After ChatGPT processes the data, the API obtains the response and returns it in JSON format.",https://summerofcode.withgoogle.com/programs/2023/projects/qdMmh9Hb
Rewrite LaTeX Parser,Tirthankar Mazumder,https://wermos.github.io/blog/gsoc/sympy/gsoc-2-the-final-status-report/,"Aaron Meurer, Francesco Bonazzi",SymPy,"python, lark","Parsing, cas","The current LaTeX parser is implemented in Antlr, which is a big dependency to have for a project such as SymPy. Apart from that, the current parser is also difficult to maintain and lacking in some features. This project aims to rewrite the project in Lark, which is a parser written entirely in Python, and also fix some bugs in the LaTeX parser.",https://summerofcode.withgoogle.com/programs/2023/projects/apj3AeJL
Refactor Class Components to Functional Components,Tisha Soumya,https://medium.com/@tishasoumya/refactor-class-components-to-function-components-plone-foundation-gsoc23-26cba7256808,"Nilesh, Jefferson Bledsoe",Plone Foundation,"react, Plone",web applications,"Volto is structured as a typical Redux-centered React application. The refactoring class components to functional components project is centered around using concepts of hooks to migrate class components to functional components and testing the refactored components with Cypress tests and Storybook to verify the UI is intact, after, all the tasks are delivered performing e2e testing.The lifecycle of the components should be preserved while watching out for edge cases and UX problems.Delivering appropriate documentation for the changes made.",https://summerofcode.withgoogle.com/programs/2023/projects/dvhArmDK
Vulkan API backend replacement,Tolga Yildiz,https://github.com/CGAL/cgal/issues/7669,"sloriot, Andreas Fabri",CGAL Project,"opengl, c++, qt, vulkan","graphics, Graphic APIs","CGAL has been using OpenGL API to generate its visuals in the 3D demonstrations. With recent MacOS update there, OpenGL support has ben deprecated by the mac machines. This arises a need for implementing the graphics backend in another API that is suitable for the machines that are using MacOS. Vulkan API provides flexibility for different platforms, through the course of this project the graphics backend of CGAL is going to be implemented in Vulkan. Since Qt is used for user interface, QVulkan is going to be used for Vulkan-UI context.",https://summerofcode.withgoogle.com/programs/2023/projects/CzILgtId
Quantum Generative Adversarial Networks for HEP event generation the LHC,ToMago,https://www.tommago.com/posts/gsoc23/,"ML4SCI, Alkaid Cheng, Rui Zhang",Machine Learning for Science (ML4SCI),"python, tensorflow, Cirq, Pennylane","machine learning, Quantum Computing, HEP","An important part of the analysis pipeline of high energy physics experiments is the generation of expected data from first principles. For decades, sophisticated monte carlo simulations have been performed, which are computationally very expensive and therefore pose one of the major bottlenecks in data analyses at CERN experiments. In recent years there has been an effort to explore the application of novel deep learning techniques to speed up the simulation by means of generative models. With the rise of Noisy Intermediate scale Quantum Computing (NISQ), the question comes up, if quantum machine learning can enhance existing methods. In this project we therefore explore the applicability of quantum machine learning to event simulation by means of a quantum Generative Adversarial Network.",https://summerofcode.withgoogle.com/programs/2023/projects/ggoiGDQ5
Add Automatic Tags Assignment Tools and Improve Face Recognition Engine for digiKam,TRAN Quoc Hung,https://community.kde.org/GSoc/2023/StatusReports/QuocHungTran,"GILLES CAULIER, Trung Dinh, mqualmann",KDE Community,"python, opencv, c++, cmake, gui, Qt API","computer vision, deep learning, Object Detecion","The goal of this project is to develop a deep learning model that can accurately recognize various categories of objects in digital photos, and generate corresponding keywords that can be automatically assigned and stored in digiKam's database for each photo. This will improve the efficiency of organizing and searching for photos based on their content. In addition, the facial recognition engine will be improved to increase its accuracy and reduce its inference time. The results of this work will be merged into the master branch, allowing for more reliable and effective facial recognition capabilities in the digiKam application",https://summerofcode.withgoogle.com/programs/2023/projects/RfX21ZZQ
QuTiP Virtual Lab,Trent F,https://github.com/qutip/qutip-virtual-lab/releases/tag/v1.0.0-rc.1,"Alex Pitchford, Simon Cross, Asier Galicia",NumFOCUS,"python, javascript","education, Quantum Mechanics","Simulating quantum physics in QuTiP provides an excellent educational tool. However, using QuTiP requires writing Python code, which may present an obstacle in some teaching contexts. Programming is, of course, a very valuable skill to master. Attempting to master it while simultaneously coming to grips with quantum mechanics is perhaps less advisable. We would like to create a graphical virtual laboratory powered by QuTiP which allows users to explore quantum systems without being distracted by the need to write software. The virtual lab would allow building up experiments from components (e.g. sub-spaces such as qubits, Hamiltonians for those subspaces, interaction Hamiltonians, environment baths), evolving the system over time, applying measurements, and attaching monitoring of quantum states or measurement outcomes (e.g. Hinton plots, Bloch sphere plots). Deliverables - A graphical interface that acts as a virtual laboratory - Allows the construction of simple quantum systems (e.g. placing four neutral atoms) - Allows defining the evolution of each system component - Allows defining the interactions between system components - Allows coupling the system to an environment bath - Allows simulating the system dynamics and visualizing their evolution over time - Allows visualizing the steady state of the defined system - Can be run on both desktop and tablets",https://summerofcode.withgoogle.com/programs/2023/projects/88K7XU4Q
Disk Fragmentation Simulator,Tri Dao,https://github.com/ceph/ceph/pulls?q=is%3Apr+Fragmentation+author%3APosrabi+,Adam Kupczyk,Ceph,"c++, ceph","distributed systems, storage","The goal of the simulator is to observe possible emerging patterns, and observe increasing costs as fragmentation progresses. It is to be a tool to invent better allocator strategies, propose defragmentation strategies, and mechanisms to control them.",https://summerofcode.withgoogle.com/programs/2023/projects/pfQonMep
GORA-709 Improve Geode datastore and upgrade Hadoop dependencies,trisha-melani,https://gist.github.com/trisha-melani-gsoc/ac9526ec11e7368207ef2a88bbb911f2,"Kevin Ratnasekera, Chanaka",Apache Software Foundation,"java, Geode","database, ORM","This project will upgrade Hadoop dependencies in Apache Gora repository and improve Geode datastore existing implementation for Apache Gora., that way Gora is apple communicate with Geode datastore, persist and query data as required.",https://summerofcode.withgoogle.com/programs/2023/projects/19qnve5z
.NET Developer Platform port for Haiku,trungnt2910,https://www.haiku-os.org/blog/trungnt2910/2023-08-20_gsoc_2023_dotnet_port_final_report/,"Niels Reedijk, Jessica Hamilton",Haiku,"c++, cmake, c#, .net, MSBuild","framework, JIT, SDK",".NET is a trending developer platform in the recent years. A .NET port or C# support is also requested multiple times by Haiku users throughout the years. This project aims to port the .NET runtime and SDK to Haiku and create Haiku API bindings for C#, making it possible not only for users to run existing .NET binaries/games on Haiku, but also for developers to create Haiku-native applications in an entirely new way.",https://summerofcode.withgoogle.com/programs/2023/projects/oJkCpfnv
Providing a library for determining key length security,Tshaka Lekholoane,https://tshaka.dev/x/wardstone,Dennis Knorr,openSUSE Project,rust,"security, cryptography",This project is aimed at creating a library that can be used across different programming languages via a foreign function interface and a command line utility that users can run against their existing keys to detect conformance to varying digital signature key-length standards.,https://summerofcode.withgoogle.com/programs/2023/projects/QjOBHrdT
Migration to user groups for permissions.,Ujjawal Modi,https://gist.github.com/Ujjawal3/e46d360636384d1a277e3b2789ea1e2a,"Shubham Dhama, Pragati Agrawal",Zulip,"python, javascript, django",web development,"The main target of this project would be to work on migration to user groups for permissions which aims to replace every setting in Zulip that currently allows organizations to assign permissions based on role (admin, moderator, etc.) with a setting based on arbitrary “user groups”. I would majorly work on areas of settings and stream settings, migrating the existing settings to the new model and adding new settings based on the new permission model.",https://summerofcode.withgoogle.com/programs/2023/projects/0kG78NA6
Sugarizer Word Puzzle Template and Chart activity,UtkarshSiddhpura,https://github.com/UtkarshSiddhpura/Google-Summer-of-Code/wiki/GSoC-2023-Final-Submission:-Sugarizer-Word-Puzzle-and-Chart-Activity,"Lionel Laské, Nikhil Mehra",Sugar Labs,"javascript, react, html, css, vue","education, web, games","The Chart activity offers various features, such as creating customized charts, collaborate with their peers, exporting charts, and using different chart types. It's a useful tool for teachers as it makes it easier to help students understand charts and create charts for academic purposes. The new Word Puzzle template in the Exerciser activity allows teachers to quickly create custom word puzzles on-the-fly during lessons using any media or text format, giving learners an interactive way to practice vocabulary.",https://summerofcode.withgoogle.com/programs/2023/projects/YxWqJ2nt
Improve the Raspberry Pi 4 BSP,UtkarshVerma,https://bitbanged.com/posts/gsoc/final-update/,"Alan Cudmore, Kinsey",RTEMS Project,"c, python, dts","kernel, embedded, real-time, rtos","The existing support for Raspberry Pi SBCs in RTEMS is operational, but it lacks essential functionalities such as graphics support, USB, SD card, UART, I2C and SPI functionality, which are necessary for basic user requirements. To address this gap, this project aims to incorporate these controllers into the Raspberry Pi 4 (Model B) board-specific package within RTEMS.",https://summerofcode.withgoogle.com/programs/2023/projects/cGuptOmZ
Improving Efficiency and Readability of the gprMax codebase and preparing a custom support chatbot.,V. Sai Suraj,https://medium.com/@manosaisuraj12/gsoc23-work-product-submission-f6dfba458bd2,"Craig, John Hartley",gprMax,"python, mpi, parallel/distributed computing","geophysics, electromagnetics, ground penetrating radar, Machine learning & Deep Learning","The major objectives of the project are: 1. Refactoring the Python code to increase efficiency and readability and increase the overall code quality of the entire codebase of the software. 2. To enhance user engagement and support by creating a comprehensive FAQ dataset which is used to train a custom Chatbot. 3. Investigate and discuss different possibilities for multi-GPU model execution, i.e. allow a model to execute (and share memory) across multiple GPUs.",https://summerofcode.withgoogle.com/programs/2023/projects/yqaL17VS
GTK4 Migrations,Vaibhav Malik,https://vaibhavmalik.hashnode.dev/gsoc-2023-journey-gtk4-migrations,"Mc, Tav",Inkscape,"C++, GTK4","Graphics, API Migrations","The GTK4 migration is one of the major refactoring projects on Inkscape’s roadmap. Besides migrating to a newer and more actively developed GUI framework version, this will help to significantly improve the performance of the user interface and the canvas (in particular OpenGL). However, the migration is a complex endeavour and will change hundreds of files in our codebase. For this reason, it is imperative to perform the migration as quickly as possible because all other work that touches the user interface during the migration time will face conflicts.",https://summerofcode.withgoogle.com/programs/2023/projects/P8MnvcRk
Implement vector mode in forward mode automatic differentiation in Clad,Vaibhav Thakkar,https://gist.github.com/vaithak/82125fa9618c81741dcecb88f0e76d4b,"Vassil Vassilev, parth_07",CERN-HSF,"llvm, c++, clang","compilers, Automatic Differentiation","In mathematics and computer algebra, automatic differentiation (AD) is a set of techniques to numerically evaluate the derivative of a function specified by a computer program. Automatic differentiation is an alternative technique to Symbolic differentiation and Numerical differentiation (the method of finite differences). Clad is based on Clang which provides the necessary facilities for code transformation. The AD library is able to differentiate non-trivial functions, to find a partial derivative for trivial cases and has good unit test coverage. Vector mode support will facilitate the computation of gradients using the forward mode AD in a single pass and thus without explicitly performing differentiation n times for n function arguments. The major benefit of using vector mode is that computationally expensive operations do not need to be recomputed n times for n function arguments.",https://summerofcode.withgoogle.com/programs/2023/projects/Ro5V6AT1
Improve deployment infrastructure & experience with 12 factor,Vaibhav Upreti,https://blog.circuitverse.org/posts/vaibhavupreti-gsoc23-final-report,Aboobacker MK,CircuitVerse.org,"ruby, docker, rails, OpenTelemetry","education, web, devops, simulation, digital logic design","The 12 Factor Application project is a methodology for building and deploying scalable, maintainable, and suitable software applications. The project is based on 12 key principles that outline best practices for developing and deploying software applications. Project Goals are : 1. Make CircuitVerse a 12 factor application. 2. Progressively convert CircuitVerse previews and profile avatars to object storage. 3. Improve observability using OpenTelemetry. 4. Drop visitor tracking by storing user details and adopt HyperLogLog for project view count. 5. Zero downtime deployment pipeline with GitHub Actions and Kamal. 6. Monitoring server with Monit.",https://summerofcode.withgoogle.com/programs/2023/projects/r2R8ARJ9
GSOC2023_VanditSingh_BuildingJenkins.ioWithAlternativeTools,Vandit Singh,https://www.jenkins.io/blog/2023/09/24/building-jenkinsio-with-alternative-tools/,"Kris Stern, Mark Waite, Rajiv Ranjan Singh, Yiming Gong",Jenkins,"javascript, css, Gatsby, Antora, Handlebarjs","web development, tooling, migration, antora, gatsby",This project aims to build jenkins.io site with Antora and Gatsby where Antora would be used for the complete site and Gatsby would be used only to build the Blogs. Project uses Antora as currently jenkins.io doesn't has versioned documentation and Antora is famous for its versioning and easy to use architecture. Gatsby is used for the Blogs part as its easy to submit blogs using Gatsby.,https://summerofcode.withgoogle.com/programs/2023/projects/5B6EgSAn
Generate Synthetic MRI Data,Vara Lakshmi,https://gist.github.com/lb-97/57347e7d06d87a0aa3b77887631f33bc,"Jong Sung Park, SERGE KOUDORO, Rafael Neto Henriques, Sreekar Chigurupati",Python Software Foundation,"python, DIPY","computer vision, deep learning, generative AI, Diffusion Models, MRI Data","The aim of this project is to contribute to the open source community in synthetic image generation for MRI images. The advantages of Diffusion Models have been witnessed only recently in the field of Medical Imaging leaving scope for more exploration. For GSOC 2023, we intend to design models that can produce images conditioned on damage size, location, type etc. A probable use case for this project would be to perform inpainting to introduce a desired tumor or lesion. This would help in training large-scale data hungry models such as ViT to perform downstream tasks. And also help avoid training on multiple datasets sourced from different machines with varying parameters nor rely on Imagenet pre-trained models that suffer from change in domain distributional shift.",https://summerofcode.withgoogle.com/programs/2023/projects/m364oUDc
Support Java 11 (bootstrap methods and other issues) for jpf-core,varad_galgali,https://docs.google.com/document/d/1a0o8zLBMU0FjgxyeMdRrS69dGGIMEF4otTsgYVyMyYM/edit?usp=sharing,"Cyrille Artho, Pavel Parizek",The JPF team,"java, Java Pathfinder","software model checking, Execution Inspection","jpf-core is essentially a JVM that currently fully supports only Java 8. The goal of this project is to make it up-to-date with new features of Java 11. The key feature of Java 11 that is currently not fully supported are bootstrap methods that are generated at load time. They are used for things as common as string concatenation (""Hello, "" + name). As of now, many cases are supported, but there are still many programs (and unit tests) that fail with Java 11. The priority of this project is to attain 100% compatibility with Java 11 by fixing the 15 tests failing currently.",https://summerofcode.withgoogle.com/programs/2023/projects/NnfaIK1C
[GSOC 2023 - Proposal] Improve the functionality of VideoCutTool,Varun Shrivastava,https://varun-shrivastava.vercel.app/posts/gsoc-final-report/,"Gopa Vasanth, Sohom Datta, Sgautam",Wikimedia Foundation,"mongodb, nodejs, docker, jenkins, reactjs, JEST, websockets, Expressjs","video editing, VideoCutTool, Video Cropping, Video Trimming, Video Mute, Video upload to Commons, WikiMedia Commons, MediaWiki:API","VideoCutTool is an open-source, online video editing tool, for videos uploaded on Wikimedia Commons. It is an easy, on-the-go tool, which supports features like cropping, trimming, rotating, etc. This is preferred over other tools as one can directly copy the link of the video from the commons, and edit it online, without having to download the video and then upload it again. This proposal aims at improving the above tool, by: • Adding new features / updating existing ones in the tool, to improve the user experience. • Adding tests on both frontend as well as backend, to improve the functionality of the tool. • Remove / Fix any pending bugs (if any). • Reduce the build time for the tool. • Other functionalities like, updating libraries/dependencies, add static type checking .etc",https://summerofcode.withgoogle.com/programs/2023/projects/YcNCDO3Q
SYMBA - Symbolic empirical representation of squared amplitudes in high-energy physics,VBaules,https://victorbaules.wordpress.com/2023/11/03/gsoc-2023-feynman-integrals-from-linear-algebraic-input-with-symba-final-submission/,"Abdulhakim Alnuqaydan, Marco Knipfer, Harrison Prosper",Machine Learning for Science (ML4SCI),python,"machine learning, high-energy physics, Symbolic representation","The interaction cross-section is an important quantity in high-energy physics, serving as a bridge between abstract theory and experiment. Is is also quite difficult to compute for physical processes involving many final-state particles. The SYMBA project utilizes machine learning, specifically a sequence-to-sequence (seq2seq) transformer model, to symbolically calculate a crucial component of the cross-section - the squared amplitude - from the amplitude for a given process. The goal of this project is to improve upon the current SYMBA results with a seq2seq transformer which takes advantage of the rich structure of Feynman Integrals, allowing one to directly input a Feynman Integral for a general process/theory and obtain an accurate symbolic representation of its squared amplitude.",https://summerofcode.withgoogle.com/programs/2023/projects/A1tU7p7j
Using Coverity Static Analysis Tool to Clean up Issues from the RGW Code,Vedansh Bhartia,https://gist.github.com/vedanshbhartia/52fe3c44ef70185e553793220a7b3a69,Yuval Lifshitz,Ceph,c++,Static analysis,"Ceph is an open-source, distributed storage system that provides scalable object, block, and file storage. One of the key components of Ceph is the RADOS Gateway (RGW), which provides an interface for storing and retrieving objects using the S3 and Swift APIs. The RGW codebase has grown significantly over time, and as a result, it is prone to bugs and other issues that can impact performance and stability. The goal of this project is to use the Coverity static analysis tool to clean up issues from the RGW code. Coverity is a powerful tool that can identify potential bugs, security vulnerabilities, and other issues in software code. By running Coverity on the RGW codebase, we can identify and fix issues that may be impacting performance, stability, or security.",https://summerofcode.withgoogle.com/programs/2023/projects/xH6uVLYA
Located Voice CMS,Vedant Singh,https://docs.google.com/document/d/1zlpWdz4w3vOLVkALyRG4Yp7DE8aV8ru_h5QBwbnCMDY/edit?usp=sharing,"Andreuibanez, Yash Raj",Liquid Galaxy project,"android, java, artificial intelligence","artificial intelligence, api, java, user experience, android","To the existing Liquid Galaxy Controller on Google Play Store, I am: 1. Adding the voice functionality: For default POIs via AI generated voice mp3 files saved on storage. And using Text-To-Speech API by Android for providing voice functionality to AI generated places. 2. Adding the sound functionality: Adding sound effects for all the POIs belonging to a particular category using mp3 files saved on the local storage. Example: Bells sound for Cathedrals. 3. Improving the User Experience: Making the app responsive. 4. Removal of the Physical Beacon integration. 5. Adding AI support for context sensing perhaps using Google BARD(if published in the near future) or OpenAI ChatGPT. Example: Showing nearby places near Eiffel Tower. 6. Other additional AI integrations possible.",https://summerofcode.withgoogle.com/programs/2023/projects/n3hWZbED
Porting Rust into GNU/Hurd,Vedant Tewari,https://gist.github.com/Vtewari2311/89551d5028e64c5dfc1fd419582797df,Samuel Thibault,GNU Project,"c, rust","compilers, programming languages, Operating Sytems","The goal of this project is to make the Rust language available on the GNU/Hurd operating system. Currently, there is no official Rust support for GNU/Hurd, which limits developers' ability to build high-performance, safe, and concurrent software on this platform. The Rust language is increasingly being used in fundamental libraries such as librsvg and python-cryptography, so it is crucial to have a compiler for Rust on GNU/Hurd. The Rust compiler is portable, but its runtime library, libstd, needs to be ported to GNU/Hurd. This involves telling Rust how to call standard C library functions, which can be generated from libc C headers using the bindgen tool. The proposed solution involves creating a new Rust target for GNU/Hurd by investigating the system calls and interfaces available in GNU/Hurd and adapting Rust's code generator to generate code that uses these interfaces. The project aims to optimize Rust's performance on the GNU/Hurd platform by identifying performance bottlenecks and implementing improvements where necessary. The deliverables of the project include the Rust-GNU/Hurd toolchain, which comprises the Rust compiler and libraries, documentation, and optimized performance of Rust on the GNU/Hurd platform. The project also includes researching the GNU/Hurd system, identifying the system calls and interfaces that Rust will need to use, and creating documentation for the Rust-GNU/Hurd toolchain.",https://summerofcode.withgoogle.com/programs/2023/projects/pyWcRl8o
Implementation of GAMESS .dat and NBO Parsers,Veronika Zak,https://weronika.link/2023/Google-Summer-of-Code/,"Shiv Upadhyay, Eric Berquist",Open Chemistry,"python, cclib","parser, cclib","The goal of this GSoC project is to address outstanding issues on GitHub for supporting additional programs and formats that are not currently supported by cclib, such as GAMESS .dat, or NBO. The expected results of this project are the implementation of parsers for two new formats, the generation of test data, and the writing of unit and regression tests for each parser. The implementation of new parsers will enhance the capabilities of cclib, making it a more comprehensive tool for researchers to analyze their computational chemistry data.",https://summerofcode.withgoogle.com/programs/2023/projects/RH7FRHUZ
Julia Bindings for Cclib,Victor Hugo Cano Gil,https://gist.github.com/vcanogil/fc779aa066f5dd2063686688551d361f,"Shiv Upadhyay, Eric Berquist",Open Chemistry,"python, linux, github, git, julia","chemistry, cheminformatics, quantum chemistry, theoretical chemistry, Computational Science","The Cclib library is a popular tool used in computational chemistry for parsing and interpreting output files from software packages such as Gaussian, NWChem, ORCA, and PSI4. It allows for the extraction of a variety of information, including molecular orbitals, atomic charges, and vibrational frequencies. This project aims to create a bridge between Cclib and the Julia programming language, which is increasingly used in scientific research and has several active cheminformatics packages such as ChemistryFeaturization.jl, DFTK.jl, and Molly.jl. The porting will enable seamless integration of Cclib with other cheminformatics packages in Julia, such as AtomsBase.jl, which facilitates interoperability between different cheminformatics libraries. Additionally, the project will provide comprehensive documentation and tutorial examples to ensure that users can easily utilize Cclib in Julia.",https://summerofcode.withgoogle.com/programs/2023/projects/xoj739kx
Rewrite some C modules in Rust,Vikram Kangotra,https://vikram-kangotra.github.io/blogs/0-a-summer-of-code-my-gsoc-2023-conclusion,Alexandre Janniaux,VideoLAN,"c, c++, rust, qt","audio, streaming, video, media, demuxer","This project aims to improve VLC media player's performance and reliability by rewriting some of its modules, particularly the demuxers, in Rust programming language. By leveraging Rust's speed, safety, and reliability, the project seeks to enhance VLC's error-handling capabilities and improve its stability. The project will involve analysing existing modules, designing and implementing new Rust-based demuxers, integrating them into VLC, and thoroughly testing them.",https://summerofcode.withgoogle.com/programs/2023/projects/nOGvE6dp
Sugarizer Vue.JS Core,vinayak nayar,https://www.vinayaknayar.in/blog/gsoc-final-evaluation-report/,"Lionel Laské, Nikhil Mehra",Sugar Labs,"javascript, vue.js, vue","web, web development","The aim is to reimplement the Sugarizer Core architecture using Vue.js components, in order to update and improve the current implementation that relies on Enyo.js, a deprecated web framework. By utilizing Sugarizer Vue.js components, we can ensure that Sugarizer remains a modern and efficient tool for its users. The proposed project involves a comprehensive redesign of the Sugarizer Core UI, which includes developing new Vue.js components and integrating them with the existing Sugarizer codebase. The new components will be designed to improve the user experience, increase efficiency, and enhance the functionality of the app.",https://summerofcode.withgoogle.com/programs/2023/projects/pGTPicND
Whiteboard Integration,Vinayak_Sharma,https://github.com/CulturalProfessor/Google-Summer-of-Code-23,"Douglas Gubert, Shiqi Mei",rocket.chat,"mongodb, node.js, typescript, meteor.js, react.js, Rocket.Chat apps-engine","web, communication, Team Collaboration","The Whiteboard Integration project enhances collaborative experiences in Rocket.Chat by introducing a powerful Whiteboard App. This integration facilitates real-time visual communication, making it easy for users to create and share diagrams, drawings, and more. With a user-friendly interface and features like slash commands and action buttons, users can effortlessly create and collaborate on whiteboards. The project also offers a convenient local setup guide, allowing users to deploy the app locally for testing. This integration adds a new dimension to communication within Rocket.Chat, fostering creativity and efficient collaboration.",https://summerofcode.withgoogle.com/programs/2023/projects/vPtpf3oN
Add PACS Communication,Vinícius Cavalcanti,https://github.com/hvini/invesalius3,"Marc Gonzalez Capdevila, Karine Pistili Rodrigues, InVesalius, xemyst",Invesalius,"python, InVesalius","mri, DICOM, CT, PACS, DIMSE","Picturing Archiving and Communication Systems (PACS) is a tool used to store, retrieve and share medical images among healthcare professionals. PACS systems make it easier to manage medical images since it contains integration with Dicom standard, that implements the dimse protocol which is used to perform medical images retrieve/upload operations. InVesalius is a desktop tool that allows the visualization and tridimensional reconstructions of Computed Tomography and also Magnetic Resonance Imaging files. InVesalius allows uploading a set of images from CT or MRI and then it shows the Coronal, Sagittal and Axial planes and also allows the application of masks to reconstruct the images in three dimensions. Currently InVesalius does not have integration with PACS systems, this means that all the files are handled by the application. The suggested proposal presents a schedule to integrate multiple PACS systems with InVesalius. The schedule includes all the steps needed to integrate both systems, aiming for usability and code maintainability.",https://summerofcode.withgoogle.com/programs/2023/projects/AC0fbfwA
Build & Run SingleSource Benchmarks with ClangIR,Vinicius Espindola,https://github.com/llvm/clangir/pulls?q=is%3Apr+author%3Asitio-couto,"Bruno Cardoso Lopes, nathanlanza",LLVM Compiler Infrastructure,"llvm, c++, clang, mlir","compilers, Code Gen, Optmization","ClangIR is the newest attempt to tackle the lack of a higher-level intermediate representation for C++. Said representation would greatly benefit the community by enabling a myriad of passes that are either impossible or too complex to execute in LLVM IR, benefiting thousands of developers and legacy code. Ensuring ClangIR's success, however, requires coverage, correctness, performance, and an acceptable build time overhead. This proposal aims to increment the ClangIR compiler to compile part of the LLVM’s SingleSource test suite, further advancing its development. This includes but is not limited to, implementing missing AST visitors, operations/instructions, types, and testing. After sufficient implementations, it should be possible to use the SingleSource programs to analyze the compilation through ClangIR, evaluating its trade-offs against the traditional lowering process.",https://summerofcode.withgoogle.com/programs/2023/projects/Yofn8VfG
Improve the State of octave-pythonic,Vipul Cariappa,https://www.vipulcariappa.xyz/blogs/GSoC-2023-Blog-Final.html,"Nir Krakauer, Colin Macdonald",GNU Octave,"python, Octave","programming language, Language Binding",octave-pythonic is an octave package used to incorporate python libraries and features in octave using the cpython interpreter. Currently octave-pythonic only supports python versions less than 3.10. But the latest python version is 3.11. The package has not been updated for a long time. My proposal is to improve the state of the package. Making octave-pythonic support the latest versions of python. Adding the missing features in the project. Fixing bugs from the bug tracker at GitLab. Implementing a python wrapper around octave types to use in python. Adding support for function callbacks and handles. And also adding support to use octave from python.,https://summerofcode.withgoogle.com/programs/2023/projects/aeEAbtyR
Better Performance Models for MLGO Training,Viraj Shah,https://drive.google.com/drive/folders/1b_mtJy2cNkZypNavUYW-HPvLymXrkKMA,"Mircea Trofin, Aiden Grossman, Ondrej Sykora",LLVM Compiler Infrastructure,"python, llvm, c++, tensorflow","machine learning, Compiler Optimizations","This project aims to improve the reward signal used in the RL-based training of MLGO models. I plan to integrate an existing GNN-based performance estimation model into the training process to generate said reward signal, with some key improvements to facilitate better modelling of the execution environment and runtime related behaviors, such as branch mispredictions and cache misses. An outline of those improvements would be to create a corpus of blocks with a variety of enhancements over the original (first deliverable), modifying the model to be compatible with the new dataset (second deliverable), and experiment with feeding the model additional context beyond what is available within individual basic blocks to allow the model to factor in aforementioned runtime behaviors to gain valuable insights on where to go forward.",https://summerofcode.withgoogle.com/programs/2023/projects/wiTzRdnV
Graph libraries Integration and redesign,Viren Varma,https://docs.google.com/document/d/1xkOSk99cQD7g-49oN0nwfGnnbnoQFO2Y/edit?usp=sharing&ouid=109889987756541902691&rtpof=true&sd=true,"Sebastian Jordan, Gordana Rakic",Pharo Consortium,"smalltalk, pharo","object oriented programming, Graph Theory","Pharo is a powerful object-oriented programming language widely used in research and industry, as seen here. The graph algorithms library in PharoAI is a crucial resource for developers who work with graph data structures. The current graph algorithms library in PharoAI needs a redesign of APIs and the addition of different algorithms in the library. The goal of this project is to redesign the graph algorithms library in PharoAI by 1. Redesigning the current API using the standard API Practices 2. Incorporating graPharo Layout Algorithms into PharoAI graph algorithms 3. I also plan to incorporate new graph algorithms and layout techniques and Data Structures to improve the library's performance and functionality of current algorithms.",https://summerofcode.withgoogle.com/programs/2023/projects/I4MHVOJ5
LPython: Implementing advanced data structures,Virendra,https://virendrakabra14.github.io/posts/gsoc/lpython/report/,"czgdp1807, Thirumalai Shaktivel C",Python Software Foundation,"c, python, llvm, c++","compilers, algorithms, data-structures","Currently, LPython does not have full implementations of data structures such as list, dict, set. The goal of this project is to improve support for partially implemented data structures, and implementing other data structures, along with useful algorithms. Further, these implementations would be benchmarked with equivalent ones in other language libraries, such as the C++ STL. I plan to cover these: - Add missing list functions - Improve dict by expanding the space of keys and values, and nested dictionaries - Create an implementation of set - Allow passing of data structures as function parameters and return values - Work on ordered and unordered variants of dict and set - Explore improvement of hashing functionality beyond linear-probing and chaining - Work on other data structures such as heap and trie",https://summerofcode.withgoogle.com/programs/2023/projects/AUCh9FLW
Improving Zulip Terminal,Vishwesh Pillai,https://gist.github.com/theViz343/dcfe54ffaafdcb0f637200b77958df41,Hari Prashant Bhimaraju,Zulip,python,"testing, event handling, TUI","The main goal of this project is to improve the user experience of Zulip Terminal by porting features from Zulip web which are not already implemented in ZT. The features to be implemented include supporting unsubscribed streams, direct message side panel and custom profile fields, while also improving unread cycle algorithms and topic matching.",https://summerofcode.withgoogle.com/programs/2023/projects/f5jvspBT
Postman Add-on for ZAP,Vitika Soni,https://www.zaproxy.org/blog/2023-09-25-postman-add-on/,"Rick M, thc202",OWASP Foundation,"java, api testing, Automation, jackson, POSTMan, Web Spidering","automation, java, OWASP, security tool, Postman, API Security, Web Spidering","The aim of this project is to develop an add-on for the OWASP ZAP that enables the import of Postman collections into ZAP. Currently, ZAP supports importing API definitions in OpenAPI and GraphQL formats, but lacks support for Postman collections. This add-on will allow security testers and developers to easily import Postman collections into OWASP ZAP and use its powerful security testing capabilities to identify potential vulnerabilities in their APIs. Additionally, it will include automation support and spidering functionality. This will increase the scope of testing and help ensure the security of APIs developed using Postman.",https://summerofcode.withgoogle.com/programs/2023/projects/OlBxaE5X
UiKit Playground 2.0,Vivek Srivastava,https://github.com/RocketChat/Rocket.Chat/tree/develop/packages/uikit-playground,"Douglas Fabris, Guilherme Gazzo",rocket.chat,"typescript, react.js",web,"Playground 2.0 is an updated version of the Rocket.chat's Playground, which is an app development platform for creating custom apps and integrations. The new version includes several features to accelerate the development process and make it more visual. The first feature is the addition of an example section, which includes a collection of templates that can be used as a starting point for app development. This will save time and effort for developers who are new to app development and help them get started quickly. The second feature is the implementation of a project concept where multiple screens can be grouped, saved, and revisited at a later time. This will enable developers to work on different parts of the app separately and easily switch between them. The third feature is the use of the flow concept from https://reactflow.dev. This will allow each project to be represented as a flow, with each screen represented by a block. Actions can be connected to other blocks to visualise the app's lifecycle. This will make the development process more visual and easier to understand. The last feature is the ability to ""compile the flow"" and run it as a demo. This will allow developers to quickly present a mock or app to validate its usefulness. This will save time and effort for developers who want to get feedback on their app quickly. Overall, Playground 2.0 is an app development platform that makes the development process faster, more visual, and easier to understand. It includes several features that will help developers create custom apps and integrations quickly and efficiently.",https://summerofcode.withgoogle.com/programs/2023/projects/3MeyLQcG
4.2 Virtual Reality for Distributed Research (Orthogonal Research and Education Lab) (175 h),VRUSHALI NANDURKAR,https://github.com/OREL-group/VRDR,"Jesse Parent, Bradly Alicea",INCF,"blender, UNITY3D, VIRTUAL REALITY, Extended Reality, AI Navigation","simulation, animation, 3D Graphics, 3D PHYSICS, 360 VIDEO, AI Navmesh Agent","Virtual Reality for Distributed Research (VRDR) encompasses a VR showroom, immersive anatomy exploration, model organism studies, and a VR Morris Water Maze. Additionally, there are plans to enhance VR anatomy and organism models by integrating high-fidelity 3D representations with detailed specifications for a more realistic and informative experience and the development of a VR AI navmesh for the Morris Water Maze, incorporating advanced spatial mapping and artificial intelligence. An AR VR application which is compatible with all the devices such as Meta quest ,Web XR . This will in turn allow learners and researchers from around the world to access and interact with the models. This will also incorporate haptic feedback for users to make it more interactive.",https://summerofcode.withgoogle.com/programs/2023/projects/7YSJoZUH
Integrating Apple Music with ListenBrainz,vscode,https://blog.metabrainz.org/2023/08/28/integration-of-apple-music-with-listenbrainz/,Shatabarto,MetaBrainz Foundation Inc,"python, flask, sql, rest, api, Javascript,","web, software engineering, music","By linking their Apple Music account with ListenBrainz, individuals are able to use ListenBrainz to play their music selections. The integration into BrainzPlayer allows for this capability. By utilizing a content resolver, we can match the MusicBrainz Identifier (MBID) to the Apple Music catalog, permitting users to transfer playlists to their Apple Music account.",https://summerofcode.withgoogle.com/programs/2023/projects/oUbUrDhV
TensorMap Project,Wenuka Somarathne,https://github.com/c2siorg/GSoC/blob/master/GSoC-2023/12-Wenuka%20Somarathne-TensorMap.md,"Ivantha, Udesh Kumarasinghe",SCoRe Lab,"python, javascript, react, flask, tensorflow",machine learning,"The main goal of this year's contribution is to make the TensorMap application bug free with clearly documented steps for setup. That will be the initial task I will be attempting. Then, I will add some features to the app to make it more user friendly for beginners. Finally, the code base will be simplified, and documentation will be updated.",https://summerofcode.withgoogle.com/programs/2023/projects/nqtxQqnS
Improving the OpenMRS Developer Experience: Updating the SDK,wikumC,https://wikumchamith.github.io/blog/GSOC-2023-Updating-the-SDK/,Daniel Kayiwa,OpenMRS,"java, docker, Maven",web,"This project aims to improve the OpenMRS SDK to better support the evolving needs of OpenMRS development. The project objectives include spinning off a version of the SDK to support OpenMRS 1.x releases based on Java 7, upgrading the SDK to take advantage of Java 8 features, and improving the documentation system for all plugins. Additionally, the project seeks to rework the build-distro and setup commands to allow for per-version customizations, such as producing Docker images based on different versions of Java depending on the OpenMRS version. By achieving these objectives, the updated SDK will provide better support for newer versions of OpenMRS while maintaining a legacy interface for existing features.",https://summerofcode.withgoogle.com/programs/2023/projects/lq8Hfmzo
Constraint-based Point Set Denoising,William Wen,https://github.com/CGAL/cgal/issues/7748,"Sven Oesau, Martin Skrodzki",CGAL Project,c++,"computational geometry, geometry processing","Many applications of point set surfaces work with noisy point sets, requiring a denoising operation to reconstruct the original surface. This project will implement constraint-based point set denoising-- an iterative, anisotropic denoising algorithm presented by Yadav et al. While denoising algorithms exist in CGAL, this method focuses on preserving sharp geometries during the denoising process. The final deliverable for this project will contribute to CGAL's Point Set Processing package.",https://summerofcode.withgoogle.com/programs/2023/projects/8ltgdTWo
Boosting canonicalization performance by replacing N-dimensional sparse tensor representation,WilliamZijieZhang,https://www.zijie.ca/documents/WilliamZ_GSoC_2023_report.pdf,"sdiamond, Philipp Schiele, Riley Murray",NumFOCUS,"Python, Scipy","back-end, Canonicalization, Tensor Manipulations","(This project is for CVXPY) The performance of canonicalization procedures for optimization problems is an important metric for CVXPY users. Typically, this process is quite slow for large Disciplined Parametrized Programs(DPP). However, it is possible to improve upon the canonicalization by replacing the way 3D sparse tensors are represented. One of the major updates of CVXPY 1.3 was the addition of a SciPy backend, which allowed a performance speedup for certain types of optimization problems. This new backend offers an alternative to the original C++ backend implementation (CVXCORE), and enables easier development. The SciPy backend has some limitations especially when it comes to manipulating sparse tensors with 3 dimensions. The current representation of a 3D sparse tensor is to use a list of 2D matrices. However, a sparse tensor of large dimension could be represented as a single strided matrix, which can make CVXPY backend operations orders of magnitude more efficient.",https://summerofcode.withgoogle.com/programs/2023/projects/Cpab8rXK
Friendlier Error Messages for Processing,willybobilly,https://github.com/processing/processing4/pull/771#issuecomment-1695917774,"Raphaël de Courville, Sam Pottinger",Processing Foundation,java,"debugging, java, Error Handling","This proposal entails revamping the existing Processing error message system so that it resembles the P5.js Friendly Error System (FES). The problem is that the current error messages are often vague and not easily understood by beginners. I plan to remedy this by ensuring each error message four components: the original error generated by the JVM, an identification of the problem an explanation of the problem and when possible, a solution to the error. The error messages should convey the severity of the error and in beginner friendly language, explain the cause of the error. The error message should also provide links to relevant documentation to contextualize the issues and also include the original JVM message. Time permitting, additional features such as translation into other languages, a log of previous errors and a button to accept user feedback.",https://summerofcode.withgoogle.com/programs/2023/projects/w544i774
Optimize blending code for AGS games,WyattRadkiewicz,https://blogs.scummvm.org/eklipsed/2023/08/27/gsoc-23-final-report/,"Thierry Crozat, somaen, Cameron Cawley",ScummVM,"c, c++, Allegro, Graphics Programming","media, optimization, Graphics Programming","I will have a system set up to test the speed of the drawing/blending code in AGS games, and I will have optimized the code by some amount by the end of the project. To start I will take closer looks into engines/ags/lib/allegro/surface.cpp and other related files to find how the BITMAP::draw function and other blending functions work, and then optimize them. The drawing/blending functionality of the AGS engine will be faster. The project can be split into 2 major parts: Finding the best way I can test the speed of the drawing/blending code Optimizing the drawing/blending code",https://summerofcode.withgoogle.com/programs/2023/projects/RYExURAF
JIT compiled SQL expressions,Xie Qijun,https://github.com/mariadb-corporation/mariadb-columnstore-engine/pull/2891,Marko,MariaDB,c++ llvm,database jit,"MCS uses interepreted execution to calculate SQL expressions results. Here is an example of a SQL expression 'table1.col1 + FLOOR(table2.col1)'. Given that table1.col1 is DECIMAL and table2.col1 is DOUBLE there is a number of conditions that drives the calculation of this relatively simple example in runtime. Given that SQL types and expression tree are known before the query begins it is possible to replace interpretation with JIT to produce specialized compiled bytecode that is: small has no or almost no branches optimized for the specific platform it is run at This is a research mostly project which goal is to produce a set of microbenchmarks that: leverages any JIT compiler available, e.g. LLVM, MIR demonstrates a negative and positive effects of using JIT",https://summerofcode.withgoogle.com/programs/2023/projects/hLufFI1y
Add Calculations for Self-Diffusivity and Viscosity,Xu Hong Chen,https://xhgchen.github.io/posts/add-calculations-self-diffusivity-viscosity/,"Hugo MacDermott-Opeskin, orion cohen",MDAnalysis,"python, numpy, Scipy","mathematics, physics, computational chemistry, biophysics, Chemical Engineering","MDAnalysis provides minimal support for calculating transport properties, measurable values which define the transfer of mass, heat, momentum, or charge. These properties are vital for biomolecular research and chemical engineering. This project aims to add methods for calculating self-diffusivity and shear viscosity, the two most widely used transport properties in the literature, with three main deliverables: • Construct a class to calculate self-diffusivity via the Green-Kubo method • Build a class to calculate shear viscosity via the Einstein-Helfand method • Test and document the new features thoroughly, ensuring the calculations are reliable and easy to use",https://summerofcode.withgoogle.com/programs/2023/projects/4vt9npUg
Migrate mv2 samples to mv3 and increase API coverage,Xuezhou Dai,https://docs.google.com/document/d/1mppRm9Av3pACXb3u_P8CT55glObxcMf7foleJyZXzT4,"Pallavi, Oliver Dunk, Ali Spivak",Chromium,javascript,"documentation, Extension, ManifestV3, API Samples","Manifest V3 is the latest version of Chrome extensions, which focuses on security, privacy, and performance. The goal of this project is to upgrade Chrome extension samples to work with Manifest V3 and increase API coverage, which includes providing minimal API samples and providing samples that use multiple APIs with practical purposes. You could refer to the proposal for specific schedule.",https://summerofcode.withgoogle.com/programs/2023/projects/JUcx6aBB
Self-Supervised Learning for Strong Gravitational Lensing,yaashwardhan,https://yaashwardhan.medium.com/self-supervised-learning-for-strong-gravitational-lensing-part1-5a049e976b51,"Yurii Halychanskyi, Anna Parul",Machine Learning for Science (ML4SCI),"python, tensorflow, pytorch, keras","Autoencoders, Transformers, Self-Supervised Learning, bayesian optimization, Vision Transformers, Equivariant Transformers, Hyperparameter Tuning, Representational Learning, Swin Transformers, ViT, Denoising Autoencoders, Twin models","Problem Statement: An unprecedented amount of lensing data is available, however manually labeling it is unsustainable. Hence an approach must be implemented to develop a network capable of creating an embedding space in a self-supervised manner to detect dark matter traces by learning representations possibly beyond existing theories. A hybrid Twin model is proposed to be implemented, consisting of Equivariant Group Convolutions along with Swin and ViT transformer blocks to learn representations from two different augmentations of images (Gaussian noise and Rotations) using self-supervised learning. A denoising autoencoder is implemented for one twin, with a reconstruction loss which is then summed up with the contrastive loss of the second twin. Hyperparameter tuning is employed and the network is then finetuned for other tasks.",https://summerofcode.withgoogle.com/programs/2023/projects/TBOsy4MA
capa: Capabilities from Dynamic Analysis,Yacine Elhamer,https://docs.google.com/document/d/1F9OMuHujR60m13dYnIIfYtGGSd6XxQLTqwnEls-vX5U,"Willi Ballenthin, Moritz, rxrd, Conor Quigley",FLARE,"python, Sandbox","reverse engineering, malware analysis","capa is an open-source tool that identifies program capabilities using an extensible rule set. Currently, the project relies purely on static analysis of code structures to identify patterns. This project extends capa to work on dynamic execution data such as sandbox run traces or code emulation analysis. The introduction of dynamic analysis to capa is set to make analyzing samples that feature anti-analysis techniques a much easier task. This is an issue of concern since a large number of distributed software nowadays gets packed with commercial or private packers, which means that capa would fail to profile these executables' capabilities successfully. However, this can be circumvented by introducing dynamic analysis to the problem, which it would enable capa to get a view of the program after it had been unpacked in memory, thereby making it possible to extract the capabilities from the executable at hand. Deliverables: 1. Add support for the future integration of several sandbox solutions by means of an associated feature extractor. 2. Implement a feature extractor for the Cuckoo-based CAPE Malware Configuration and Payload Extractor. 3. Introduce capa features that are specific to dynamic analysis (such as captured network traffic). 4. Add dynamic-based support for function call arguments. 5. Write novel rules that make use of the newly introduced dynamic capability extraction.",https://summerofcode.withgoogle.com/programs/2023/projects/OEjr8OJU
Results Visualization For GCP Scanner,Yahia Zakaria,https://github.com/google/gcp_scanner/wiki/GSoC-2023-%E2%80%90-Results-Visualization-For-GCP-Scanner-Output,"Maksim Shudrak, ZetaTwo",GCP Scanner,"python, react, typescript","web, data visualization, cloud, ui, gcp",This project aims to implement a web single-page application to visualize the output of the GCP scanner tool. The app should make it easier for users to quickly identify all resources their credentials have access to and allow the user to filter and search through these resources. The app should also provide the user with different visualizations for other information extracted from the GCP scanner.,https://summerofcode.withgoogle.com/programs/2023/projects/yNwMCgJJ
Eclipse Cargo Tracker: Improve Visual Appeal and User Experience,Yash Bharatiya,https://github.com/yashTEF/gsoc-2023/blob/main/README.md,Reza Rahman,Eclipse Foundation,"javascript, java, html, css, Jakarta EE","web, graphics, cloud","Eclipse Cargo Tracker is a web application to track or monitor cargo information in real time based on the Jakarta EE specification. It demonstrates the usage of domain driven design approach for architecting a modern web application using various Jakarta EE technologies like JSF, JMS, Web Servlets, beans etc. The project proposal aims to improve the look and feel for the project this includes improving the visual appeal and user experience for the application, the project website and the hosted Github repository.",https://summerofcode.withgoogle.com/programs/2023/projects/XtV7l10F
Resource Initiator Reporting,Yash Joshi,https://docs.google.com/document/d/1VGVd-6yGc8jI1EuCWfNkhlESsvZgIBtCzr1rPWvxPwM/edit?usp=sharing,"Yoav Weiss, Stephen",Chromium,"javascript, c++","web, Web Standards","The proposed project aims to enhance the Resource Timing API by incorporating initiator information to identify the resource that triggered the fetch of other resources. The implementation of this feature involves introducing two new attributes to the existing API. The proposed logic has been designed to ensure optimal behavior and appropriate specification changes will be implemented before shipping it to the stable channel via blink shipping process. Additionally, revisions to the MDN documentation will reflect the updated status and functionality of the enhanced API.",https://summerofcode.withgoogle.com/programs/2023/projects/mxiE3J6n
Security Penetration Testing,Yash Sancheti,https://gist.github.com/Onyx2406/0a0f6b7e8d88a436f74e9d7387fc62f4,Godfrey Kutumela,The Mifos Initiative,"javascript, security, ZAP, pentest, Burp",mifosx-platform,"Mifos X and Apache Fineract are widely used by financial institutions of all different sizes and methods around the world. This project is focused on testing the security of the Mifos X platform. Under the guidance of Godfrey Kutumela, the 175-hour project will utilize both Static Application Security Testing (SAST) and Dynamic Application Security Testing (DAST) scanning. These comprehensive testing methods will scrutinize the platform's security layers, uncovering vulnerabilities and providing insights for enhancement. The initiative will contribute to reinforcing the platform's defenses, ensuring that Mifos X remains a trusted option for its users, especially businesses that rely on it for financial services.",https://summerofcode.withgoogle.com/programs/2023/projects/47jBQlPG
RooFit - Pythonic interaction with the RooWorkspace,Yash Solanki,https://yashnator.github.io/gsoc-submission,"Jonas Rembser, Moneta",CERN-HSF,"python, c++, clang, Cppyy, cling","documentation, unit testing, Pythonization, C++ bindings for python","RooFit uses RooWorkSpace to manage its models. Currently, the syntax to interact with RooWorkspace is completely different from Python syntax, which makes the code less intuitive & harder to manage. The project aims at making the interaction with RooWorkspace more Pythonic. Pythonization RooWorkspace is done in two main steps: 1.) Writing a C++ plugin for the RooWorkspace factory 2.) Writing Pythonizations This is followed by making unit tests, writing documentation & writing tutorial for the new Pythonic interaction. The deliverables for this project are: ● Develop a Pythonic alternative to RooWorkspace::factory() ● Pythonization of special operations of RooWorkspace along with support for creating Histfactory p.d.f.s using the JSON I/O ● Write unit tests to check the functionality of Pythonic code ● Make tutorials to demonstrate the usage of new functions in Python & improve documentation for HistFactory",https://summerofcode.withgoogle.com/programs/2023/projects/eBsTbcaN
Flutter Plugin for MediaPipe Machine Learning Library,Yassin Hashem,https://docs.google.com/document/d/1vDDCuYNK99Jvu1b6G7Qj3v4UNPUXEV0bXbnAerc4V2Q/edit?usp=sharing,Paul Ruiz,TensorFlow,"swift, kotlin, flutter, dart","machine learning, deep learning, Cross-Platform Mobile","This project outlines the development of a Flutter plugin for MediaPipe, with a focus on a feature-first approach. The plan includes implementing the Text Task API, Audio Task API, and Vision Task API, which covers Hand Landmark Detection, Gesture Recognition, and Image Classification and Embedding. The project also involves testing and documenting each feature, as well as creating demo apps to showcase them. The project is estimated to take approximately 12 weeks, with each feature being developed and tested in a separate 1-3 week timeframe. The final week will be dedicated to finalizing documentation, creating code tutorials, and preparing the plugin for publication. The goal is to create a high-quality, well-documented plugin that is compatible with different platforms and easy to use for developers. The main goals for the finished result of the project are: - Multi-platform Flutter plugin for MediaPipe - The primary deliverable of the project is a Flutter plugin that is compatible with both iOS and Android. - Testing and documentation - Each feature must be thoroughly tested and documented to ensure that they work as intended and that developers can easily use them. - Demo apps - Creating demo apps to showcase each feature is an essential part of the project. - Interactive Codelab tutorials - While not required, the creation of interactive Codelab tutorials would be a valuable addition to the project, particularly for the documentation phase.",https://summerofcode.withgoogle.com/programs/2023/projects/qz7nZ32E
Improving Parameters and Standardizing Results in pgr_withPointsDD Function for pgRouting,Yige Huang,https://github.com/pgRouting/pgrouting/wiki/GSoC-2023-Improving-Parameters-and-Standardizing-Results-in-pgr_withPointsDD-Function-for-pgRouting,"Vicky Vergara, Regina Obe",OSGeo (Open Source Geospatial Foundation),"c, postgresql, c++",routing,"This project aims to enhance the functionality of the pgr_withPointsDD function in pgRouting by improving the 'driver_side' optional parameter, adding a result column and normalizing the output. And all overloads will be implemented(Single vertex & Multiple vertices). The pgr_withPointsDD function modifies the graph to include points and using Dijkstra algorithm, extracts all the nodes and points that have costs less than or equal to the value from the starting point. The edges extracted will conform to the corresponding spanning tree.",https://summerofcode.withgoogle.com/programs/2023/projects/k9zuPo5a
Apache EventMesh Optimize the event-bridge on EventMesh,Yixiang Zhao,https://docs.google.com/document/d/1O4XBiS7lvUb9iIz5c5UOL9lRZO2Jqs6NVV2l7lrVFKI/edit?usp=sharing,"Eason Chen, Mike Xue",Apache Software Foundation,java,"distributed system, MQ","Through eventmesh‘s event bridge feature, we can connect data to heterogeneous data storage, we hope that the community can optimize the current eventbridge capability of EventMesh to realize the data connection of different event stores. We should verify the ability of different EventMesh cluster instances to synchronize data, sort out the corresponding verification step documents, and optimize the current EventMesh bridge features.",https://summerofcode.withgoogle.com/programs/2023/projects/8rkqnqNF
Yogendra Jhala - Agora Blockchain,Yogendra Jhala,https://gitlab.com/aossie/agora-blockchain/-/blob/gsoc-2023/docs/GSOC_2023/Yogendra_Jhala.md,"Bruno, Kirti Lodha",AOSSIE,"reactjs, Blockchain, Smart Contract","blockchain, Web3.0","Features that need to be implemented in an Election DAPP to make it more flexible, dynamic and user-friendly. The features include: Improving the backend side of DAPP by implementing more voting algorithms like Range Voting, Ranked Pairs and implementing Gas Optimization Techniques. Improving/adding new features to smart contracts using SOLID Principles during the design of the smart contract. Enhancing support for Open and Invite Election on the client side of DAPP by syncing up the client side completely with the existing/improved backend. Updating UI for Authentication Page, Live Tracking and Tabulation for results and Social media integration after vote cast to improve UI and Sharing feature. Configuring State Management System – Redux. Upgradable smart contract and Diamond smart contract for a future version of dapp.",https://summerofcode.withgoogle.com/programs/2023/projects/Po52cfDY
Dubbo GSoC 2023 - Development of Dubbo Admin Dashboard UI Pages,yongshuai wang,https://github.com/SDUWYS/wys/blob/main/Google%20Summer%20of%20Code%202023%20Development%20of%20Dubbo%20Admin%20Dashboard%20UI%20Pages.md,"Albumen Kevin, Jun, Zhongming Hua",Apache Software Foundation,"javascript, vue",web,"Summary of the Development of Dubbo Admin Dashboard UI Pages: Firstly, I analyzed the specifications of the previous code in order to facilitate subsequent development and maintenance.Secondly, I optimized the functional modules that had already been implemented, and further upgraded some functions to make them more user-friendly.Finally, and most importantly, I analyzed the requirements for the new function, read through interface documents, implemented the interface, performed data joint debugging, and ultimately completed all functions and tested their functionality.",https://summerofcode.withgoogle.com/programs/2023/projects/tpu64rbb
"Enhance Selection, Viz & Automation",Yufan Fei,https://faye-yufan.github.io/gsoc22-animint/2023-11-04-gsoc23-summary/,"Toby Dylan Hocking, Faizan Uddin Fahad Khan",R project for statistical computing,"javascript, r","web, data visualization, Automated Testing, R, Interactive Viz","My objective is to enhance the Animint2 package through the introduction of new features, refining data visualization functions, reworking the code for dynamic data visualization, updating the testing suite, and resolving bugs. I have divided the project into several stages, beginning with the creation of fill_off and size_off functionality and moving on to the incorporation of GitHub Actions for the automated testing and deployment of the Animint book. Additional tasks involve relocating the update_axes computations to the renderer and developing the animint2pages function. Throughout the project, I will ensure proper code submission and testing by employing GitHub, unit tests, and continuous integration tools.",https://summerofcode.withgoogle.com/programs/2023/projects/gSnkWAl3
Point Cloud Compression,Yuhang Wang,https://github.com/opencv/opencv/pull/24197,Wanli,OpenCV,"c++, 3D data processing algorithms, Coding and decoding","compression, 3D vision, point cloud","This project aims to implement point cloud compression algorithm in OpenCV. This project intends to adopt octree as the data structure carrying point cloud. Then, octree is encoded by a variety of coding methods. The encoded result is the compressed point cloud data. deliverables: A point cloud compression algorithm with optional precision support. The relevant functions in the algorithm adhere to the OpenCV code style. A clear explanation document and emample will be provided.",https://summerofcode.withgoogle.com/programs/2023/projects/EDhcx6Ga
Enhancing llvm-cov to Generate Hierarchical Coverage Reports,Yuhao Gu,https://docs.google.com/presentation/d/1G9HG_L3ATLsBRLyYuVpMWO5JqJEwm6FWwyl2S3HRGBQ,"Petr Hosek, Gulfem Savrun Yeniceri",LLVM Compiler Infrastructure,"llvm, c++, html","testing, Code Coverage, llvm-cov",Clang supports source-based coverage that shows which lines of code are covered by the executed tests. It uses llvm-cov to generate coverage reports. llvm-cov currently generates a single top-level index HTML/TEXT file. This causes rendering scalability issues in large projects. This project adds a new option `-show-directory-coverage` to llvm-cov which enables the generation of a hierarchical report mirroring the directory structure and solve scalability issues.,https://summerofcode.withgoogle.com/programs/2023/projects/ghJRTsUJ
Enhancement of quote pattern matching in Scala 3,Yuito Murase,https://gist.github.com/zeptometer/ad414dda221a9f9f99e4135b6b5c1c3c,"Anatolii Kmetiuk, Nicolas Stucki",Scala Center,Scala 3,"programming languages, type system, compiler, Macros, metaprogramming, pattern matching","Macro is a metaprogramming feature that allows programmers to analyze and synthesize code at compile-time. Scala 3 supports a powerful yet type-safe macro system that allows analysis of the structure of code fragments via quote pattern matching. In this project, we aim for two goals: 1. The current implementation of quote pattern matching does not have many tests and is expected to be unstable. I propose making the feature more reliable by creating a checklist that captures which language features should be supported and adding more automated tests based on the checklist. 2. The current quote pattern matching does not support extraction of polymorphic functions. I propose extending HOAS patterns to support pattern matching against polymorphic functions based on formal definitions.",https://summerofcode.withgoogle.com/programs/2023/projects/HrgsKlyn
Visualization with QuTiP,Yuji Tamakoshi,https://tamakoshi2001.github.io/2023/08/24/Final-Report-for-Visualization-with-QuTiP.html,"Ericgig, Neill",NumFOCUS,python,"graphics, scientific computing","QuTiP has a lot of visualization functions, but they are sometimes not user-friendly in that colors are unchangeable and arguments are not organized. This project aims to improve them. This project will enhance existing functions by unifying the interface and adding colorblind options for all of them. Additionally, the project will develop an animation function for the evolution of quantum states. The deliverable consists of unified interfaces for plot functions that have colorblind support, animation functions for the Result object, and pytests and documents for all of them.",https://summerofcode.withgoogle.com/programs/2023/projects/TV6us9ou
[GSoC][Doris]Dictionary Encoding Acceleration,Yukang Lian,https://docs.google.com/document/d/1Kx_0rW7RqBerHXugttQhHKv3KpRFDEh7fZ2Hiafh69o/edit,"Chen Zhang, Zaki Lu",Apache Software Foundation,"c++, OLAP database",database,"Problem description: In Apache Doris, dictionary encoding is performed during data writing and compaction. Dictionary encoding will be implemented on string data types by default. The dictionary size of a column for one segment is 1M at most. The dictionary encoding technology accelerates strings during queries. The plans for this problem: 1. Use automated coding methods to improve efficiency 2. Optimize dictionary memory Deliverables: Some PRs for query layer dictionary memory optimization. Some PRs for storage layer coding method optimization. Monitoring items for storage layer memory. Proper documentation and tests for the above-mentioned components.",https://summerofcode.withgoogle.com/programs/2023/projects/D02XRff5
Autocompletion in Clang-REPL,Yuquan Fu,https://www.syntaxforge.net/clang-repl-cc/,Vassil Vassilev,LLVM Compiler Infrastructure,"llvm, c++",compiler,"Clang-REPL enables developers to program in C++ in an exploratory manner via a read-eval-print-loop. Developers, however, have to type each letter or symbol in the REPL, which likely causes typos. The auto-completion we are proposing aims to assist developers in avoiding that laborious typing, and it is also type-directed in that completion candidates are well-typed with respect to cursor positions. The project incorporates the completion infrastructure of Cling into Clang-REPL. Next, we build components that handle type contexts and subtyping. Lastly, we combine the completion and type-related components to deliver the type-directed auto-completion in Clang-REPL.",https://summerofcode.withgoogle.com/programs/2023/projects/Gxg82Pvd
Automated Test Case Reduction for SQLancer with delta-debugging and SQL parser-tree transforms,Yutan Yang,https://gist.github.com/ColinYoungTaro/df271b8683b526a6a73b568ce721b5e2,Yichen Yan,SQLancer,"java, sql, database","testing, database","SQLancer randomly generates test cases consisting of potentially hundreds or thousands of SQL statements. In order to efficiently identify bugs in these statements, automatic reduction is needed to systematically remove the bug inducing statements until a minimal bug-triggering test case is derived. To improve the efficiency and effectiveness of SQLancer for bug detection and resolution in various DBMSs, I propose to undertake the following tasks: 1. Implement delta-debugging algorithms for statement reduction in SQLancer to improve efficiency and speed. 2. Define parser-tree transforms to simplify SQL statements. Since SQL syntax varies among DBMSs, generic parser-tree transforms that can be applied across multiple DBMSs will be implemented, such as removing expression nodes or removing certain clauses from the statement. 3. Generalize statement reduction to additional DBMSs by adding bug reproducers to them. The deliverables for this project include: 1. A delta-debugging algorithm that can reduce the bug-inducing statement. 2. Generic parser-tree transforms that simplify SQL statements. 3. Support of statement reduction for more DBMSs.",https://summerofcode.withgoogle.com/programs/2023/projects/MYC1ttkZ
x86_64 Assembly code for VVC decoding filters,zackerthescar,https://gist.github.com/zackerthescar/ebcc5c0accaeeb2dd95c066b4345e121,"J. Dekker, Nuo Mi",FFmpeg,"VVC, x86_64 Assembly, AVX2","assembly, Video Decoding, Video Codecs","Versatile Video Codec (a.k.a VVC, H.266) is the successor to the popular High Efficiency Video Codec (a.k.a HEVC, H.265) video compression standard. In anticipation of industry adoption, the FFmpeg community has embarked on the ffvvc project, aiming to bring a VVC decoder into FFmpeg, the open source multimedia processing framework. FFmpeg is the backbone to many open source multimedia technologies, so a high-performance VVC decoder in FFmpeg will allow many other projects to process VVC-encoded video without the baggage of closed-source decoders. While modern compilers like Clang and GCC can employ tons of optimization techniques to speed up a compiled program, compilers are still not capible of generating high-performance code for DSP and video processing workloads. Modern compilers also struggle with the SIMD extensions introduced by CPU manufacturers, such as the AVX2 extensions released by Intel in 2014. These SIMD extensions massively improve performance in DSP and video processing workloads, and FFmpeg's HEVC decoder already employs AVX2 SIMD instructions to improve performance. Given that previous work into writing HEVC decoding filters in x86_64 assembly with SIMD instructed yielded tangible performance improvements, this proposal aims to implement the VVC deblocking filter in x86_64 assembly to improve the ffvvc decoder's performance on x86_64 processors.",https://summerofcode.withgoogle.com/programs/2023/projects/0ffpwy0b
ScaleBugs: Reproducible Scalability Bugs,Zahra Nabila,https://docs.google.com/document/d/1CS6qakeO63ZcAtZqTFCesazY4FJ73DOk3-1nBh-JYMw/edit?usp=sharing,"Haryadi Gunawi, Cindy Rubio-González",UC OSPO,"java, docker, Phyton, linux shell","reproducibility, Scalability systems, bug patterns, bug dataset","High-performance computing (HPC) data centers tend to have hundreds to thousands of nodes in their clusters. The use of “extreme-scale” distributed systems has given birth to a new type of bug: scalability bugs, bugs that depending on the scale of a run, and thus, symptoms may only be observable in large-scale deployments, but not in small or median deployments. The symptom is not observed unless ~1000 nodes are deployed, making scalability bugs challenging to reproduce and fix. The goal of this project is to build a dataset of reproducible scalability bugs. To achieve this, studying the bugs in detail to understand the root causes, behavior and impact on the performance system and craft workloads designed to trigger the functionalities of the system under different configurations (e.g.different numbers of nodes) is needed to reproduce these scalability bugs. Having a dataset of reproducible bugs can help in developing better testing and validation strategies for scalable systems to ensure that they work as expected under different scales. Also to provide a resource for researchers and developers to study and address scalability bugs and contribute to the improvement of the reliability and efficiency of scalable distributed systems.",https://summerofcode.withgoogle.com/programs/2023/projects/gRTEbm7c
Improving Icon-O-Matic,Zardshard,https://www.haiku-os.org/blog/zardshard/2023-08-18_gsoc_2023_improving_icon-o-matic_final_report/,"PulkoMandy, Humdinger",Haiku,c++,Application Development,"This project aims to improve Icon-O-Matic by refactoring the code, adding new features, and fixing bugs. Features that will be added include reference images, shape previews, and, if possible, the ability to group shapes. Bugs that will be fixed include Tracker and Icon-O-Matic displaying gradients differently, potentially a bug in gradients not respecting their bounding box, and various other bugs.",https://summerofcode.withgoogle.com/programs/2023/projects/MP7NTIOV
Addition of support for NWChem to the ccinput package,Žarko Ivković,https://gist.github.com/zarkoivkovicc/c3c54b1dcba202d03cb06c12b0f0f356,"Raphaël Robidas, Claude Legault",Open Chemistry,python,"automation, computational chemistry, quantum chemistry","The necessity of having an application for the automated generation of input files for computational chemistry codes is evident. The ccinput is an open-source command line tool and a python library. NW Chem is a popular, open-source software used in computational chemistry for many different areas. It’s free, easy to install, and can perform the vast majority of calculations any chemist might need. Therefore, I propose contributing to ccinput by adding a possibility to generate input files for NW Chem for main calculations.",https://summerofcode.withgoogle.com/programs/2023/projects/8EJMdhl3
Geo Filtering by Polygon or Multipolygon,Zein,https://github.com/qdrant/qdrant/issues/795,Arnaud Gourlay,Qdrant,rust,"database, Search Engines","At present, selecting a radius or bounding box to cover a desired region and then filtering the retrieved points is a viable option for narrowing down results by a specific region of interest. However, this method can become sluggish when dealing with expansive areas and entails handling location data separately in a database. Introducing a more efficient feature for intricate geo-filters would 1) speed up the process, 2) create opportunities for novel applications, 3) open the door for further opportunities of optimization. Such a feature would be particularly beneficial for Qdrant's users dealing with vast data sets or intricate geometries",https://summerofcode.withgoogle.com/programs/2023/projects/OOFGDBMY
GSoC 2023 Proposal: Wikidocumentaries to import images from the web to Structured Data on Commons,Zexi Gong,https://www.mediawiki.org/wiki/User:Zexi.gong721/Final_Report,Susanna Ånäs,Wikimedia Foundation,"javascript, vue, Structured Data on Commons",Structured Data on Commons,"The project aims to establish a complete workflow for retrieving media related to a currently viewed topic in Wikidocumentaries from a given media repository and uploading it to Wikimedia Commons while adding structured data statements. The project includes following tasks: • Develop or modify the API script for the intended media repository. • Format the retrieved information and present properly in Wikidocumentaries. • Enable the user to choose and upload images. • Authenticate with Wikimedia Commons. • Upload the selected media files to Wikimedia Commons and categorize them based on the available information. • Generate Structured Data statements by utilizing the information obtained from both the corresponding Wikidata item and the original source. The successful completion of this workflow will enable the creation of further tools to enrich the data of the uploaded content. In summary, this project intends to provide a more streamlined and user-friendly way for users to find and contribute open content to Wikimedia. Mentors: @TuukkaH @Susannaanas",https://summerofcode.withgoogle.com/programs/2023/projects/5pubQovx
Arm CCA Support for Unikraft,Zhang Xingjian,https://github.com/unikraft/gsoc/blob/staging/gsoc-2023/work-product/Xingjian-Zhang-Arm-CCA-Support/Xingjian-Zhang-Arm-CCA-Support.md,"Vlad Badoiu, Hugo Lefeuvre, Maria Sfîrăială, Răzvan Vîrtan, Michalis E. Pappas",Unikraft,"C, Arm assembly","Unikernel, Security, Confidential Computing","This project aims to add Arm Arm Confidential Computing Architecture (CCA) support to the Unikraft ecosystem, which is a step of “Unikraft as the Secure Configurable Unikernel”. Arm CCA is introduced in Arm v9 and it introduces new hardware features to make OS run as a confidential VM without trusting the underlying hypervisor. To achieve this goal, this project needs to finish the following tasks: 1) making CCA an option for Unikraft and adding support for necessary RSI commands; 2) preparing the FVP environment; 3) Adding support for more advanced features like attestation and memory encryption; 4) testing the project using several applications.",https://summerofcode.withgoogle.com/programs/2023/projects/5oKH0o5n
Implement a user-friendly Web UI for Nautilus,Zhekang Xu,https://github.com/openzim/nautilus-webui,"Stephane, rgaudin",Kiwix,"python, flask, vue.js",web,"Kiwix is useful because it can provide a lot of content to people without internet access. Therefore, the easiest it is to generate content that is available offline, the more users can be reached. Nautilus is a powerful tool for creating ZIM files from collections of documents (PDF files, videos, etc.), but it currently requires the user to run commands from the command line. This makes it challenging for users (usually schools) who are not familiar with the command line or who prefer a graphical user interface. The goal of this project is to build a web-based user interface for Nautilus, making it easier for users to convert their collections of documents into browsable ZIM files. The web UI will be built using Python, JavaScript, HTML, and CSS and will provide an intuitive and user-friendly interface for Nautilus.",https://summerofcode.withgoogle.com/programs/2023/projects/fvvrDjwz
Adding Support for and Testing New Database Systems,Zhenglin Li,https://docs.google.com/document/d/1XBVfTxIowdyAxpO14UXHj0KKRJIpo4NrsC7qIAbGlS8/edit?usp=sharing,Jinsheng Ba,SQLancer,"java, sql, git, StoneDB",databases,"SQLancer is an open-source tool for testing the correctness of SQL database systems and supports close to 20 database systems. The goal of this project is to add support for one or more new database systems to SQLancer and test them to find potential bugs. As for which DBMS to add support for, I would like to firstly choose StoneDB, which is being actively maintained and their community showed their interest of being support by SQLancer. What’s more, StoneDB is just the primary choose. If we have time, we can also add support to other DBMS. The project Proposal will consist of four main stages: 1)Choose a DBMS 2)Implementation of selected DBMS 3)Refactoring existing code 4)Testing and reporting",https://summerofcode.withgoogle.com/programs/2023/projects/cLw871Fm
Monitoring for pgmoneta,Zhengshun Lin,https://github.com/pgmoneta/pgmoneta/issues/133,Jesper Pedersen,PostgreSQL,"c, postgresql",database,"In this project, we will expand metrics to help users observe the running status of pgmoneta and each server at any time. Additionally, a large amount of numerical data is not convenient for users to intuitively see patterns between data. We will design Grafana dashboard to visualize the collected Prometheus metrics.",https://summerofcode.withgoogle.com/programs/2023/projects/eSPk3WGm
Enhanced optimization solver interfaces for Sage,Zhongling Xu,https://docs.google.com/document/d/15RI1gI85ekOQeUJetFdlwS_Kmuc9m0jOjQc4_UdgLZg/edit?usp=sharing,Matthias Koeppe,SageMath,"python, cython",Enhanced optimization solver interfaces for Sage,"This project aims at improving the optimization capabilities of SageMath by connecting SageMath to interfaces to optimization solvers that are maintained outside of the Sage project. The goal is mainly achieved by replacing existing templates for solver backends and adding backends of selected solvers as well as testing and documenting for them. Several stages of development will be involved in this project, including deciding which issues to work on, solver selection based on in-depth investigation, code implementation and modification, testing, documenting and logging. Some steps of these will be iterated over and over to achieve consensus and approval under peer review until finalized. In general, we hope that the implementations of this coding project will empower more advanced research and applications regarding optimization and solver interface integration. The project is expected to have a significant impact on the optimization capabilities of SageMath, making it a more powerful and flexible tool for mathematical research and education.",https://summerofcode.withgoogle.com/programs/2023/projects/tBkLOJ5z
DirtViz 2.0 - A web-based dataviz tool for sensor networks,Zhouyixian Li,https://github.com/jlab-sensing/DirtViz/tree/reformat-charts,Colleen Josephson,UC OSPO,"Skills: javascript, python, bash, webservers, git, embedded systems","Skills: javascript, python, bash, webservers, git, embedded systems","DirtViz 2.0 is a proposed project that aims to enhance the capabilities of DirtViz 1.0, a data visualization tool for sensor networks. The new version will have an enhanced user interface, improved visualization capabilities, and a secure data upload system. The project will be implemented using a combination of JavaScript, Python, and other relevant technologies. We believe that this project will benefit the community by providing an open-source tool for visualizing data from sensor networks.",https://summerofcode.withgoogle.com/programs/2023/projects/wCyITjfo
Decentralized vulnerability data peer-review,ziad hany,https://medium.com/@ziadhany2016/gsoc-2023-work-report-gsoc-again-431cf5b9436a,"Philippe Ombredanne, Keshav Priyadarshi, TG1999",AboutCode,"python, postgresql, django, git, jquery",web,"Software packages vulnerabilities : let's say we have a security team that wants to track new vulnerabilities in the open source software packages , the security team subscribe to the account of each package by package-url then security teams review the new vulnerability information and validate the package vulnerable version range of x database by posting reviews and comments . Every project could get its own ActivityPub account .The security teams could get their own using any ActivityPub server .",https://summerofcode.withgoogle.com/programs/2023/projects/KJcxgoj5
Implement Incremental Re-Parsing in SwiftParser,Ziyang Huang,https://gist.github.com/StevenWong12/8a5fd948f0b4957267a69140b188ab6e,Alex Hoppen,Swift,swift,"parser, Swift, Incremental Parsing","Considering the performance, instead of reparsing the entire file every time, we could speed up the parsing procedure with the information provided by old AST, which is an ability provided by the old parser. In the old implementation, this feature was only applied to CodeBlockList and MemberDeclList. In the new implementation, It would be nice to apply node reusing to other syntax collections e.g. exprList, functionParameterList, etc. Also, It would be good to allow more fine-grained reusable nodes via expanding the definition of nodeAtCursorCanBeReused to allow reusing nodes such as FunctionDeclSyntax where only identifier is changed.",https://summerofcode.withgoogle.com/programs/2023/projects/youSUzrO
Development of a Modular and Composable Variational Inference and Normalizing Flow Library for Julia,Zuheng (David) Xu,https://github.com/TuringLang/NormalizingFlows.jl,"Xianda Sun, Tor Erlend Fjelde",The Julia Language,julia,"Variational Inference, Bayesian computation, GPU and Batch support of Bijectors.jl","We propose to create a modular and composable library for variational inference and normalizing flow methods that emphasizes GPU compatibility and seamless integration with the Julia autograd ecosystem. The goal is to develop a user-friendly library that allows researchers and practitioners to easily construct and combine various components for variational approximation of general target distributions, without being tied to specific probabilistic programming frameworks or applications. Turing.jl's Bijectors.jl package offers an outstanding interface for working with normalizing flows; our project will build upon the foundation of Bijectors.jl to further enhance its capabilities and applicability. However, the current design of Bijectors.jl has several limitations such as lack of full GPU compatibility, lack of batch support, etc. Thefore, the main tasks of our projects are to address these limitations for Bijectors.jl, as well as developing the variational inference library.",https://summerofcode.withgoogle.com/programs/2023/projects/IE6teU9f
